{"version":3,"file":"971.js","mappings":"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","sources":["./src/app/admin/pages/admin-manager/admin-manager-routing.module.ts","./src/app/admin/pages/admin-manager/admin-manager.module.ts","./src/app/admin/pages/admin-manager/layout/admin-manager.component.ts","./src/app/admin/pages/admin-manager/layout/admin-manager.component.html","./src/app/admin/pages/admin-manager/shared/services/admin-manager.service.ts","./src/app/core/helpers/validator/only-number.ts","./node_modules/@angular/cdk/fesm2015/clipboard.mjs","./node_modules/@angular/cdk/fesm2015/table.mjs","./node_modules/@angular/material/fesm2015/table.mjs"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AdminManagerComponent } from \"./layout/admin-manager.component\";\n\nconst routes: Routes = [\n\t{\n\t\tpath: \"\",\n\t\tcomponent: AdminManagerComponent,\n\t},\n];\n\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule],\n})\nexport class AdminManagerRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { AdminManagerRoutingModule } from \"./admin-manager-routing.module\";\nimport { AdminManagerComponent } from \"./layout/admin-manager.component\";\nimport { B2bNgxInputModule } from \"@b2b/ngx-input\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { B2bNgxButtonModule } from \"@b2b/ngx-button\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport {B2bNgxIconModule} from \"@b2b/ngx-icon\";\n\n@NgModule({\n\tdeclarations: [AdminManagerComponent],\n    imports: [\n        CommonModule,\n        AdminManagerRoutingModule,\n        B2bNgxInputModule,\n        ReactiveFormsModule,\n        B2bNgxButtonModule,\n        FormsModule,\n        B2bNgxInputModule,\n        MatTableModule,\n        B2bNgxIconModule,\n    ],\n})\nexport class AdminManagerModule {}\n","import { ChangeDetectorRef, Component, OnInit } from \"@angular/core\";\nimport { B2bNgxButtonThemeEnum } from \"@b2b/ngx-button\";\nimport { B2bNgxInputThemeEnum } from \"@b2b/ngx-input\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Clipboard } from \"@angular/cdk/clipboard\";\nimport { HotToastService } from \"@ngneat/hot-toast\";\nimport { AdminManagerService } from \"../shared/services/admin-manager.service\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\nimport { onlyNumber } from \"../../../../core/helpers/validator/only-number\";\nimport { getName } from \"country-list\";\n\n@UntilDestroy()\n@Component({\n\tselector: \"b2b-admin-manager\",\n\ttemplateUrl: \"./admin-manager.component.html\",\n\tstyleUrls: [\"./admin-manager.component.scss\"],\n})\nexport class AdminManagerComponent implements OnInit {\n\tpublic b2bNgxInputThemeEnum = B2bNgxInputThemeEnum;\n\tpublic b2bNgxButtonThemeEnum = B2bNgxButtonThemeEnum;\n\n\tpublic managersList: any[] = [];\n\tpublic userList: any[] = [];\n\tpublic displayedColumnsManagers: string[] = [\"refId\", \"firstName\", \"lastName\", \"delete\"];\n\tpublic displayedColumnsUsers: string[] = [\"email\", \"registrationType\", \"country\", \"registrationDate\", \"company\"];\n\tpublic generatedLink: string = \"\";\n\tpublic formGroup: FormGroup = this.formBuilder.group({\n\t\tfirstName: [null, Validators.required],\n\t\tlastName: [null, Validators.required],\n\t\turl: [null, Validators.required]\n\t});\n\n\tpublic usersByRefIdGroup: FormGroup = this.formBuilder.group({\n\t\trefId: [null, [Validators.required, onlyNumber()]],\n\t});\n\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate clipboard: Clipboard,\n\t\tprivate hotToastService: HotToastService,\n\t\tprivate adminManagerService: AdminManagerService,\n\t\tprivate changeDetectionRef: ChangeDetectorRef\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.updateManagerList();\n\t}\n\n\tpublic generateLink(formGroup: FormGroup): void {\n\t\tif (!formGroup.valid) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.adminManagerService\n\t\t\t.addManager(formGroup.value.firstName, formGroup.value.lastName, formGroup.value.url)\n\t\t\t.pipe(untilDestroyed(this))\n\t\t\t.subscribe((data) => {\n\t\t\t\tthis.generatedLink = data.link;\n\t\t\t\tthis.updateManagerList();\n\t\t\t\tthis.changeDetectionRef.detectChanges();\n\t\t\t});\n\n\t\tthis.formGroup.reset();\n\t\tthis.updateManagerList();\n\t}\n\n\tpublic getUsersByRefId(formGroup: FormGroup): void {\n\t\tif (!formGroup.valid) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.adminManagerService.getUsersByRefId(parseInt(formGroup.value.refId)).subscribe((data) => {\n\t\t\tif (!data.length) {\n\t\t\t\tthis.hotToastService.show(\"There's no users found with current refId\", {\n\t\t\t\t\tdismissible: true,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tborder: \"1px solid #3D48E6\",\n\t\t\t\t\t},\n\t\t\t\t\tautoClose: true,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.userList = data[0].users;\n\t\t\tthis.changeDetectionRef.detectChanges();\n\t\t});\n\t}\n\n\tpublic isApproved(products: Array<any>): boolean {\n\t\t\treturn products.some(product => product.productApproved);\n\t}\n\n\tpublic copyLink(link: string = this.generatedLink): void {\n\t\tthis.clipboard.copy(link);\n\t\tthis.hotToastService.show(\"Link copied to clipboard\", {\n\t\t\tdismissible: true,\n\t\t\tstyle: {\n\t\t\t\tborder: \"1px solid #3D48E6\",\n\t\t\t},\n\t\t\tautoClose: true,\n\t\t});\n\t}\n\n\tpublic deleteManager(refId: string): void {\n\t\tthis.adminManagerService.deleteManagerById(refId).subscribe(() => this.updateManagerList());\n\t}\n\n\tpublic getCountryNameByCode(countryCode: string): string {\n\t\treturn countryCode ? getName(countryCode) : \"\";\n\t}\n\n\tprivate updateManagerList(): void {\n\t\tthis.adminManagerService.getManagers().subscribe((data) => {\n\t\t\tthis.managersList = data;\n\t\t\tthis.changeDetectionRef.detectChanges();\n\t\t});\n\t}\n}\n","<div class=\"admin-manager\">\n\t<form class=\"admin-manager__form-group\" [formGroup]=\"formGroup\" (ngSubmit)=\"generateLink(formGroup)\">\n\t\t<div class=\"admin-manager__form-group__container\">\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tb2bNgxInput\n\t\t\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_WHITE\"\n\t\t\t\t\tformControlName=\"firstName\"\n\t\t\t\t\tplaceholder=\"First name\"\n\t\t\t\t\tlabel=\"Enter first name\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tb2bNgxInput\n\t\t\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_WHITE\"\n\t\t\t\t\tformControlName=\"lastName\"\n\t\t\t\t\tplaceholder=\"Second name\"\n\t\t\t\t\tlabel=\"Enter second name\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<input type=\"text\" b2bNgxInput\n\t\t\t\t\t [theme]=\"b2bNgxInputThemeEnum.BACKGROUND_WHITE\"\n\t\t\t\t\t formControlName=\"url\"\n\t\t\t\t\t placeholder=\"https://b2b.discount/blog\"\n\t\t\t\t\t label=\"Enter the link for which the ref will be generated\"\n\t\t\t\t\t class=\"mb-3\">\n\t\t<button b2bNgxButton [theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLACK\">Generate Link</button>\n\t</form>\n\n\t<div class=\"admin-manager__generated-link\">\n\t\t<input\n\t\t\tb2bNgxInput\n\t\t\t[(ngModel)]=\"generatedLink\"\n\t\t\tdisabled\n\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_WHITE\"\n\t\t\tplaceholder=\"Here will be generated link\" />\n\t\t<button\n\t\t\tb2bNgxButton\n\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLACK\"\n\t\t\t(click)=\"copyLink()\"\n\t\t\t[disabled]=\"!generatedLink\">\n\t\t\tCopy URL\n\t\t</button>\n\t</div>\n\n\t<table mat-table [dataSource]=\"managersList\" class=\"mat-elevation-z8\">\n\t\t<ng-container matColumnDef=\"refId\">\n\t\t\t<th class=\"th-id\" mat-header-cell *matHeaderCellDef>Ref Id</th>\n\t\t\t<td mat-cell *matCellDef=\"let element\" (click)=\"copyLink(element.link)\">\n\t\t\t\t{{ element.refId }}\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"firstName\">\n\t\t\t<th class=\"th-firstName\" mat-header-cell *matHeaderCellDef>First Name</th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">{{ element.firstName }}</td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"lastName\">\n\t\t\t<th class=\"th-lastName\" mat-header-cell *matHeaderCellDef>Last Name</th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">{{ element.lastName }}</td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"delete\">\n\t\t\t<th class=\"th-firstName\" mat-header-cell *matHeaderCellDef></th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">\n\t\t\t\t<button\n\t\t\t\t\tclass=\"delete-btn\"\n\t\t\t\t\tb2bNgxButton\n\t\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_RED\"\n\t\t\t\t\t(click)=\"deleteManager(element.refId)\">\n\t\t\t\t\tDelete\n\t\t\t\t</button>\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<tr mat-header-row *matHeaderRowDef=\"displayedColumnsManagers\"></tr>\n\t\t<tr mat-row *matRowDef=\"let row; columns: displayedColumnsManagers\"></tr>\n\t</table>\n\n\t<form\n\t\tclass=\"admin-manager__generated-link\"\n\t\t[formGroup]=\"usersByRefIdGroup\"\n\t\t(ngSubmit)=\"getUsersByRefId(usersByRefIdGroup)\">\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tb2bNgxInput\n\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_WHITE\"\n\t\t\tformControlName=\"refId\"\n\t\t\tplaceholder=\"Ref id\" />\n\t\t<button b2bNgxButton [theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLACK\">Submit</button>\n\t</form>\n\t<div *ngIf=\"userList.length\">Total count: {{ userList.length }}</div>\n\n\t<table *ngIf=\"userList?.length\" mat-table [dataSource]=\"userList\" class=\"mat-elevation-z8 w-100\">\n\t\t<ng-container matColumnDef=\"email\">\n\t\t\t<th class=\"th-firstName\" mat-header-cell *matHeaderCellDef>Email</th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">\n\t\t\t\t{{ element.email }}\n\n\t\t\t\t<img *ngIf=\"element.products?.length && isApproved(element.products)\" b2bNgxIcon [name]=\"'check-blue'\" />\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"registrationType\">\n\t\t\t<th class=\"th-firstName\" mat-header-cell *matHeaderCellDef>Registration type</th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">\n\t\t\t\t{{ element.typeRegistration }}\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"country\">\n\t\t\t<th class=\"th-firstName\" mat-header-cell *matHeaderCellDef>Country</th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">\n\t\t\t\t{{ getCountryNameByCode(element.userData[0]?.phone?.countryCode) }}\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"registrationDate\">\n\t\t\t<th class=\"th-firstName\" mat-header-cell *matHeaderCellDef>Registration date</th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">\n\t\t\t\t{{ element.userData[0]?.createdAt | date: \"MM/d/yy\" }}\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"company\">\n\t\t\t<th class=\"th-firstName\" mat-header-cell *matHeaderCellDef>Company name</th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">\n\t\t\t\t{{ element?.userData[0]?.company }}\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<tr mat-header-row *matHeaderRowDef=\"displayedColumnsUsers\"></tr>\n\t\t<tr mat-row *matRowDef=\"let row; columns: displayedColumnsUsers\"></tr>\n\t</table>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpEvent } from \"@angular/common/http\";\n\nimport { Observable } from \"rxjs\";\n\nimport { ApiService } from \"../../../../../core/services/api/api.service\";\n\nexport interface Manager {\n\tfirstName: string;\n\trefId: number;\n\tlastName: string;\n}\n\n@Injectable({\n\tprovidedIn: \"root\",\n})\nexport class AdminManagerService {\n\tconstructor(private apiService: ApiService) {}\n\n\tpublic addManager(firstName: string, lastName: string, url: string): Observable<any> {\n\t\treturn this.apiService.post(\"managers/add-new-manager\", { firstName, lastName, url });\n\t}\n\n\tpublic getUsersByRefId(refId: number): Observable<any> {\n\t\treturn this.apiService.get(`statistics/get-users-list?refId=${refId}`);\n\t}\n\n\tpublic deleteManagerById(refId: string): Observable<any> {\n\t\treturn this.apiService.delete(`managers/delete-manager?refId=${refId}`);\n\t}\n\n\tpublic getManagers(refId?: string): Observable<any> {\n\t\tif (refId) {\n\t\t\treturn this.apiService.get(`managers/get-managers?refId=${refId}`);\n\t\t} else {\n\t\t\treturn this.apiService.get(\"managers/get-managers\");\n\t\t}\n\t}\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport function onlyNumber(): ValidatorFn {\n\treturn (control: AbstractControl): ValidationErrors | null =>\n\t\t/^[0-9.]*$/g.test(control.value) ? null : { number: true };\n}\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, EventEmitter, Directive, Optional, Input, Output, NgModule } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a re-layout. This re-layout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * re-layout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nclass PendingCopy {\n    constructor(text, _document) {\n        this._document = _document;\n        const textarea = (this._textarea = this._document.createElement('textarea'));\n        const styles = textarea.style;\n        // Hide the element for display and accessibility. Set a fixed position so the page layout\n        // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n        // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n        styles.position = 'fixed';\n        styles.top = styles.opacity = '0';\n        styles.left = '-999em';\n        textarea.setAttribute('aria-hidden', 'true');\n        textarea.value = text;\n        // Making the textarea `readonly` prevents the screen from jumping on iOS Safari (see #25169).\n        textarea.readOnly = true;\n        this._document.body.appendChild(textarea);\n    }\n    /** Finishes copying the text. */\n    copy() {\n        const textarea = this._textarea;\n        let successful = false;\n        try {\n            // Older browsers could throw if copy is not supported.\n            if (textarea) {\n                const currentFocus = this._document.activeElement;\n                textarea.select();\n                textarea.setSelectionRange(0, textarea.value.length);\n                successful = this._document.execCommand('copy');\n                if (currentFocus) {\n                    currentFocus.focus();\n                }\n            }\n        }\n        catch (_a) {\n            // Discard error.\n            // Initial setting of {@code successful} will represent failure here.\n        }\n        return successful;\n    }\n    /** Cleans up DOM changes used to perform the copy operation. */\n    destroy() {\n        const textarea = this._textarea;\n        if (textarea) {\n            textarea.remove();\n            this._textarea = undefined;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A service for copying text to the clipboard.\n */\nclass Clipboard {\n    constructor(document) {\n        this._document = document;\n    }\n    /**\n     * Copies the provided text into the user's clipboard.\n     *\n     * @param text The string to copy.\n     * @returns Whether the operation was successful.\n     */\n    copy(text) {\n        const pendingCopy = this.beginCopy(text);\n        const successful = pendingCopy.copy();\n        pendingCopy.destroy();\n        return successful;\n    }\n    /**\n     * Prepares a string to be copied later. This is useful for large strings\n     * which take too long to successfully render and be copied in the same tick.\n     *\n     * The caller must call `destroy` on the returned `PendingCopy`.\n     *\n     * @param text The string to copy.\n     * @returns the pending copy operation.\n     */\n    beginCopy(text) {\n        return new PendingCopy(text, this._document);\n    }\n}\nClipboard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Clipboard, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nClipboard.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Clipboard, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Clipboard, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options to `CdkCopyToClipboard`. */\nconst CDK_COPY_TO_CLIPBOARD_CONFIG = new InjectionToken('CDK_COPY_TO_CLIPBOARD_CONFIG');\n/**\n * Provides behavior for a button that when clicked copies content into user's\n * clipboard.\n */\nclass CdkCopyToClipboard {\n    constructor(_clipboard, _ngZone, config) {\n        this._clipboard = _clipboard;\n        this._ngZone = _ngZone;\n        /** Content to be copied. */\n        this.text = '';\n        /**\n         * How many times to attempt to copy the text. This may be necessary for longer text, because\n         * the browser needs time to fill an intermediate textarea element and copy the content.\n         */\n        this.attempts = 1;\n        /**\n         * Emits when some text is copied to the clipboard. The\n         * emitted value indicates whether copying was successful.\n         */\n        this.copied = new EventEmitter();\n        /** Copies that are currently being attempted. */\n        this._pending = new Set();\n        if (config && config.attempts != null) {\n            this.attempts = config.attempts;\n        }\n    }\n    /** Copies the current text to the clipboard. */\n    copy(attempts = this.attempts) {\n        if (attempts > 1) {\n            let remainingAttempts = attempts;\n            const pending = this._clipboard.beginCopy(this.text);\n            this._pending.add(pending);\n            const attempt = () => {\n                const successful = pending.copy();\n                if (!successful && --remainingAttempts && !this._destroyed) {\n                    // We use 1 for the timeout since it's more predictable when flushing in unit tests.\n                    this._currentTimeout = this._ngZone.runOutsideAngular(() => setTimeout(attempt, 1));\n                }\n                else {\n                    this._currentTimeout = null;\n                    this._pending.delete(pending);\n                    pending.destroy();\n                    this.copied.emit(successful);\n                }\n            };\n            attempt();\n        }\n        else {\n            this.copied.emit(this._clipboard.copy(this.text));\n        }\n    }\n    ngOnDestroy() {\n        if (this._currentTimeout) {\n            clearTimeout(this._currentTimeout);\n        }\n        this._pending.forEach(copy => copy.destroy());\n        this._pending.clear();\n        this._destroyed = true;\n    }\n}\nCdkCopyToClipboard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkCopyToClipboard, deps: [{ token: Clipboard }, { token: i0.NgZone }, { token: CDK_COPY_TO_CLIPBOARD_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCopyToClipboard.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkCopyToClipboard, selector: \"[cdkCopyToClipboard]\", inputs: { text: [\"cdkCopyToClipboard\", \"text\"], attempts: [\"cdkCopyToClipboardAttempts\", \"attempts\"] }, outputs: { copied: \"cdkCopyToClipboardCopied\" }, host: { listeners: { \"click\": \"copy()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkCopyToClipboard, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkCopyToClipboard]',\n                    host: {\n                        '(click)': 'copy()',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: Clipboard }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_COPY_TO_CLIPBOARD_CONFIG]\n                    }] }];\n    }, propDecorators: { text: [{\n                type: Input,\n                args: ['cdkCopyToClipboard']\n            }], attempts: [{\n                type: Input,\n                args: ['cdkCopyToClipboardAttempts']\n            }], copied: [{\n                type: Output,\n                args: ['cdkCopyToClipboardCopied']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ClipboardModule {\n}\nClipboardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ClipboardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nClipboardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: ClipboardModule, declarations: [CdkCopyToClipboard], exports: [CdkCopyToClipboard] });\nClipboardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ClipboardModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ClipboardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CdkCopyToClipboard],\n                    exports: [CdkCopyToClipboard],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_COPY_TO_CLIPBOARD_CONFIG, CdkCopyToClipboard, Clipboard, ClipboardModule, PendingCopy };\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nexport { DataSource } from '@angular/cdk/collections';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, Input, ContentChild, Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, EventEmitter, NgZone, Attribute, SkipSelf, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/bidi';\nimport * as i2 from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() {\n            return this._sticky;\n        }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkCellDef, selector: \"[cdkCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkHeaderCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkHeaderCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFooterCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkFooterCellDef, selector: \"[cdkFooterCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkFooterCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n}\nCdkColumnDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkColumnDef, deps: [{ token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkColumnDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }], queries: [{ propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true }, { propertyName: \"footerCell\", first: true, predicate: CdkFooterCellDef, descendants: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { name: [{\n                type: Input,\n                args: ['cdkColumnDef']\n            }], stickyEnd: [{\n                type: Input,\n                args: ['stickyEnd']\n            }], cell: [{\n                type: ContentChild,\n                args: [CdkCellDef]\n            }], headerCell: [{\n                type: ContentChild,\n                args: [CdkHeaderCellDef]\n            }], footerCell: [{\n                type: ContentChild,\n                args: [CdkFooterCellDef]\n            }] } });\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        elementRef.nativeElement.classList.add(...columnDef._columnCssClassName);\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkHeaderCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"cdk-header-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-header-cell, th[cdk-header-cell]',\n                    host: {\n                        'class': 'cdk-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        var _a;\n        super(columnDef, elementRef);\n        if (((_a = columnDef._table) === null || _a === void 0 ? void 0 : _a._elementRef.nativeElement.nodeType) === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n}\nCdkFooterCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFooterCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkFooterCell, selector: \"cdk-footer-cell, td[cdk-footer-cell]\", host: { classAttribute: \"cdk-footer-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                    host: {\n                        'class': 'cdk-footer-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        var _a;\n        super(columnDef, elementRef);\n        if (((_a = columnDef._table) === null || _a === void 0 ? void 0 : _a._elementRef.nativeElement.nodeType) === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n}\nCdkCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\", host: { classAttribute: \"cdk-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-cell, td[cdk-cell]',\n                    host: {\n                        'class': 'cdk-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable\n            ? from(Promise.resolve(undefined))\n            : this._ngZone.onStable.pipe(take(1));\n    }\n}\n_CoalescedStyleScheduler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _CoalescedStyleScheduler, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\n_CoalescedStyleScheduler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _CoalescedStyleScheduler });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _CoalescedStyleScheduler, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: BaseRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }], target: i0.ɵɵFactoryTarget.Directive });\nBaseRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: BaseRowDef, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: BaseRowDef, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }]; } });\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkHeaderRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkHeaderRowDef, selector: \"[cdkHeaderRowDef]\", inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkHeaderRowDef]',\n                    inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFooterRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkFooterRowDef, selector: \"[cdkFooterRowDef]\", inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkFooterRowDef]',\n                    inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkRowDef, selector: \"[cdkRowDef]\", inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkRowDef]',\n                    inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkCellOutlet, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCellOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkCellOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; } });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkHeaderRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkHeaderRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkHeaderRow, selector: \"cdk-header-row, tr[cdk-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-header-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-header-row, tr[cdk-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFooterRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkFooterRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkFooterRow, selector: \"cdk-footer-row, tr[cdk-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-footer-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n}\nCdkRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkRow, selector: \"cdk-row, tr[cdk-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-row, tr[cdk-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._contentClassName = 'cdk-no-data-row';\n    }\n}\nCdkNoDataRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkNoDataRow, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkNoDataRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkNoDataRow, selector: \"ng-template[cdkNoDataRow]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkNoDataRow]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length ||\n            !this._isBrowser ||\n            !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1\n                        ? []\n                        : cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => (stickyStartStates[index] ? width : null)),\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1\n                        ? []\n                        : cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => (stickyEndStates[index + firstStickyEnd] ? width : null))\n                            .reverse(),\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            if (!states[rowIndex]) {\n                continue;\n            }\n            stickyOffsets[rowIndex] = stickyOffset;\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable\n                ? Array.from(row.children)\n                : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            var _a, _b;\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n            else {\n                (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an nonexistent column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n}\nCdkRecycleRows.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkRecycleRows.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkRecycleRows, selector: \"cdk-table[recycleRows], table[cdk-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: DataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nDataRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: DataRowOutlet, selector: \"[rowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: DataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[rowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: HeaderRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nHeaderRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: HeaderRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[headerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: FooterRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nFooterRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: FooterRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[footerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nNoDataRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: NoDataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNoDataRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: NoDataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[noDataRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, \n    /**\n     * @deprecated `_stickyPositioningListener` parameter to become required.\n     * @breaking-change 13.0.0\n     */\n    _stickyPositioningListener, \n    /**\n     * @deprecated `_ngZone` parameter to become required.\n     * @breaking-change 14.0.0\n     */\n    _ngZone) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._viewportRuler = _viewportRuler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        this._ngZone = _ngZone;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overridden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add position: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        /**\n         * Emits when the table completes rendering a set of data rows based on the latest data from the\n         * data source, even if the set of rows is empty.\n         */\n        this.contentChanged = new EventEmitter();\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({\n            start: 0,\n            end: Number.MAX_VALUE,\n        });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'table');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n            this._forceRecalculateCellWidths = true;\n        });\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length &&\n            !this._footerRowDefs.length &&\n            !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        [\n            this._rowOutlet.viewContainer,\n            this._headerRowOutlet.viewContainer,\n            this._footerRowOutlet.viewContainer,\n            this._cachedRenderRowsMap,\n            this._customColumnDefs,\n            this._customRowDefs,\n            this._customHeaderRowDefs,\n            this._customFooterRowDefs,\n            this._columnDefsByName,\n        ].forEach(def => {\n            def.clear();\n        });\n        this._headerRowDefs = [];\n        this._footerRowDefs = [];\n        this._defaultRowDef = null;\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            this.contentChanged.next();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, (change) => {\n            if (change.operation === 1 /* _ViewRepeaterOperation.INSERTED */ && change.context) {\n                this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n            }\n        });\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        // Allow the new row data to render before measuring it.\n        // @breaking-change 14.0.0 Remove undefined check once _ngZone is required.\n        if (this._ngZone && NgZone.isInAngularZone()) {\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._onDestroy)).subscribe(() => {\n                this.updateStickyColumnStyles();\n            });\n        }\n        else {\n            this.updateStickyColumnStyles();\n        }\n        this.contentChanged.next();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout) || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows &&\n            defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (!noDataRow) {\n            return;\n        }\n        const shouldShow = this._rowOutlet.viewContainer.length === 0;\n        if (shouldShow === this._isShowingNoDataRow) {\n            return;\n        }\n        const container = this._noDataRowOutlet.viewContainer;\n        if (shouldShow) {\n            const view = container.createEmbeddedView(noDataRow.templateRef);\n            const rootNode = view.rootNodes[0];\n            // Only add the attributes if we have a single root node since it's hard\n            // to figure out which one to add it to when there are multiple.\n            if (view.rootNodes.length === 1 && (rootNode === null || rootNode === void 0 ? void 0 : rootNode.nodeType) === this._document.ELEMENT_NODE) {\n                rootNode.setAttribute('role', 'row');\n                rootNode.classList.add(noDataRow._contentClassName);\n            }\n        }\n        else {\n            container.clear();\n        }\n        this._isShowingNoDataRow = shouldShow;\n    }\n}\nCdkTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTable, deps: [{ token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: 'role', attribute: true }, { token: i1.Directionality, optional: true }, { token: DOCUMENT }, { token: i2.Platform }, { token: _VIEW_REPEATER_STRATEGY }, { token: _COALESCED_STYLE_SCHEDULER }, { token: i3.ViewportRuler }, { token: STICKY_POSITIONING_LISTENER, optional: true, skipSelf: true }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkTable, selector: \"cdk-table, table[cdk-table]\", inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, outputs: { contentChanged: \"contentChanged\" }, host: { properties: { \"class.cdk-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"cdk-table\" }, providers: [\n        { provide: CDK_TABLE, useExisting: CdkTable },\n        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n    ], queries: [{ propertyName: \"_noDataRow\", first: true, predicate: CdkNoDataRow, descendants: true }, { propertyName: \"_contentColumnDefs\", predicate: CdkColumnDef, descendants: true }, { propertyName: \"_contentRowDefs\", predicate: CdkRowDef, descendants: true }, { propertyName: \"_contentHeaderRowDefs\", predicate: CdkHeaderRowDef, descendants: true }, { propertyName: \"_contentFooterRowDefs\", predicate: CdkFooterRowDef, descendants: true }], viewQueries: [{ propertyName: \"_rowOutlet\", first: true, predicate: DataRowOutlet, descendants: true, static: true }, { propertyName: \"_headerRowOutlet\", first: true, predicate: HeaderRowOutlet, descendants: true, static: true }, { propertyName: \"_footerRowOutlet\", first: true, predicate: FooterRowOutlet, descendants: true, static: true }, { propertyName: \"_noDataRowOutlet\", first: true, predicate: NoDataRowOutlet, descendants: true, static: true }], exportAs: [\"cdkTable\"], ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"], dependencies: [{ kind: \"directive\", type: DataRowOutlet, selector: \"[rowOutlet]\" }, { kind: \"directive\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { kind: \"directive\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\" }, { kind: \"directive\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-table, table[cdk-table]', exportAs: 'cdkTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'cdk-table',\n                        '[class.cdk-table-fixed-layout]': 'fixedLayout',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [\n                        { provide: CDK_TABLE, useExisting: CdkTable },\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['role']\n                    }] }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i2.Platform }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [_VIEW_REPEATER_STRATEGY]\n                    }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                        type: Inject,\n                        args: [_COALESCED_STYLE_SCHEDULER]\n                    }] }, { type: i3.ViewportRuler }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }, {\n                        type: Inject,\n                        args: [STICKY_POSITIONING_LISTENER]\n                    }] }, { type: i0.NgZone, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { trackBy: [{\n                type: Input\n            }], dataSource: [{\n                type: Input\n            }], multiTemplateDataRows: [{\n                type: Input\n            }], fixedLayout: [{\n                type: Input\n            }], contentChanged: [{\n                type: Output\n            }], _rowOutlet: [{\n                type: ViewChild,\n                args: [DataRowOutlet, { static: true }]\n            }], _headerRowOutlet: [{\n                type: ViewChild,\n                args: [HeaderRowOutlet, { static: true }]\n            }], _footerRowOutlet: [{\n                type: ViewChild,\n                args: [FooterRowOutlet, { static: true }]\n            }], _noDataRowOutlet: [{\n                type: ViewChild,\n                args: [NoDataRowOutlet, { static: true }]\n            }], _contentColumnDefs: [{\n                type: ContentChildren,\n                args: [CdkColumnDef, { descendants: true }]\n            }], _contentRowDefs: [{\n                type: ContentChildren,\n                args: [CdkRowDef, { descendants: true }]\n            }], _contentHeaderRowDefs: [{\n                type: ContentChildren,\n                args: [CdkHeaderRowDef, {\n                        descendants: true,\n                    }]\n            }], _contentFooterRowDefs: [{\n                type: ContentChildren,\n                args: [CdkFooterRowDef, {\n                        descendants: true,\n                    }]\n            }], _noDataRow: [{\n                type: ContentChild,\n                args: [CdkNoDataRow]\n            }] } });\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTextColumn, deps: [{ token: CdkTable, optional: true }, { token: TEXT_COLUMN_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkTextColumn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkTextColumn, selector: \"cdk-text-column\", inputs: { name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\", justify: \"justify\" }, viewQueries: [{ propertyName: \"columnDef\", first: true, predicate: CdkColumnDef, descendants: true, static: true }, { propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true, static: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true, static: true }], ngImport: i0, template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellDef, selector: \"[cdkCellDef]\" }, { kind: \"directive\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\" }, { kind: \"directive\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: [\"sticky\", \"cdkColumnDef\", \"stickyEnd\"] }, { kind: \"directive\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\" }, { kind: \"directive\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-text-column',\n                    template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: CdkTable, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [TEXT_COLUMN_OPTIONS]\n                    }] }];\n    }, propDecorators: { name: [{\n                type: Input\n            }], headerText: [{\n                type: Input\n            }], dataAccessor: [{\n                type: Input\n            }], justify: [{\n                type: Input\n            }], columnDef: [{\n                type: ViewChild,\n                args: [CdkColumnDef, { static: true }]\n            }], cell: [{\n                type: ViewChild,\n                args: [CdkCellDef, { static: true }]\n            }], headerCell: [{\n                type: ViewChild,\n                args: [CdkHeaderCellDef, { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    CdkRecycleRows,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTableModule, declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn,\n        CdkNoDataRow,\n        CdkRecycleRows,\n        NoDataRowOutlet], imports: [ScrollingModule], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn,\n        CdkNoDataRow,\n        CdkRecycleRows,\n        NoDataRowOutlet] });\nCdkTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTableModule, imports: [ScrollingModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                    imports: [ScrollingModule],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/table';\nimport { CdkTable, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, STICKY_POSITIONING_LISTENER, CDK_TABLE_TEMPLATE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass MatRecycleRows {\n}\nMatRecycleRows.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatRecycleRows.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatRecycleRows, selector: \"mat-table[recycleRows], table[mat-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-table[recycleRows], table[mat-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-table-sticky';\n        /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n        this.needsPositionStickyOnElement = false;\n    }\n}\nMatTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTable, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatTable, selector: \"mat-table, table[mat-table]\", host: { properties: { \"class.mat-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"mat-table\" }, providers: [\n        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n        //  is only included in the build if used.\n        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n        { provide: CdkTable, useExisting: MatTable },\n        { provide: CDK_TABLE, useExisting: MatTable },\n        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n    ], exportAs: [\"matTable\"], usesInheritance: true, ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\"], dependencies: [{ kind: \"directive\", type: i1.DataRowOutlet, selector: \"[rowOutlet]\" }, { kind: \"directive\", type: i1.HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { kind: \"directive\", type: i1.FooterRowOutlet, selector: \"[footerRowOutlet]\" }, { kind: \"directive\", type: i1.NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-table, table[mat-table]', exportAs: 'matTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'mat-table',\n                        '[class.mat-table-fixed-layout]': 'fixedLayout',\n                    }, providers: [\n                        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                        //  is only included in the build if used.\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: CdkTable, useExisting: MatTable },\n                        { provide: CDK_TABLE, useExisting: MatTable },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatCellDef, selector: \"[matCellDef]\", providers: [{ provide: CdkCellDef, useExisting: MatCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matCellDef]',\n                    providers: [{ provide: CdkCellDef, useExisting: MatCellDef }],\n                }]\n        }] });\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatHeaderCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\", providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderCellDef]',\n                    providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }],\n                }]\n        }] });\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFooterCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatFooterCellDef, selector: \"[matFooterCellDef]\", providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterCellDef]',\n                    providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }],\n                }]\n        }] });\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n}\nMatColumnDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatColumnDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatColumnDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatColumnDef, selector: \"[matColumnDef]\", inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, providers: [\n        { provide: CdkColumnDef, useExisting: MatColumnDef },\n        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [\n                        { provide: CdkColumnDef, useExisting: MatColumnDef },\n                        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n                    ],\n                }]\n        }], propDecorators: { name: [{\n                type: Input,\n                args: ['matColumnDef']\n            }] } });\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n}\nMatHeaderCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatHeaderCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"mat-header-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-header-cell, th[mat-header-cell]',\n                    host: {\n                        'class': 'mat-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }] });\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n}\nMatFooterCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFooterCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatFooterCell, selector: \"mat-footer-cell, td[mat-footer-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-footer-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-footer-cell, td[mat-footer-cell]',\n                    host: {\n                        'class': 'mat-footer-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n}\nMatCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatCell, selector: \"mat-cell, td[mat-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-cell, td[mat-cell]',\n                    host: {\n                        'class': 'mat-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatHeaderRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatHeaderRowDef, selector: \"[matHeaderRowDef]\", inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderRowDef]',\n                    providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                    inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n                }]\n        }] });\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFooterRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatFooterRowDef, selector: \"[matFooterRowDef]\", inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterRowDef]',\n                    providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                    inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n                }]\n        }] });\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatRowDef, selector: \"[matRowDef]\", inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, providers: [{ provide: CdkRowDef, useExisting: MatRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matRowDef]',\n                    providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                    inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n                }]\n        }] });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatHeaderRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatHeaderRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatHeaderRow, selector: \"mat-header-row, tr[mat-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-header-row\" }, providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }], exportAs: [\"matHeaderRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-header-row, tr[mat-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matHeaderRow',\n                    providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }],\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFooterRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatFooterRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatFooterRow, selector: \"mat-footer-row, tr[mat-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-footer-row\" }, providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }], exportAs: [\"matFooterRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-footer-row, tr[mat-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matFooterRow',\n                    providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }],\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatRow, selector: \"mat-row, tr[mat-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-row\" }, providers: [{ provide: CdkRow, useExisting: MatRow }], exportAs: [\"matRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-row, tr[mat-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matRow',\n                    providers: [{ provide: CdkRow, useExisting: MatRow }],\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n    constructor() {\n        super(...arguments);\n        this._contentClassName = 'mat-no-data-row';\n    }\n}\nMatNoDataRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatNoDataRow, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatNoDataRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatNoDataRow, selector: \"ng-template[matNoDataRow]\", providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matNoDataRow]',\n                    providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTextColumn, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTextColumn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatTextColumn, selector: \"mat-text-column\", usesInheritance: true, ngImport: i0, template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\" }, { kind: \"directive\", type: MatColumnDef, selector: \"[matColumnDef]\", inputs: [\"sticky\", \"matColumnDef\"] }, { kind: \"directive\", type: MatCellDef, selector: \"[matCellDef]\" }, { kind: \"directive\", type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\" }, { kind: \"directive\", type: MatCell, selector: \"mat-cell, td[mat-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-text-column',\n                    template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    MatRecycleRows,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTableModule, declarations: [\n        // Table\n        MatTable,\n        MatRecycleRows,\n        // Template defs\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        // Cell directives\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        // Row directives\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatNoDataRow,\n        MatTextColumn\n    ], imports: [CdkTableModule, MatCommonModule], exports: [MatCommonModule,\n        // Table\n        MatTable,\n        MatRecycleRows,\n        // Template defs\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        // Cell directives\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        // Row directives\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatNoDataRow,\n        MatTextColumn] });\nMatTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTableModule, imports: [CdkTableModule, MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkTableModule, MatCommonModule],\n                    exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                    declarations: EXPORTED_DECLARATIONS,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/** Shared base class with MDC-based implementation. */\nclass _MatTableDataSource extends DataSource {\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = null;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (_isNumberValue(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data)\n                .reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '')\n                .toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() {\n        return this._data.value;\n    }\n    set data(data) {\n        data = Array.isArray(data) ? data : [];\n        this._data.next(data);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(data);\n        }\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() {\n        return this._filter.value;\n    }\n    set filter(filter) {\n        this._filter.next(filter);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(this.data);\n        }\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() {\n        return this._sort;\n    }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() {\n        return this._paginator;\n    }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        var _a;\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort\n            ? merge(this._sort.sortChange, this._sort.initialized)\n            : of(null);\n        const pageChange = this._paginator\n            ? merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized)\n            : of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter]).pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange]).pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange]).pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            this.filter == null || this.filter === ''\n                ? data\n                : data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        if (!this._renderChangesSubscription) {\n            this._updateChangeSubscription();\n        }\n        return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it disconnects from the data source.\n     * @docs-private\n     */\n    disconnect() {\n        var _a;\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = null;\n    }\n}\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends _MatTableDataSource {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRecycleRows, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn, _MatTableDataSource };\n"],"names":["DOCUMENT","i0","Injectable","Inject","InjectionToken","EventEmitter","Directive","Optional","Input","Output","NgModule","PendingCopy","constructor","text","_document","textarea","_textarea","createElement","styles","style","position","top","opacity","left","setAttribute","value","readOnly","body","appendChild","copy","successful","currentFocus","activeElement","select","setSelectionRange","length","execCommand","focus","_a","destroy","remove","undefined","Clipboard","document","pendingCopy","beginCopy","ɵfac","ɵprov","type","args","providedIn","decorators","CDK_COPY_TO_CLIPBOARD_CONFIG","CdkCopyToClipboard","_clipboard","_ngZone","config","attempts","copied","_pending","Set","remainingAttempts","pending","add","attempt","_destroyed","_currentTimeout","runOutsideAngular","setTimeout","delete","emit","ngOnDestroy","clearTimeout","forEach","clear","NgZone","ɵdir","selector","host","ClipboardModule","ɵmod","ɵinj","declarations","exports","coerceBooleanProperty","_VIEW_REPEATER_STRATEGY","_RecycleViewRepeaterStrategy","isDataSource","_DisposeViewRepeaterStrategy","DataSource","ContentChild","Component","ChangeDetectionStrategy","ViewEncapsulation","EmbeddedViewRef","Attribute","SkipSelf","ViewChild","ContentChildren","Subject","from","BehaviorSubject","isObservable","of","takeUntil","take","i1","i2","i3","ScrollingModule","mixinHasStickyInput","base","_sticky","_hasStickyChanged","sticky","v","prevValue","hasStickyChanged","resetStickyChanged","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","template","TemplateRef","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","name","_name","_setNameInput","stickyEnd","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","replace","provide","useExisting","inputs","providers","cell","headerCell","footerCell","BaseCdkCell","columnDef","elementRef","nativeElement","classList","CdkHeaderCell","ElementRef","CdkFooterCell","_elementRef","nodeType","tableRole","getAttribute","role","CdkCell","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_currentSchedule","schedule","task","_createScheduleIfNeeded","push","scheduleEnd","next","complete","_getScheduleObservable","pipe","subscribe","isStable","Promise","resolve","onStable","CDK_ROW_TEMPLATE","BaseRowDef","_differs","ngOnChanges","changes","_columnsDiffer","columns","currentValue","find","create","diff","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","IterableDiffers","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkRowDef","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","ViewContainerRef","CdkHeaderRow","ɵcmp","changeDetection","Default","encapsulation","None","CdkFooterRow","CdkRow","CdkNoDataRow","templateRef","_contentClassName","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","ELEMENT_NODE","i","children","element","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","indexOf","isRtl","start","end","_addStickyStyle","slice","map","width","index","reverse","stickRows","rowsToStick","stickyStates","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","Array","height","getBoundingClientRect","borderedRowIndex","_b","offset","isBorderedRowIndex","stickyHeaderRowsUpdated","offsets","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","dir","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","bottom","right","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","CdkRecycleRows","useClass","DataRowOutlet","viewContainer","HeaderRowOutlet","FooterRowOutlet","NoDataRowOutlet","CDK_TABLE_TEMPLATE","RowViewRef","CdkTable","_changeDetectorRef","_dir","_platform","_viewRepeater","_viewportRuler","_stickyPositioningListener","_onDestroy","_columnDefsByName","Map","_customColumnDefs","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","contentChanged","viewChange","Number","MAX_VALUE","nodeName","trackBy","_trackByFn","fn","ngDevMode","console","warn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","ngOnInit","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","dataIndex","change","ngAfterContentChecked","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_headerRowOutlet","_footerRowOutlet","def","_defaultRowDef","disconnect","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","context","_renderCellTemplateForItem","rowDef","_updateRowIndexContext","forEachIdentityChange","rowView","get","$implicit","isInAngularZone","addColumnDef","removeColumnDef","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","display","_stickyStyler","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","j","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","when","columnsDiffReducer","acc","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","unsubscribe","dataStream","connect","isArray","_renderRow","columnName","rowOutlet","renderedRows","viewRef","rootNodes","outlet","view","createEmbeddedView","cellTemplate","_getCellTemplates","markForCheck","renderIndex","count","first","last","even","odd","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","_noDataRowOutlet","section","stickyCheckReducer","d","isBrowser","items","_noDataRow","shouldShow","container","rootNode","ChangeDetectorRef","Directionality","Platform","ViewportRuler","useValue","exportAs","static","descendants","array","concat","CdkTextColumn","_options","justify","_syncColumnDefName","headerText","_createDefaultHeaderText","dataAccessor","defaultDataAccessor","defaultHeaderTextTransform","toUpperCase","EXPORTED_DECLARATIONS","CdkTableModule","imports","MatCommonModule","_isNumberValue","merge","combineLatest","MatRecycleRows","MatTable","arguments","MatCellDef","MatHeaderCellDef","MatFooterCellDef","MatColumnDef","MatHeaderCell","MatFooterCell","MatCell","MatHeaderRowDef","MatFooterRowDef","MatRowDef","MatHeaderRow","MatFooterRow","MatRow","MatNoDataRow","MatTextColumn","MatTableModule","MAX_SAFE_INTEGER","_MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","sortingDataAccessor","sortHeaderId","numberValue","sortData","sort","active","a","b","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","dataStr","Object","keys","currentTerm","key","toLowerCase","transformedFilter","trim","_updateChangeSubscription","_filterData","_sort","paginator","_paginator","sortChange","initialized","pageChange","page","filteredData","orderedData","_orderData","paginatedData","_pageData","obj","_updatePaginator","startIndex","pageIndex","pageSize","filteredDataLength","then","lastPageIndex","Math","ceil","newPageIndex","min","MatTableDataSource"],"sourceRoot":"webpack:///","x_google_ignoreList":[6,7,8]}