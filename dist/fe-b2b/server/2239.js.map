{"version":3,"file":"2239.js","mappings":"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","sources":["./src/app/auth/pages/auth-enter-credentials/auth-enter-credentials.component.ts","./src/app/auth/pages/auth-enter-credentials/auth-enter-credentials.component.html","./src/app/auth/pages/auth-enter-credentials/auth-enter-credentials.module.ts","./src/app/core/helpers/validator/uniq-email.ts","./src/environments/environment.prod.ts"],"sourcesContent":["import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {B2bNgxLinkService, B2bNgxLinkThemeEnum} from \"@b2b/ngx-link\";\nimport {B2bNgxButtonThemeEnum} from \"@b2b/ngx-button\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {environment} from \"../../../../environments/environment.prod\";\nimport {B2bNgxInputThemeEnum} from \"@b2b/ngx-input\";\nimport {animate, style, transition, trigger} from \"@angular/animations\";\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {UniqEmail} from \"../../../core/helpers/validator/uniq-email\";\nimport {Router} from \"@angular/router\";\nimport {AuthService} from \"../../services/auth/auth.service\";\nimport {MixpanelService} from \"../../../core/services/mixpanel/mixpanel.service\";\n\n@Component({\n  selector: 'b2b-auth-enter-credentials',\n  templateUrl: './auth-enter-credentials.component.html',\n  styleUrls: ['./auth-enter-credentials.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tanimations: [\n\t\ttrigger(\"fadeInOut\", [\n\t\t\ttransition(\":enter\", [\n\t\t\t\t// :enter is alias to 'void => *'\n\t\t\t\tstyle({opacity: 0}),\n\t\t\t\tanimate(500, style({opacity: 1})),\n\t\t\t]),\n\t\t\ttransition(\":leave\", [\n\t\t\t\t// :leave is alias to '* => void'\n\t\t\t\tanimate(500, style({opacity: 0})),\n\t\t\t]),\n\t\t]),\n\t],\n})\nexport class AuthEnterCredentialsComponent {\n\n\tpublic readonly b2bNgxLinkThemeEnum: typeof B2bNgxLinkThemeEnum;\n\tpublic readonly b2bNgxButtonThemeEnum: typeof B2bNgxButtonThemeEnum;\n\tpublic readonly b2bNgxInputThemeEnum: typeof B2bNgxInputThemeEnum;\n\tpublic form: FormGroup = this.fb.group({\n\t\temail: [\"\", [Validators.required, Validators.email], [this.uniqEmail.uniqLogin()]],\n\t\tpassword: [\"\", [Validators.required, Validators.minLength(6)]],\n\t\ttermsAndConditions: [null, Validators.requiredTrue],\n\t});\n\n\tpublic formState: {[key: string]: AbstractControl} = this.form.controls;\n\n  constructor(public readonly b2bNgxLinkService: B2bNgxLinkService,\n\t\t\t\t\t\t\tprivate readonly uniqEmail: UniqEmail,\n\t\t\t\t\t\t\tprivate readonly fb: FormBuilder,\n\t\t\t\t\t\t\tprivate readonly router: Router,\n\t\t\t\t\t\t\tprivate readonly authService: AuthService,\n              private readonly mixpanelService: MixpanelService) {\n\t\tthis.b2bNgxLinkThemeEnum = B2bNgxLinkThemeEnum;\n\t\tthis.b2bNgxButtonThemeEnum = B2bNgxButtonThemeEnum;\n\t\tthis.b2bNgxInputThemeEnum = B2bNgxInputThemeEnum;\n\t}\n\n\tpublic registerWithGoogle() {\n\t\tthis.mixpanelService.track('Sign-Up started');\n\t\tdocument.location.href = `${environment.apiUrl}auth/google`;\n\t}\n\n\tpublic registerWithLinkedIn() {\n\t\tthis.mixpanelService.track('Sign-Up started');\n\t\tdocument.location.href = `${environment.apiUrl}auth/linkedin`;\n\t}\n\n\tpublic goToNextStep(form: FormGroup): void {\n    this.mixpanelService.track('Sign-Up started');\n\t\tthis.router.navigate(['/auth/register']);\n\t\tthis.authService.userCredentials$.next(form.value);\n\t}\n}\n","<div class=\"login\">\n\t<div class=\"go-back\">\n\t</div>\n\t<div class=\"body\">\n\t\t<div class=\"title\">Register Individual Account</div>\n\t\t<form class=\"auth-log-in__main-form\" [formGroup]=\"form\" (ngSubmit)=\"goToNextStep(form)\">\n\t\t\t<div class=\"form-title\">We connect traders globally.</div>\n\t\t\t<div class=\"form-subtitle\">The B2B platform for wholesale sellers and buyers on the global market.</div>\n\t\t\t<button\n\t\t\t\tb2bNgxButton\n\t\t\t\ttype=\"button\"\n\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_WHITE\"\n\t\t\t\tclass=\"auth-log-in__log-in-with-google-button\"\n\t\t\t\t(click)=\"registerWithGoogle()\">\n\t\t\t\t<img b2bNgxImage name=\"google\" class=\"auth-log-in__log-in-with-google-button__icon\" />\n\t\t\t\t{{ \"AUTH.REGISTER_GOOGLE\" | translate }}\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tb2bNgxButton\n\t\t\t\ttype=\"button\"\n\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_WHITE\"\n\t\t\t\tclass=\"auth-log-in__log-in-with-google-button\"\n\t\t\t\t(click)=\"registerWithLinkedIn()\">\n\t\t\t\t<img b2bNgxImage name=\"linkedin\" class=\"auth-log-in__log-in-with-google-button__icon\" />\n\t\t\t\t{{ \"AUTH.REGISTER_LINKEDIN\" | translate }}\n\t\t\t</button>\n\t\t\t<b2b-ngx-divider [theme]=\"'white'\" class=\"auth-log-in__main-divider\">or</b2b-ngx-divider>\n\t\t\t<input\n\t\t\t\tb2bNgxInput\n\t\t\t\tautocomplete=\"new-email\"\n\t\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"\n\t\t\t\t[label]=\"'LABELS.EMAIL' | translate\"\n\t\t\t\tlabelClass=\"auth-register__main-input\"\n\t\t\t\tformControlName=\"email\"\n\t\t\t\t[placeholder]=\"'PLACEHOLDERS.YOUR_EMAIL' | translate\" />\n\t\t\t<p *ngIf=\"formState['email'].touched && $any(formState['email'].errors)?.['emailExist']\" class=\"error\" [@fadeInOut]>\n\t\t\t\tThis email is already exist\n\t\t\t</p>\n\n\t\t\t<div class=\"control-wrapper\">\n\t\t\t\t<!-- <b2b-ngx-password\n\t\t\t\t\t[autoCompleteEnabled]=\"false\"\n\t\t\t\t\t[errors]=\"formState['password'].errors\"\n\t\t\t\t\tplaceholder=\"Create password\"\n\t\t\t\t\tformControlName=\"password\">\n\t\t\t\t</b2b-ngx-password> -->\n\t\t\t\t<input\n\t\t\t\t\tautocomplete=\"new-password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tformControlName=\"password\"\n\t\t\t\t\tb2bNgxInput [theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"\n\t\t\t\t\tplaceholder=\"Enter password\">\n\t\t\t\t<!-- {{formState['password']?.errors | json}} -->\n\t\t\t\t<p *ngIf=\"formState['password'].touched && $any(formState['password'].errors)?.['minlength']\" class=\"error\" [@fadeInOut]>\n\t\t\t\t\tPasswords must be at least 6 characters\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<b2b-ngx-checkbox\n\t\t\t\tclass=\"auth-register__main-checkbox\"\n\t\t\t\t[errors]=\"formState['termsAndConditions'].errors\"\n\t\t\t\tformControlName=\"termsAndConditions\"\n\t\t\t>{{ \"AUTH.AGREE\" | translate }}\n\t\t\t\t<a\n\t\t\t\t\tb2bNgxLink\n\t\t\t\t\t[theme]=\"b2bNgxLinkThemeEnum.TEXT_BLUE\"\n\t\t\t\t\t[routerLink]=\"b2bNgxLinkService.getLink('/terms-and-conditions') | async\"\n\t\t\t\t>terms & conditions</a>\n\t\t\t\tand\n\t\t\t\t<a\n\t\t\t\t\tb2bNgxLink\n\t\t\t\t\t[theme]=\"b2bNgxLinkThemeEnum.TEXT_BLUE\"\n\t\t\t\t\t[routerLink]=\"b2bNgxLinkService.getLink('/privacy-policy') | async\"\n\t\t\t\t>privacy policy</a></b2b-ngx-checkbox>\n\n\t\t\t<button\n\t\t\t\tb2bNgxButton\n\t\t\t\t[disabled]=\"form.status === 'INVALID' || form.status === 'PENDING'\"\n\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLACK\"\n\t\t\t\tclass=\"auth-log-in__log-in-button\">\n\t\t\t\tRegister\n\t\t\t</button>\n\t\t</form>\n\t</div>\n\t<div class=\"other-page-link\">\n\t\t<p class=\"auth-log-in__header-text-wrapper\">\n\t\t\t<span class=\"auth-log-in__header-text\">{{ \"AUTH.ALREADY_HAVE\" | translate }}</span>\n\t\t\t<a\n\t\t\t\tb2bNgxLink\n\t\t\t\t[theme]=\"b2bNgxLinkThemeEnum.TEXT_BLUE\"\n\t\t\t\t[routerLink]=\"b2bNgxLinkService.getLink('/auth/log-in') | async\"\n\t\t\t\tclass=\"auth-log-in__header-link\"\n\t\t\t\tqueryParamsHandling=\"merge\"\n\t\t\t>{{ \"AUTH.LOG_IN\" | translate }}</a>\n\t\t</p>\n\t</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {AuthEnterCredentialsComponent} from \"./auth-enter-credentials.component\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {B2bNgxLinkModule} from \"@b2b/ngx-link\";\nimport {B2bNgxButtonModule} from \"@b2b/ngx-button\";\nimport {B2bNgxImageModule} from \"@b2b/ngx-image\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {B2bNgxIconModule} from \"@b2b/ngx-icon\";\n// import {ErrorTailorModule} from \"@ngneat/error-tailor\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {B2bNgxInputModule} from \"@b2b/ngx-input\";\nimport {B2bNgxCheckboxModule} from \"@b2b/ngx-checkbox\";\nimport {NgxPasswordModule} from \"@b2b/ngx-password\";\nimport {B2bNgxDividerModule} from \"@b2b/ngx-divider\";\n\nconst routes: Routes = [{path: '', component: AuthEnterCredentialsComponent}];\n\n\n@NgModule({\n  declarations: [AuthEnterCredentialsComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    B2bNgxLinkModule,\n    // B2bNgxDividerModule,\n    B2bNgxButtonModule,\n    B2bNgxImageModule,\n    TranslateModule,\n    B2bNgxIconModule,\n    // ErrorTailorModule,\n    ReactiveFormsModule,\n    B2bNgxInputModule,\n    B2bNgxCheckboxModule,\n    NgxPasswordModule,\n    B2bNgxDividerModule,\n    // NgxPasswordModule\n  ]\n})\nexport class AuthEnterCredentialsModule { }\n","import {Injectable} from \"@angular/core\";\nimport {AuthService} from \"../../../auth/services/auth/auth.service\";\nimport {delay, Observable, of} from \"rxjs\";\nimport {catchError, map} from \"rxjs/operators\";\nimport {AbstractControl, ValidatorFn} from \"@angular/forms\";\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n\nexport class UniqEmail {\n\tconstructor(private readonly authService: AuthService) {\n\t}\n\n\tuniqLogin(): ValidatorFn {\n\t\treturn (\n\t\t\tcontrol: AbstractControl\n\t\t): Observable<{ emailExist: boolean } | null> => {\n\t\t\tdelay(500)\n\t\t\treturn this.authService.checkEmailForExisting(control.value).pipe(\n\t\t\t\tmap(() => null),\n\t\t\t\tcatchError(err => {\n\t\t\t\t\treturn of({emailExist: true});\n\t\t\t\t})\n\t\t\t);\n\t\t};\n\t}\n}\n","export const environment = {\n\tproduction: false,\n\t// apiUrl: \"https://api.b2b.discount/\", // для билда в прод\n\tapiUrl: \"https://api-dev.b2b.discount/\", // для дева\n\tdevUrl: \"https://dev.b2b.discount/\",\n\tprodUrl: \"https://b2b.discount/\",\n\tbaseUrl: \"localhost:4000\",\n};\n"],"names":["B2bNgxLinkThemeEnum","B2bNgxButtonThemeEnum","environment","B2bNgxInputThemeEnum","animate","style","transition","trigger","Validators","i0","AuthEnterCredentialsComponent","constructor","b2bNgxLinkService","uniqEmail","fb","router","authService","mixpanelService","group","email","required","uniqLogin","password","minLength","termsAndConditions","requiredTrue","form","controls","b2bNgxLinkThemeEnum","b2bNgxButtonThemeEnum","b2bNgxInputThemeEnum","registerWithGoogle","track","document","location","href","apiUrl","registerWithLinkedIn","goToNextStep","navigate","userCredentials$","next","value","selectors","decls","vars","consts","template","ctx","opacity","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}