{"version":3,"file":"7399.js","mappings":"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","sources":["./projects/ngx-back/src/lib/layout/ngx-back.component.ts","./projects/ngx-back/src/lib/layout/ngx-back.component.html","./projects/ngx-back/src/lib/ngx-back.module.ts","./projects/ngx-country-select/src/lib/data/index.ts","./projects/ngx-country-select/src/lib/layout/ngx-country-select.component.ts","./projects/ngx-country-select/src/lib/layout/ngx-country-select.component.html","./projects/ngx-country-select/src/lib/ngx-country-select.module.ts","./projects/ngx-select/src/lib/ngx-select.module.ts","./src/app/auth/pages/auth-register-individual-account-first-step/auth-register-individual-account-first-step.component.ts","./src/app/auth/pages/auth-register-individual-account-first-step/auth-register-individual-account-first-step.component.html","./src/app/auth/pages/auth-register-individual-account-second-step/auth-register-individual-account-second-step.component.ts","./src/app/auth/pages/auth-register-individual-account-second-step/auth-register-individual-account-second-step.component.html","./src/app/auth/pages/auth-register-individual-account/auth-register-individual-account-routing.module.ts","./src/app/auth/pages/auth-register-individual-account/auth-register-individual-account.module.ts","./src/app/auth/pages/auth-register-individual-account/layout/auth-register-individual-account.component.ts","./src/app/auth/pages/auth-register-individual-account/layout/auth-register-individual-account.component.html","./src/app/client/shared/enums/browser-storage-keys.enum.ts","./src/app/core/helpers/validator/full-name.ts","./src/app/core/helpers/validator/only -latin-numbers-symbols.ts","./src/app/core/helpers/validator/only-latin.ts","./node_modules/country-list/country-list.js","./node_modules/@angular/cdk/fesm2015/dialog.mjs","./node_modules/@angular/cdk/fesm2015/overlay.mjs","./node_modules/@angular/cdk/fesm2015/portal.mjs","./node_modules/@angular/cdk/fesm2015/scrolling.mjs","./node_modules/@angular/material/fesm2015/dialog.mjs"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\n\n@Component({\n\tselector: \"b2b-ngx-back\",\n\ttemplateUrl: \"./ngx-back.component.html\",\n\tstyleUrls: [\"./ngx-back.component.scss\"],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxBackComponent {\n\t@Input() public link: string = '';\n\t@Input() public className: string = '';\n\n\tpublic get linkClassName() {\n\t\tconst defaultClassName = `flex items-center text-gray-500`;\n\n\t\treturn `${defaultClassName} ${this.className}`;\n\t}\n}\n","<a b2bNgxLink [routerLink]=\"link\" [class]=\"linkClassName\">\n\t<img b2bNgxIcon class=\"w-6\" name=\"arrow-l\" />\n\t<span class=\"ml-2\">Back</span>\n</a>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgxBackComponent } from \"./layout/ngx-back.component\";\nimport { B2bNgxIconModule } from \"@b2b/ngx-icon\";\nimport { B2bNgxLinkModule } from \"@b2b/ngx-link\";\nimport { RouterModule } from \"@angular/router\";\n\n@NgModule({\n\timports: [CommonModule, RouterModule, B2bNgxIconModule, B2bNgxLinkModule],\n\tdeclarations: [NgxBackComponent],\n\texports: [NgxBackComponent],\n})\nexport class B2bNgxBackModule {}\n","export const COUNTRIES = [\n\t\"AD\",\n\t\"AE\",\n\t\"AF\",\n\t\"AG\",\n\t\"AI\",\n\t\"AL\",\n\t\"AM\",\n\t\"AO\",\n\t\"AR\",\n\t\"AT\",\n\t\"AU\",\n\t\"AW\",\n\t\"AX\",\n\t\"AZ\",\n\t\"BA\",\n\t\"BB\",\n\t\"BD\",\n\t\"BE\",\n\t\"BF\",\n\t\"BG\",\n\t\"BH\",\n\t\"BI\",\n\t\"BJ\",\n\t\"BM\",\n\t\"BN\",\n\t\"BO\",\n\t\"BR\",\n\t\"BS\",\n\t\"BT\",\n\t\"BW\",\n\t\"BY\",\n\t\"BZ\",\n\t\"CA\",\n\t\"CD\",\n\t\"CF\",\n\t\"CG\",\n\t\"CH\",\n\t\"CI\",\n\t\"CL\",\n\t\"CM\",\n\t\"CN\",\n\t\"CO\",\n\t\"CR\",\n\t\"CU\",\n\t\"CV\",\n\t\"CY\",\n\t\"CZ\",\n\t\"DE\",\n\t\"DJ\",\n\t\"DK\",\n\t\"DM\",\n\t\"DO\",\n\t\"DZ\",\n\t\"EC\",\n\t\"EE\",\n\t\"EG\",\n\t\"ER\",\n\t\"ES\",\n\t\"ET\",\n\t\"FI\",\n\t\"FJ\",\n\t\"FK\",\n\t\"FM\",\n\t\"FR\",\n\t\"GA\",\n\t\"GB\",\n\t\"GD\",\n\t\"GE\",\n\t\"GG\",\n\t\"GH\",\n\t\"GI\",\n\t\"GM\",\n\t\"GN\",\n\t\"GQ\",\n\t\"GR\",\n\t\"GT\",\n\t\"GW\",\n\t\"GY\",\n\t\"HK\",\n\t\"HN\",\n\t\"HR\",\n\t\"HT\",\n\t\"HU\",\n\t\"ID\",\n\t\"IE\",\n\t\"IL\",\n\t\"IM\",\n\t\"IN\",\n\t\"IQ\",\n\t\"IR\",\n\t\"IS\",\n\t\"IT\",\n\t\"JE\",\n\t\"JM\",\n\t\"JO\",\n\t\"JP\",\n\t\"KE\",\n\t\"KG\",\n\t\"KH\",\n\t\"KM\",\n\t\"KN\",\n\t\"KP\",\n\t\"KR\",\n\t\"KW\",\n\t\"KY\",\n\t\"KZ\",\n\t\"LA\",\n\t\"LB\",\n\t\"LC\",\n\t\"LI\",\n\t\"LK\",\n\t\"LR\",\n\t\"LS\",\n\t\"LT\",\n\t\"LU\",\n\t\"LV\",\n\t\"LY\",\n\t\"MA\",\n\t\"MC\",\n\t\"MD\",\n\t\"ME\",\n\t\"MG\",\n\t\"MK\",\n\t\"ML\",\n\t\"MM\",\n\t\"MN\",\n\t\"MO\",\n\t\"MR\",\n\t\"MS\",\n\t\"MT\",\n\t\"MU\",\n\t\"MV\",\n\t\"MW\",\n\t\"MX\",\n\t\"MY\",\n\t\"MZ\",\n\t\"NA\",\n\t\"NE\",\n\t\"NG\",\n\t\"NI\",\n\t\"NL\",\n\t\"NO\",\n\t\"NP\",\n\t\"NZ\",\n\t\"OM\",\n\t\"PA\",\n\t\"PE\",\n\t\"PF\",\n\t\"PG\",\n\t\"PH\",\n\t\"PK\",\n\t\"PL\",\n\t\"PR\",\n\t\"PT\",\n\t\"PW\",\n\t\"PY\",\n\t\"QA\",\n\t\"RO\",\n\t\"RS\",\n\t\"RU\",\n\t\"RW\",\n\t\"SA\",\n\t\"SB\",\n\t\"SC\",\n\t\"SD\",\n\t\"SE\",\n\t\"SG\",\n\t\"SH\",\n\t\"SI\",\n\t\"SK\",\n\t\"SL\",\n\t\"SM\",\n\t\"SN\",\n\t\"SO\",\n\t\"SR\",\n\t\"ST\",\n\t\"SV\",\n\t\"SY\",\n\t\"SZ\",\n\t\"TC\",\n\t\"TD\",\n\t\"TG\",\n\t\"TH\",\n\t\"TJ\",\n\t\"TL\",\n\t\"TM\",\n\t\"TN\",\n\t\"TO\",\n\t\"TR\",\n\t\"TT\",\n\t\"TW\",\n\t\"TZ\",\n\t\"UA\",\n\t\"UG\",\n\t\"US\",\n\t\"UY\",\n\t\"UZ\",\n\t\"VC\",\n\t\"VE\",\n\t\"VG\",\n\t\"VN\",\n\t\"VU\",\n\t\"WS\",\n\t\"YE\",\n\t\"ZA\",\n\t\"ZM\",\n\t\"ZW\",\n];\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from \"@angular/core\";\nimport {ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors} from \"@angular/forms\";\n// TODO: uncomment code below when libs will be inserted in b2b\n// import { FormControl } from \"@ngneat/reactive-forms\";\n// import { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n// @ts-ignore\nimport {getName} from 'country-list'\nimport {COUNTRIES} from \"../data\";\nimport {B2bNgxSelectThemeEnum} from \"@b2b/ngx-select\";\nimport {UntilDestroy, untilDestroyed} from \"@ngneat/until-destroy\";\n\n@UntilDestroy()\n@Component({\n\tselector: \"b2b-ngx-country-select\",\n\ttemplateUrl: \"./ngx-country-select.component.html\",\n\tstyleUrls: [\"./ngx-country-select.component.scss\"],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: forwardRef(() => B2bNgxCountrySelectComponent),\n\t\t\tmulti: true,\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tuseExisting: forwardRef(() => B2bNgxCountrySelectComponent),\n\t\t\tmulti: true,\n\t\t},\n\t],\n})\nexport class B2bNgxCountrySelectComponent implements ControlValueAccessor, OnInit, OnChanges {\n\t@Input() errors: ValidationErrors = {};\n\n\t@Input() showInTransit?: boolean;\n\t@Input() public theme: B2bNgxSelectThemeEnum = B2bNgxSelectThemeEnum.BACKGROUND_GRAY;\n\t@Input() public className: string = '';\n\t@Input() public placeholder: string;\n\t@Input() public multiple: boolean = false;\n\t@Input() public touched: boolean = false;\n\n\t@Output() openSelect: EventEmitter<void> = new EventEmitter<void>();\n\t@Output() closeSelect: EventEmitter<void> = new EventEmitter<void>();\n\n\tpublic readonly formControl: FormControl<string | null>;\n\tpublic options: any[] = [];\n\n\tprivate onChange: (value: string | null) => void;\n\tprivate onTouched: () => void;\n\n\tconstructor() {\n\t\tthis.placeholder = \"\";\n\n\t\tthis.onChange = () => null;\n\t\tthis.onTouched = () => null;\n\n\t\tthis.formControl = new FormControl<string | null>(null);\n\t}\n\n\tpublic get selectClassName() {\n\t\tconst defaultClassName = ``;\n\n\t\treturn `${defaultClassName} ${this.theme} ${this.className}`;\n\t}\n\n\tpublic getOptions() {\n\t\tconst countriesArr = COUNTRIES.map((country) => ({\n\t\t\tlabel: getName(country),\n\t\t\ticon: country,\n\t\t\tcode: country.toLowerCase(),\n\t\t})).sort((a, b): number => a.label.localeCompare(b.label));\n\n\t\tif (this.showInTransit) {\n\t\t\tcountriesArr.unshift({\n\t\t\t\tlabel: 'In transit',\n\t\t\t\ticon: \"ship-in-transit\",\n\t\t\t\tcode: \"In transit\"\n\t\t\t})\n\t\t}\n\n\t\treturn countriesArr;\n\t}\n\n\tpublic get error(): string {\n\t\tif (!this.errors) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tconst firstErrorKey = Object.keys(this.errors)[0];\n\n\t\treturn this.errors[firstErrorKey] as string;\n\t}\n\n\tpublic ngOnInit(): void {\n\t\tthis.subscribeOnValueChanges();\n\t\tthis.options = this.getOptions();\n\t}\n\n\tpublic ngOnChanges(changes: SimpleChanges): void {\n\t\tif (changes['errors']) {\n\t\t\tthis.formControl.setErrors(changes['errors'].currentValue);\n\t\t}\n\t}\n\n\tpublic validate(): ValidationErrors | null {\n\t\treturn this.formControl.errors;\n\t}\n\n\tpublic registerOnChange(fn: (value: string | null) => void): void {\n\t\tthis.onChange = fn;\n\t}\n\n\tpublic registerOnTouched(fn: () => void): void {\n\t\tthis.onTouched = fn;\n\t}\n\n\tpublic writeValue(value: string): void {\n\t\tthis.formControl.setValue(value);\n\t}\n\n\tpublic setDisabledState(isDisabled: boolean): void {\n\t\tif (isDisabled) {\n\t\t\tthis.formControl.disable();\n\t\t} else {\n\t\t\tthis.formControl.enable();\n\t\t}\n\t}\n\n\tpublic emitOpen() {\n\t\tthis.openSelect.emit();\n\t}\n\n\tpublic emitClose() {\n\t\tthis.closeSelect.emit();\n\t}\n\n\tprivate subscribeOnValueChanges(): void {\n\t\tthis.formControl.valueChanges.pipe(untilDestroyed(this)).subscribe((value) => {\n\t\t\tthis.onChange(value);\n\t\t});\n\t}\n}\n","<label class=\"ngx-country-label\"><ng-content></ng-content></label>\n<ng-select\n\t(open)=\"emitOpen()\"\n\t(close)=\"emitClose()\"\n\t[searchable]=\"true\"\n\t[clearable]=\"false\"\n\t[multiple]=\"multiple\"\n\t[items]=\"options\"\n\tbindLabel=\"label\"\n\tbindValue=\"code\"\n\t[class]=\"selectClassName\"\n\t[class.ng-touched]=\"touched\"\n\t[placeholder]=\"placeholder\"\n\t[formControl]=\"formControl\">\n\t<ng-template ng-label-tmp let-item=\"item\">\n\t\t<div class=\"ngx-country-label-container\">\n\t\t\t<ng-container>\n\t\t\t\t<img *ngIf=\"item.icon\" b2bNgxIcon group=\"flags/\" [name]=\"item.icon\" />\n\t\t\t\t<p class=\"ngx-country-select-label\">{{ item.label }}</p>\n\t\t\t</ng-container>\n\t\t</div>\n\t</ng-template>\n\n\t<ng-template ng-multi-label-tmp let-items=\"items\" let-clear=\"clear\">\n\t\t<div class=\"ngx-country-label-container\" *ngFor=\"let item of items | slice: 0:1\">\n\t\t\t<img *ngIf=\"$any(item).icon\" b2bNgxIcon group=\"flags/\" [name]=\"$any(item).icon\" />\n\t\t\t<p class=\"ngx-country-select-label\">{{ $any(item).label }}</p>\n\t\t</div>\n\n\t\t<div class=\"ngx-country-label-container\" *ngIf=\"items.length > 1\">\n\t\t\t<p class=\"ngx-country-select-label\">{{ items.length - 1 }} more...</p>\n\t\t</div>\n\t</ng-template>\n\n\t<ng-template ng-option-tmp let-item=\"item\" let-index=\"index\" let-search=\"searchTerm\">\n\t\t<div class=\"ngx-country-option-container\">\n\t\t\t<img b2bNgxIcon group=\"flags/\" [name]=\"item.icon\" />\n\t\t\t<p class=\"ngx-country-option\">{{ item.label }}</p>\n\t\t</div>\n\t</ng-template>\n</ng-select>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { B2bNgxCountrySelectComponent } from \"../lib/layout/ngx-country-select.component\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\nimport { B2bNgxIconModule } from \"@b2b/ngx-icon\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { B2bNgxImageModule } from \"@b2b/ngx-image\";\n\n@NgModule({\n\timports: [CommonModule, ReactiveFormsModule, B2bNgxIconModule, B2bNgxImageModule, NgSelectModule],\n\tdeclarations: [B2bNgxCountrySelectComponent],\n\texports: [B2bNgxCountrySelectComponent],\n})\nexport class B2bNgxCountrySelectModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { B2bNgxSelectComponent } from \"./layout/ngx-select.component\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\n@NgModule({\n\timports: [CommonModule, NgSelectModule, ReactiveFormsModule],\n\tdeclarations: [B2bNgxSelectComponent],\n\texports: [B2bNgxSelectComponent],\n})\nexport class B2bNgxSelectModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { animate, style, transition, trigger } from \"@angular/animations\";\nimport {FormBuilder, Validators} from \"@angular/forms\";\n\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { filter, Observable } from \"rxjs\";\nimport { first, map, switchMap } from \"rxjs/operators\";\n\n// import { FormBuilder } from \"@ngneat/reactive-forms\";\n\nimport { B2bNgxInputThemeEnum } from \"@b2b/ngx-input\";\nimport { B2bNgxButtonThemeEnum } from \"@b2b/ngx-button\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\nimport { AuthService } from \"../../services/auth/auth.service\";\nimport { FirstStepDataModel } from \"../auth-register-individual-account/shared/first-step-data.model\";\nimport { BrowserStorageKeysEnum} from \"../../../client/shared/enums/browser-storage-keys.enum\";\n\n@UntilDestroy()\n@Component({\n\tselector: \"b2b-auth-register-individual-account-first-step\",\n\ttemplateUrl: \"./auth-register-individual-account-first-step.component.html\",\n\tstyleUrls: [\"./auth-register-individual-account-first-step.component.scss\"],\n\tanimations: [\n\t\ttrigger(\"fadeInOut\", [\n\t\t\ttransition(\":enter\", [\n\t\t\t\t// :enter is alias to 'void => *'\n\t\t\t\tstyle({opacity: 0}),\n\t\t\t\tanimate(500, style({opacity: 1})),\n\t\t\t]),\n\t\t\ttransition(\":leave\", [\n\t\t\t\t// :leave is alias to '* => void'\n\t\t\t\tanimate(500, style({opacity: 0})),\n\t\t\t]),\n\t\t]),\n\t],\n})\nexport class AuthRegisterIndividualAccountFirstStepComponent implements OnInit {\n\tpublic b2bNgxInputThemeEnum = B2bNgxInputThemeEnum;\n\tpublic b2bNgxButtonThemeEnum = B2bNgxButtonThemeEnum;\n\n\tpublic form: any = this.fb.group({\n\t\temail: [\"\", [Validators.required, Validators.email]],\n\t\tpassword: [\"\", [Validators.required, Validators.minLength(8)]],\n\t});\n\tpublic isNextStepDisabled$: Observable<boolean> = this.form.status$.pipe(map((data) => data === \"INVALID\"));\n\n\tprivate parsingCompanyName: string = '';\n\n\tconstructor(\n\t\tprivate readonly router: Router,\n\t\tprivate readonly route: ActivatedRoute,\n\t\tprivate readonly fb: FormBuilder,\n\t\tprivate readonly authService: AuthService\n\t) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.detectParsingCompanyEmail();\n\t\tthis.detectUrlParamsEmail();\n\t}\n\n\tpublic secondStep() {\n\t\tthis.saveUserData();\n\t\tthis.router.navigate([\"../second-step\"], {relativeTo: this.route});\n\t}\n\n\tprivate detectUrlParamsEmail(): void {\n\t\tthis.route.queryParams\n\t\t\t.pipe(\n\t\t\t\tmap((data: any) => data.email),\n\t\t\t\tfirst())\n\t\t\t.subscribe((email: string) => {\n\t\t\t\tthis.form.patchValue({\n\t\t\t\t\temail\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\tprivate detectParsingCompanyEmail(): void {\n\t\tthis.form\n\t\t\t.get(\"email\")\n\t\t\t.valueChanges.pipe(\n\t\t\tuntilDestroyed(this),\n\t\t\tfilter(() => this.form.get(\"email\").valid),\n\t\t\tswitchMap((email: any) => {\n\t\t\t\treturn this.authService.getPreregisteredCompanyInformation(email);\n\t\t\t})\n\t\t)\n\t\t\t.pipe(\n\t\t\t\tfilter((data: any) => data.company !== undefined),\n\t\t\t\tmap((data: any) => data.company)\n\t\t\t)\n\t\t\t.subscribe(({companyName}: any) => (this.parsingCompanyName = companyName));\n\t}\n\n\tprivate saveUserData(): void {\n\t\tconst firstStepData: FirstStepDataModel = {\n\t\t\temail: this.form.value[\"email\"],\n\t\t\tpassword: this.form.value[\"password\"],\n\t\t\tcompanyName: this.parsingCompanyName,\n\t\t};\n\n\t\tlocalStorage.setItem(BrowserStorageKeysEnum.FIRST_STEP_DATA, JSON.stringify(firstStepData));\n\t}\n}\n","<div>\n\t<div class=\"security-data\" [formGroup]=\"form\">\n\t\t<input\n\t\t\tb2bNgxInput\n\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"\n\t\t\t[label]=\"'LABELS.EMAIL' | translate\"\n\t\t\tlabelClass=\"auth-register-individual-account__main-input\"\n\t\t\tformControlName=\"email\"\n\t\t\t[placeholder]=\"'PLACEHOLDERS.YOUR_EMAIL' | translate\" />\n\t\t<input\n\t\t\tb2bNgxInput\n\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"\n\t\t\ttype=\"password\"\n\t\t\tautocomplete=\"new-password\"\n\t\t\t[label]=\"'LABELS.PASSWORD' | translate\"\n\t\t\tlabelClass=\"auth-register-individual-account__main-input\"\n\t\t\tformControlName=\"password\"\n\t\t\t[placeholder]=\"'PLACEHOLDERS.CREATE_PASSWORD' | translate\" />\n\t\t<!--    <p-->\n\t\t<!--      [@fadeInOut]-->\n\t\t<!--      class=\"auth-register-individual-account__main-input-error\"-->\n\t\t<!--      *ngIf=\"formGroup.get('securityData').get('password').errors?.password\">-->\n\t\t<!--      Create password  more than 8 symbols-->\n\t\t<!--    </p>-->\n\t</div>\n\t<button\n\t\t(click)=\"secondStep()\"\n\t\tb2bNgxButton\n\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLACK\"\n\t\t[disabled]=\"isNextStepDisabled$ | async\"\n\t\tclass=\"auth-register-individual-account__create-account-button\">\n\t\t{{ \"BUTTONS.NEXT_STEP\" | translate }}\n\t</button>\n</div>\n","import { ChangeDetectorRef, Component, OnInit } from \"@angular/core\";\nimport { B2bNgxInputThemeEnum } from \"@b2b/ngx-input\";\nimport { B2bNgxSelectThemeEnum } from \"@b2b/ngx-select\";\nimport {catchError, filter, first, map, tap} from \"rxjs/operators\";\nimport { AuthService } from \"../../services/auth/auth.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport {Observable, throwError} from \"rxjs\";\n// import { FormBuilder, FormGroup } from \"@ngneat/reactive-forms\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport { fullName } from \"../../../core/helpers/validator/full-name\";\nimport { onlyLatin } from \"../../../core/helpers/validator/only-latin\";\nimport { B2bNgxLinkService, B2bNgxLinkThemeEnum } from \"@b2b/ngx-link\";\nimport { B2bNgxButtonThemeEnum } from \"@b2b/ngx-button\";\nimport { animate, style, transition, trigger } from \"@angular/animations\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport { HotToastService } from \"@ngneat/hot-toast\";\nimport { FirstStepDataModel } from \"../auth-register-individual-account/shared/first-step-data.model\";\nimport { BrowserStorageKeysEnum} from \"../../../client/shared/enums/browser-storage-keys.enum\";\nimport {onlyLatinAndNumberAndSymbols} from \"../../../core/helpers/validator/only -latin-numbers-symbols\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Component({\n\tselector: \"b2b-auth-register-individual-account-second-step\",\n\ttemplateUrl: \"./auth-register-individual-account-second-step.component.html\",\n\tstyleUrls: [\"./auth-register-individual-account-second-step.component.scss\"],\n\tanimations: [\n\t\ttrigger(\"fadeInOut\", [\n\t\t\ttransition(\":enter\", [\n\t\t\t\t// :enter is alias to 'void => *'\n\t\t\t\tstyle({ opacity: 0 }),\n\t\t\t\tanimate(500, style({ opacity: 1 })),\n\t\t\t]),\n\t\t\ttransition(\":leave\", [\n\t\t\t\t// :leave is alias to '* => void'\n\t\t\t\tanimate(500, style({ opacity: 0 })),\n\t\t\t]),\n\t\t]),\n\t],\n})\nexport class AuthRegisterIndividualAccountSecondStepComponent implements OnInit {\n\tpublic form: FormGroup = this.getFormGroup();\n\tpublic b2bNgxInputThemeEnum = B2bNgxInputThemeEnum;\n\tpublic b2bNgxSelectThemeEnum = B2bNgxSelectThemeEnum;\n\tpublic b2bNgxLinkThemeEnum = B2bNgxLinkThemeEnum;\n\tpublic b2bNgxButtonThemeEnum = B2bNgxButtonThemeEnum;\n\tpublic roles$ = this.getRoles();\n\tpublic availableRoles: any[] = [];\n\tprivate firstStepDataObj: FirstStepDataModel;\n\tconstructor(\n\t\tprivate authService: AuthService,\n\t\tprivate translateService: TranslateService,\n\t\tprivate dialog: MatDialog,\n\t\tprivate fb: FormBuilder,\n\t\tpublic b2bNgxLinkService: B2bNgxLinkService,\n\t\tprivate router: Router,\n\t\tprivate activatedRoute: ActivatedRoute,\n\t\tprivate hotToastrService: HotToastService,\n\t\tprivate changeDetectorRef: ChangeDetectorRef\n\t) {\n\t\tthis.firstStepDataObj = JSON.parse(localStorage.getItem(BrowserStorageKeysEnum.FIRST_STEP_DATA)!);\n\t}\n\n\tngOnInit() {\n\t\tif (this.firstStepDataObj?.companyName !== undefined && this.firstStepDataObj?.companyName !== null) {\n\t\t\tthis.form.get(\"company\")?.setValue(this.firstStepDataObj.companyName);\n\t\t}\n\t}\n\n\tpublic getRoles(): Observable<any[]> {\n\t\treturn this.authService.getRoles().pipe(\n\t\t\tmap((roles) =>\n\t\t\t\troles.map((role) => {\n\t\t\t\t\tconst roleName = this.translateService.instant(`ROLES.${role.name.toUpperCase()}_NAME`);\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...role,\n\t\t\t\t\t\tdescription: this.translateService.instant(`ROLES.${role.name.toUpperCase()}`),\n\t\t\t\t\t\tdisplayName: roleName.charAt(0).toUpperCase() + roleName.slice(1),\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t),\n\t\t\ttap((roles) => (this.availableRoles = roles)),\n\t\t\tmap((roles) => [roles[2], roles[3], roles[1], roles[0]])\n\t\t);\n\t}\n\n\tpublic async registerWithForm(formGroup: FormGroup) {\n\t\tif (formGroup.invalid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { email, password } = this.firstStepDataObj;\n\n\t\tconst body: any = { email, password, ...formGroup.value, preferences: formGroup.value.categories };\n\n\t\tif (localStorage.getItem('ref')) {\n\t\t\tbody.refId = localStorage.getItem('ref')\n\t\t}\n\n\n\t\ttry {\n\t\t\tthis.authService\n\t\t\t\t.registerWithForm({ ...body, passwordConfirm: password, password, email })\n\t\t\t\t.pipe(\n\t\t\t\t\tcatchError((er) => {\n\t\t\t\t\t\tthis.hotToastrService.show(\n\t\t\t\t\t\t\t`This email ${formGroup.get(\"securityData\")?.get(\"email\")?.value} is already registered.`,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdismissible: true,\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tborder: \"1px solid #E63D3D\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tautoClose: false,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn throwError(er);\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.subscribe(async (val) => {\n\t\t\t\t\tthis.authService.updateToken(val.token);\n\t\t\t\t\tthis.authService.initUser();\n\t\t\t\t\tawait this.router.navigateByUrl(`/email-verify?email=${email}`);\n\t\t\t\t});\n\t\t} catch (err: any) {\n\t\t\tconst { code } = err.error;\n\t\t\tif (code === 1002) {\n\t\t\t\t// this.form.get('securityData').get('email').setErrors({ 1002: true });\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getFormGroup(): FormGroup {\n\t\treturn this.fb.group({\n\t\t\tcompany: [\"\", [onlyLatinAndNumberAndSymbols(), Validators.required]],\n\t\t\tfullName: [\"\", [Validators.required, fullName(), onlyLatin()]],\n\t\t\tphone: [\"\", [Validators.required]],\n\t\t\ttermsAndConditions: [null, Validators.required],\n\t\t\tcategories: [[], Validators.required],\n\t\t\troleId: [null, Validators.required],\n\t\t\tcountry: [null, Validators.required],\n\t\t\tpreferences: [[]],\n\t\t});\n\t}\n\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"registerWithForm(form)\">\n\t<input\n\t\ttype=\"text\"\n\t\tid=\"fullName\"\n\t\tname=\"fullName\"\n\t\tb2bNgxInput\n\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"\n\t\t[label]=\"'LABELS.FULL_NAME' | translate\"\n\t\tlabelClass=\"auth-register-individual-account__main-input\"\n\t\t[placeholder]=\"'PLACEHOLDERS.YOUR_FULL_NAME' | translate\"\n\t\tformControlName=\"fullName\" />\n\t<p\n\t\t[@fadeInOut]\n\t\tclass=\"auth-register-individual-account__main-input-error\"\n\t\t*ngIf=\"form.get('fullName')?.errors?.['fullName']\">\n\t\t{{ \"ERRORS.USER_ENGLISH_NAME\" | translate }}\n\t</p>\n\t<p\n\t\t[@fadeInOut]\n\t\tclass=\"auth-register-individual-account__main-input-error\"\n\t\t*ngIf=\"form.get('fullName')?.errors?.['latin'] && !form.get('fullName')?.errors?.['fullName']\">\n\t\t{{ \"ERRORS.USER_ENGLISH_LETTERS\" | translate }}\n\t</p>\n\n<!--\t<b2b-ngx-tel-->\n<!--\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"-->\n<!--\t\tclass=\"auth-register-individual-account__main-input\"-->\n<!--\t\t[placeholder]=\"t('PLACEHOLDERS.YOUR_PHONE_NUMBER')\"-->\n<!--\t\t[errors]=\"form.get('phone').errors\"-->\n<!--\t\tformControlName=\"phone\"-->\n<!--\t\t>{{ t(\"LABELS.PHONE\") }}</b2b-ngx-tel-->\n<!--\t>-->\n\t<input\n\t\ttype=\"company\"\n\t\tid=\"company\"\n\t\tname=\"company\"\n\t\tb2bNgxInput\n\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"\n\t\t[label]=\"'LABELS.COMPANY_NAME' | translate\"\n\t\tlabelClass=\"auth-register-individual-account__main-input\"\n\t\t[placeholder]=\"'PLACEHOLDERS.COMPANY_NAME' | translate\"\n\t\tformControlName=\"company\" />\n\t<p [@fadeInOut] class=\"auth-register-individual-account__main-input-error\" *ngIf=\"form.get('company')?.errors?.['latin']\">\n\t\t{{ \"ERRORS.USER_ENGLISH_LETTERS\" | translate }}\n\t</p>\n\n\t<b2b-ngx-country-select\n\t\t[theme]=\"b2bNgxSelectThemeEnum.BACKGROUND_GRAY\"\n\t\tclass=\"auth-register-individual-account__main-input\"\n\t\tplaceholder=\"Select Country\"\n\t\tformControlName=\"country\"\n\t\t>Company’s country\n\t</b2b-ngx-country-select>\n\t<ng-container *ngIf=\"roles$ | async as roles\">\n    <b2b-ngx-select\n      [options]=\"roles\"\n      bindValue=\"_id\"\n      bindLabel=\"displayName\"\n      class=\"auth-register-individual-account__main-input\"\n      placeholder=\"Select\"\n      [theme]=\"b2bNgxSelectThemeEnum.BACKGROUND_GRAY\"\n      formControlName=\"roleId\"\n    >Type of business\n    </b2b-ngx-select>\n  </ng-container>\n<!--\t<b2b-categories-dialog-->\n<!--\t\tclass=\"auth-register-individual-account__main-input\"-->\n<!--\t\tformControlName=\"categories\"-->\n<!--\t\t[theme]=\"b2bNgxSelectThemeEnum.BACKGROUND_GRAY\"-->\n<!--\t\tplaceholder=\"What product do you deal with?\">-->\n<!--\t\tCategory-->\n<!--\t</b2b-categories-dialog>-->\n\n\t<ng-template let-error let-text=\"text\" #tpl>\n\t\t<label class=\"control-error\">{{ \"ERRORS.TERMS_CONDITIONS\" | translate }}</label>\n\t</ng-template>\n\t<b2b-ngx-checkbox\n\t\tclass=\"auth-register-individual-account__main-checkbox\"\n\t\t[errors]=\"form.controls['termsAndConditions']!.errors \"\n\t\tformControlName=\"termsAndConditions\"\n\t\t>{{ \"AUTH.AGREE\" | translate }}\n\t\t<a\n\t\t\tb2bNgxLink\n\t\t\t[theme]=\"b2bNgxLinkThemeEnum.TEXT_BLUE\"\n\t\t\t[routerLink]=\"b2bNgxLinkService.getLink('/terms-and-conditions') | async\"\n\t\t\t>terms & conditions</a\n\t\t>\n\t\tand\n\t\t<a\n\t\t\tb2bNgxLink\n\t\t\t[theme]=\"b2bNgxLinkThemeEnum.TEXT_BLUE\"\n\t\t\t[routerLink]=\"b2bNgxLinkService.getLink('/privacy-policy') | async\"\n\t\t\t>privacy policy</a\n\t\t></b2b-ngx-checkbox>\n\t<button\n\t\tb2bNgxButton\n\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLACK\"\n\t\tclass=\"auth-register-individual-account__create-account-button\"\n\t\ttype=\"submit\">\n\t\t{{ \"BUTTONS.CREATE_ACCOUNT\" | translate }}\n\t</button>\n</form>\n","import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\n\nconst routes: Routes = [];\n\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule],\n})\nexport class AuthRegisterIndividualAccountRoutingModule {\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { B2bNgxBackModule } from \"@b2b/ngx-back\";\nimport { B2bNgxButtonModule } from \"@b2b/ngx-button\";\nimport { B2bNgxCheckboxModule } from \"@b2b/ngx-checkbox\";\nimport { B2bNgxIconModule } from \"@b2b/ngx-icon\";\nimport { B2bNgxImageModule } from \"@b2b/ngx-image\";\nimport { B2bNgxInputModule } from \"@b2b/ngx-input\";\nimport { B2bNgxLinkModule } from \"@b2b/ngx-link\";\nimport { AuthRegisterIndividualAccountComponent} from \"./layout/auth-register-individual-account.component\";\nimport { AuthRegisterIndividualAccountRoutingModule } from \"./auth-register-individual-account-routing.module\";\nimport { B2bNgxSelectModule } from \"@b2b/ngx-select\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { B2bNgxCountrySelectModule } from \"@b2b/ngx-country-select\";\nimport { AuthRegisterIndividualAccountFirstStepComponent } from \"../auth-register-individual-account-first-step/auth-register-individual-account-first-step.component\";\nimport { AuthRegisterIndividualAccountSecondStepComponent } from \"../auth-register-individual-account-second-step/auth-register-individual-account-second-step.component\";\nimport {TranslateModule} from \"@ngx-translate/core\";\n\n@NgModule({\n\tdeclarations: [\n\t\tAuthRegisterIndividualAccountComponent,\n\t\tAuthRegisterIndividualAccountFirstStepComponent,\n\t\tAuthRegisterIndividualAccountSecondStepComponent,\n\t],\n    imports: [\n        CommonModule,\n        AuthRegisterIndividualAccountRoutingModule,\n        ReactiveFormsModule,\n        // ErrorTailorModule,\n        B2bNgxInputModule,\n        B2bNgxButtonModule,\n        // B2bNgxDividerModule,\n        B2bNgxCheckboxModule,\n        B2bNgxLinkModule,\n        B2bNgxBackModule,\n        // B2bNgxTelModule,\n        // B2bNgxTreeviewModule,\n\t\t\tTranslateModule,\n        B2bNgxIconModule,\n        B2bNgxImageModule,\n        B2bNgxSelectModule,\n        MatDialogModule,\n        B2bNgxCountrySelectModule,\n        // CategoriesDialogModule,\n    ],\n})\nexport class AuthRegisterIndividualAccountModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from \"@angular/core\";\nimport { UntilDestroy } from \"@ngneat/until-destroy\";\nimport { NavigationStart, Router } from \"@angular/router\";\nimport { B2bNgxLinkService, B2bNgxLinkThemeEnum } from \"@b2b/ngx-link\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { filter, tap } from \"rxjs/operators\";\nimport { animate, style, transition, trigger } from \"@angular/animations\";\nimport { B2bNgxButtonThemeEnum } from \"@b2b/ngx-button\";\nimport {environment} from \"../../../../../environments/environment\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@UntilDestroy()\n@Component({\n\tselector: \"b2b-auth-register-individual-account\",\n\ttemplateUrl: \"./auth-register-individual-account.component.html\",\n\tstyleUrls: [\"./auth-register-individual-account.component.scss\"],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tanimations: [\n\t\ttrigger(\"fadeInOut\", [\n\t\t\ttransition(\":enter\", [\n\t\t\t\t// :enter is alias to 'void => *'\n\t\t\t\tstyle({ opacity: 0 }),\n\t\t\t\tanimate(500, style({ opacity: 1 })),\n\t\t\t]),\n\t\t\ttransition(\":leave\", [\n\t\t\t\t// :leave is alias to '* => void'\n\t\t\t\tanimate(500, style({ opacity: 0 })),\n\t\t\t]),\n\t\t]),\n\t],\n})\nexport class AuthRegisterIndividualAccountComponent implements OnInit {\n\tpublic readonly b2bNgxLinkThemeEnum: typeof B2bNgxLinkThemeEnum;\n\tpublic readonly b2bNgxButtonThemeEnum: typeof B2bNgxButtonThemeEnum;\n\n\tprivate isSocialAuthButtonsVisibleSource: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n\tconstructor(\n\t\tprivate readonly router: Router,\n\t\tprivate readonly translateService: TranslateService,\n\t\tpublic readonly b2bNgxLinkService: B2bNgxLinkService,\n\t) {\n\t\tthis.b2bNgxLinkThemeEnum = B2bNgxLinkThemeEnum;\n\t\tthis.b2bNgxButtonThemeEnum = B2bNgxButtonThemeEnum;\n\n\t}\n\n\tpublic get isSocialAuthButtonsVisible$(): Observable<boolean> {\n\t\treturn this.isSocialAuthButtonsVisibleSource.asObservable();\n\t}\n\n\tngOnInit() {\n\t\tthis.isSocialAuthButtonsVisibleSource.next(this.router.url.includes(\"first-step\"));\n\t\tthis.initSocialAuthButtons();\n\t}\n\n\tpublic get showBadge() {\n\t\treturn this.translateService.currentLang !== \"en\";\n\t}\n\n\tregisterWithGoogle() {\n\t\tdocument.location.href = `${environment.apiUrl}auth/google`;\n\t}\n\n\tregisterWithLinkedIn() {\n\t\tdocument.location.href = `${environment.apiUrl}auth/linkedin`;\n\t}\n\n\tprivate initSocialAuthButtons(): void {\n\t\tthis.router.events\n\t\t\t.pipe(\n\t\t\t\tfilter((event: any) => event instanceof NavigationStart),\n\t\t\t\ttap((event: NavigationStart) => this.isSocialAuthButtonsVisibleSource.next(event.url.includes(\"first-step\")))\n\t\t\t)\n\t\t\t.subscribe();\n\t}\n\n  processSignInClick() {\n\n  }\n}\n","<div class=\"auth-register-individual-account__wrapper\">\n\t<div class=\"auth-register-individual-account__header\">\n\t\t<p class=\"auth-register-individual-account__header-text-wrapper\">\n\t\t\t<span class=\"auth-register-individual-account__header-text\">{{ \"AUTH.ALREADY_HAVE\" | translate }}</span>\n\t\t\t<a\n\t\t\t\t(click)=\"processSignInClick()\"\n\t\t\t\tb2bNgxLink\n\t\t\t\t[theme]=\"b2bNgxLinkThemeEnum.TEXT_BLUE\"\n\t\t\t\t[routerLink]=\"b2bNgxLinkService.getLink('/auth/log-in') | async\"\n\t\t\t\tclass=\"auth-register-individual-account__header-link\"\n\t\t\t\tqueryParamsHandling=\"merge\"\n\t\t\t\t>{{ \"AUTH.LOG_IN\" | translate }}</a\n\t\t\t>\n\t\t</p>\n\t</div>\n\n\t<div class=\"auth-register-individual-account__main\">\n\t\t<h2 class=\"auth-register-individual-account__main-title\">\n\t\t\t{{ \"AUTH.REGISTER_INDIVIDUAL_ACCOUNT\" | translate }}\n\t\t</h2>\n\n\t\t<form class=\"auth-register-individual-account__main-form\">\n\t\t\t<ng-container>\n\t\t\t\t<button\n\t\t\t\t\tb2bNgxButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t[hidden]=\"false\"\n\t\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_WHITE\"\n\t\t\t\t\tclass=\"auth-register-individual-account__register-with-google-button\"\n\t\t\t\t\t(click)=\"registerWithGoogle()\">\n\t\t\t\t\t<img b2bNgxImage name=\"google\" class=\"auth-register-individual-account__register-with-google-button__icon\" />\n\t\t\t\t\t{{ \"AUTH.REGISTER_GOOGLE\" | translate }}\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tb2bNgxButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t[hidden]=\"false\"\n\t\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_WHITE\"\n\t\t\t\t\tclass=\"auth-register-individual-account__register-with-google-button\"\n\t\t\t\t\t(click)=\"registerWithLinkedIn()\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tb2bNgxImage\n\t\t\t\t\t\tname=\"linkedin\"\n\t\t\t\t\t\tclass=\"auth-register-individual-account__register-with-google-button__icon\" />\n\t\t\t\t\t{{ \"AUTH.REGISTER_LINKEDIN\" | translate }}\n\t\t\t\t</button>\n<!--\t\t\t\t<b2b-ngx-divider [hidden]=\"false\" theme=\"white\" class=\"auth-register-individual-account__main-divider\"-->\n<!--\t\t\t\t\t>or</b2b-ngx-divider-->\n<!--\t\t\t\t>-->\n\t\t\t</ng-container>\n\t\t\t<div class=\"auth-register-individual-account__main-input\">\n\t\t\t\t<router-outlet></router-outlet>\n\t\t\t</div>\n\t\t</form>\n\t</div>\n</div>\n","export enum BrowserStorageKeysEnum {\n\tFIRST_STEP_DATA = \"firstStepData\",\n\tBLOG_PREVIOUS_PAGE = \"blogPreviousPage\",\n\tLATEST_OFFERS_VISITED = \"visited\"\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport function fullName(): ValidatorFn {\n\tconst fullName = /.{1,} .{1,}/;\n\n\treturn (control: AbstractControl): ValidationErrors | null => {\n\t\tif (!control.value) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!fullName.test(String(control.value).toLowerCase())) {\n\t\t\treturn { fullName: true };\n\t\t}\n\n\t\treturn null;\n\t};\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport function onlyLatinAndNumberAndSymbols(): ValidatorFn {\n\tconst latinCharacters = /^[A-Za-z0-9!@#$%^&*+()_,./?=|№:/'-]+$/;\n\n\treturn (control: AbstractControl): ValidationErrors | null => {\n\t\tif (!control.value) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst str = control.value.replace(/\\s+/g, \"\");\n\t\tif (!latinCharacters.test(String(str.trim()).toLowerCase())) {\n\t\t\treturn { cyrillic: true };\n\t\t}\n\n\t\treturn null;\n\t};\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport function onlyLatin(): ValidatorFn {\n\tconst latinCharacters = /^[a-zA-Z]+$/;\n\n\treturn (control: AbstractControl): ValidationErrors | null => {\n\t\tif (!control.value) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst noSpaceStr = control.value.replace(/\\s/g, \"\");\n\t\tif (!latinCharacters.test(String(noSpaceStr).toLowerCase())) {\n\t\t\treturn { latin: true };\n\t\t}\n\n\t\treturn null;\n\t};\n}\n","'use strict'\n\nvar data = require('./data.json')\n\n/** Precompute name and code lookups. */\nvar nameMap = {}\nvar codeMap = {}\ndata.forEach(mapCodeAndName)\n\nfunction mapCodeAndName (country) {\n  nameMap[country.name.toLowerCase()] = country.code\n  codeMap[country.code.toLowerCase()] = country.name\n}\n\nexports.overwrite = function overwrite (countries) {\n  if (!countries || !countries.length) return\n  countries.forEach(function (country) {\n    var foundIndex = data.findIndex(function (item) {\n      return item.code === country.code\n    })\n    data[foundIndex] = country\n    mapCodeAndName(country)\n  })\n}\n\nexports.getCode = function getCode (name) {\n  return nameMap[name.toLowerCase()]\n}\n\nexports.getName = function getName (code) {\n  return codeMap[code.toLowerCase()]\n}\n\nexports.getNames = function getNames () {\n  return data.map(function (country) {\n    return country.name\n  })\n}\n\nexports.getCodes = function getCodes () {\n  return data.map(function (country) {\n    return country.code\n  })\n}\n\nexports.getCodeList = function getCodeList () {\n  return codeMap\n}\n\nexports.getNameList = function getNameList () {\n  return nameMap\n}\n\nexports.getData = function getData () {\n  return data\n}\n","import { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, InjectionToken, Injector, TemplateRef, InjectFlags, Injectable, SkipSelf, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayRef, OverlayModule } from '@angular/cdk/overlay';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, defer, of } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Configuration for opening a modal dialog. */\nclass DialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Optional CSS class or classes applied to the overlay panel. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Optional CSS class or classes applied to the overlay backdrop. */\n        this.backdropClass = '';\n        /** Whether the dialog closes with the escape key or pointer events outside the panel element. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Dialog label applied via `aria-label` */\n        this.ariaLabel = null;\n        /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n        this.ariaModal = true;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the previously-focused element upon closing.\n         * Has the following behavior based on the type that is passed in:\n         * - `boolean` - when true, will return focus to the element that was focused before the dialog\n         *    was opened, otherwise won't restore focus at all.\n         * - `string` - focus will be restored to the first element that matches the CSS selector.\n         * - `HTMLElement` - focus will be restored to the specific element.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user navigates backwards or forwards through browser\n         * history. This does not apply to navigation via anchor element unless using URL-hash based\n         * routing (`HashLocationStrategy` in the Angular router).\n         */\n        this.closeOnNavigation = true;\n        /**\n         * Whether the dialog should close when the dialog service is destroyed. This is useful if\n         * another service is wrapping the dialog and is managing the destruction instead.\n         */\n        this.closeOnDestroy = true;\n    }\n}\n\nfunction throwDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * @docs-private\n */\nclass CdkDialogContainer extends BasePortalOutlet {\n    constructor(_elementRef, _focusTrapFactory, _document, _config, _interactivityChecker, _ngZone, _overlayRef, _focusMonitor) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._config = _config;\n        this._interactivityChecker = _interactivityChecker;\n        this._ngZone = _ngZone;\n        this._overlayRef = _overlayRef;\n        this._focusMonitor = _focusMonitor;\n        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * Type of interaction that led to the dialog being closed. This is used to determine\n         * whether the focus style will be applied when returning focus to its original location\n         * after the dialog is closed.\n         */\n        this._closeInteractionType = null;\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwDialogContentAlreadyAttachedError();\n            }\n            const result = this._portalOutlet.attachDomPortal(portal);\n            this._contentAttached();\n            return result;\n        };\n        this._ariaLabelledBy = this._config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    _contentAttached() {\n        this._initializeFocusTrap();\n        this._handleBackdropClicks();\n        this._captureInitialFocus();\n    }\n    /**\n     * Can be used by child classes to customize the initial focus\n     * capturing behavior (e.g. if it's tied to an animation).\n     */\n    _captureInitialFocus() {\n        this._trapFocus();\n    }\n    ngOnDestroy() {\n        this._restoreFocus();\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwDialogContentAlreadyAttachedError();\n        }\n        const result = this._portalOutlet.attachComponentPortal(portal);\n        this._contentAttached();\n        return result;\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwDialogContentAlreadyAttachedError();\n        }\n        const result = this._portalOutlet.attachTemplatePortal(portal);\n        this._contentAttached();\n        return result;\n    }\n    // TODO(crisbeto): this shouldn't be exposed, but there are internal references to it.\n    /** Captures focus if it isn't already inside the dialog. */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    element.removeEventListener('blur', callback);\n                    element.removeEventListener('mousedown', callback);\n                    element.removeAttribute('tabindex');\n                };\n                element.addEventListener('blur', callback);\n                element.addEventListener('mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n     * cannot be moved then focus will go to the dialog container.\n     */\n    _trapFocus() {\n        const element = this._elementRef.nativeElement;\n        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty when setting focus when autoFocus isn't set to\n        // dialog. If the element inside the dialog can't be focused, then the container is focused\n        // so the user can't tab into other elements behind it.\n        switch (this._config.autoFocus) {\n            case false:\n            case 'dialog':\n                // Ensure that focus is on the dialog container. It's possible that a different\n                // component tried to move focus while the open animation was running. See:\n                // https://github.com/angular/components/issues/16215. Note that we only want to do this\n                // if the focus isn't inside the dialog already, because it's possible that the consumer\n                // turned off `autoFocus` in order to move focus themselves.\n                if (!this._containsFocus()) {\n                    element.focus();\n                }\n                break;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady().then(focusedSuccessfully => {\n                    // If we weren't able to find a focusable element in the dialog, then focus the dialog\n                    // container instead.\n                    if (!focusedSuccessfully) {\n                        this._focusDialogContainer();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this._config.autoFocus);\n                break;\n        }\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n        const focusConfig = this._config.restoreFocus;\n        let focusTargetElement = null;\n        if (typeof focusConfig === 'string') {\n            focusTargetElement = this._document.querySelector(focusConfig);\n        }\n        else if (typeof focusConfig === 'boolean') {\n            focusTargetElement = focusConfig ? this._elementFocusedBeforeDialogWasOpened : null;\n        }\n        else if (focusConfig) {\n            focusTargetElement = focusConfig;\n        }\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus &&\n            focusTargetElement &&\n            typeof focusTargetElement.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement ||\n                activeElement === this._document.body ||\n                activeElement === element ||\n                element.contains(activeElement)) {\n                if (this._focusMonitor) {\n                    this._focusMonitor.focusVia(focusTargetElement, this._closeInteractionType);\n                    this._closeInteractionType = null;\n                }\n                else {\n                    focusTargetElement.focus();\n                }\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer() {\n        // Note that there is no focus method when rendering on the server.\n        if (this._elementRef.nativeElement.focus) {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n        const element = this._elementRef.nativeElement;\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return element === activeElement || element.contains(activeElement);\n    }\n    /** Sets up the focus trap. */\n    _initializeFocusTrap() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        // Save the previously focused element. This element will be re-focused\n        // when the dialog closes.\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n        }\n    }\n    /** Sets up the listener that handles clicks on the dialog backdrop. */\n    _handleBackdropClicks() {\n        // Clicking on the backdrop will move focus out of dialog.\n        // Recapture it if closing via the backdrop is disabled.\n        this._overlayRef.backdropClick().subscribe(() => {\n            if (this._config.disableClose) {\n                this._recaptureFocus();\n            }\n        });\n    }\n}\nCdkDialogContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkDialogContainer, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: DOCUMENT, optional: true }, { token: DialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1$1.OverlayRef }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });\nCdkDialogContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkDialogContainer, selector: \"cdk-dialog-container\", host: { attributes: { \"tabindex\": \"-1\" }, properties: { \"attr.id\": \"_config.id || null\", \"attr.role\": \"_config.role\", \"attr.aria-modal\": \"_config.ariaModal\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledBy\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\" }, classAttribute: \"cdk-dialog-container\" }, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet></ng-template>\\n\", styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"], dependencies: [{ kind: \"directive\", type: i3.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, host: {\n                        'class': 'cdk-dialog-container',\n                        'tabindex': '-1',\n                        '[attr.id]': '_config.id || null',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-modal]': '_config.ariaModal',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    }, template: \"<ng-template cdkPortalOutlet></ng-template>\\n\", styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DialogConfig]\n                    }] }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1$1.OverlayRef }, { type: i1.FocusMonitor }];\n    }, propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a dialog opened via the Dialog service.\n */\nclass DialogRef {\n    constructor(overlayRef, config) {\n        this.overlayRef = overlayRef;\n        this.config = config;\n        /** Emits when the dialog has been closed. */\n        this.closed = new Subject();\n        this.disableClose = config.disableClose;\n        this.backdropClick = overlayRef.backdropClick();\n        this.keydownEvents = overlayRef.keydownEvents();\n        this.outsidePointerEvents = overlayRef.outsidePointerEvents();\n        this.id = config.id; // By the time the dialog is created we are guaranteed to have an ID.\n        this.keydownEvents.subscribe(event => {\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this.close(undefined, { focusOrigin: 'keyboard' });\n            }\n        });\n        this.backdropClick.subscribe(() => {\n            if (!this.disableClose) {\n                this.close(undefined, { focusOrigin: 'mouse' });\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param result Optional result to return to the dialog opener.\n     * @param options Additional options to customize the closing behavior.\n     */\n    close(result, options) {\n        if (this.containerInstance) {\n            const closedSubject = this.closed;\n            this.containerInstance._closeInteractionType = (options === null || options === void 0 ? void 0 : options.focusOrigin) || 'program';\n            this.overlayRef.dispose();\n            closedSubject.next(result);\n            closedSubject.complete();\n            this.componentInstance = this.containerInstance = null;\n        }\n    }\n    /** Updates the position of the dialog based on the current position strategy. */\n    updatePosition() {\n        this.overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this.overlayRef.updateSize({ width, height });\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this.overlayRef.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this.overlayRef.removePanelClass(classes);\n        return this;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the Dialog's ScrollStrategy. */\nconst DIALOG_SCROLL_STRATEGY = new InjectionToken('DialogScrollStrategy');\n/** Injection token for the Dialog's Data. */\nconst DIALOG_DATA = new InjectionToken('DialogData');\n/** Injection token that can be used to provide default options for the dialog module. */\nconst DEFAULT_DIALOG_CONFIG = new InjectionToken('DefaultDialogConfig');\n/** @docs-private */\nfunction DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nconst DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Unique id for the created dialog. */\nlet uniqueId = 0;\nclass Dialog {\n    constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    open(componentOrTemplateRef, config) {\n        const defaults = (this._defaultOptions || new DialogConfig());\n        config = Object.assign(Object.assign({}, defaults), config);\n        config.id = config.id || `cdk-dialog-${uniqueId++}`;\n        if (config.id &&\n            this.getDialogById(config.id) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        const overlayConfig = this._getOverlayConfig(config);\n        const overlayRef = this._overlay.create(overlayConfig);\n        const dialogRef = new DialogRef(overlayRef, config);\n        const dialogContainer = this._attachContainer(overlayRef, dialogRef, config);\n        dialogRef.containerInstance = dialogContainer;\n        this._attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.closed.subscribe(() => this._removeOpenDialog(dialogRef, true));\n        this.afterOpened.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        reverseForEach(this.openDialogs, dialog => dialog.close());\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Make one pass over all the dialogs that need to be untracked, but should not be closed. We\n        // want to stop tracking the open dialog even if it hasn't been closed, because the tracking\n        // determines when `aria-hidden` is removed from elements outside the dialog.\n        reverseForEach(this._openDialogsAtThisLevel, dialog => {\n            // Check for `false` specifically since we want `undefined` to be interpreted as `true`.\n            if (dialog.config.closeOnDestroy === false) {\n                this._removeOpenDialog(dialog, false);\n            }\n        });\n        // Make a second pass and close the remaining dialogs. We do this second pass in order to\n        // correctly dispatch the `afterAllClosed` event in case we have a mixed array of dialogs\n        // that should be closed and dialogs that should not.\n        reverseForEach(this._openDialogsAtThisLevel, dialog => dialog.close());\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n        this._openDialogsAtThisLevel = [];\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param config The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(config) {\n        const state = new OverlayConfig({\n            positionStrategy: config.positionStrategy ||\n                this._overlay.position().global().centerHorizontally().centerVertically(),\n            scrollStrategy: config.scrollStrategy || this._scrollStrategy(),\n            panelClass: config.panelClass,\n            hasBackdrop: config.hasBackdrop,\n            direction: config.direction,\n            minWidth: config.minWidth,\n            minHeight: config.minHeight,\n            maxWidth: config.maxWidth,\n            maxHeight: config.maxHeight,\n            width: config.width,\n            height: config.height,\n            disposeOnNavigation: config.closeOnNavigation,\n        });\n        if (config.backdropClass) {\n            state.backdropClass = config.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachContainer(overlay, dialogRef, config) {\n        var _a;\n        const userInjector = config.injector || ((_a = config.viewContainerRef) === null || _a === void 0 ? void 0 : _a.injector);\n        const providers = [\n            { provide: DialogConfig, useValue: config },\n            { provide: DialogRef, useValue: dialogRef },\n            { provide: OverlayRef, useValue: overlay },\n        ];\n        let containerType;\n        if (config.container) {\n            if (typeof config.container === 'function') {\n                containerType = config.container;\n            }\n            else {\n                containerType = config.container.type;\n                providers.push(...config.container.providers(config));\n            }\n        }\n        else {\n            containerType = CdkDialogContainer;\n        }\n        const containerPortal = new ComponentPortal(containerType, config.viewContainerRef, Injector.create({ parent: userInjector || this._injector, providers }), config.componentFactoryResolver);\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogRef Reference to the dialog being opened.\n     * @param dialogContainer Component that is going to wrap the dialog content.\n     * @param config Configuration used to open the dialog.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config) {\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            const injector = this._createInjector(config, dialogRef, dialogContainer, undefined);\n            let context = { $implicit: config.data, dialogRef };\n            if (config.templateContext) {\n                context = Object.assign(Object.assign({}, context), (typeof config.templateContext === 'function'\n                    ? config.templateContext()\n                    : config.templateContext));\n            }\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, context, injector));\n        }\n        else {\n            const injector = this._createInjector(config, dialogRef, dialogContainer, this._injector);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector, config.componentFactoryResolver));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog being opened.\n     * @param dialogContainer Component that is going to wrap the dialog content.\n     * @param fallbackInjector Injector to use as a fallback when a lookup fails in the custom\n     * dialog injector, if the user didn't provide a custom one.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer, fallbackInjector) {\n        var _a;\n        const userInjector = config.injector || ((_a = config.viewContainerRef) === null || _a === void 0 ? void 0 : _a.injector);\n        const providers = [\n            { provide: DIALOG_DATA, useValue: config.data },\n            { provide: DialogRef, useValue: dialogRef },\n        ];\n        if (config.providers) {\n            if (typeof config.providers === 'function') {\n                providers.push(...config.providers(dialogRef, config, dialogContainer));\n            }\n            else {\n                providers.push(...config.providers);\n            }\n        }\n        if (config.direction &&\n            (!userInjector ||\n                !userInjector.get(Directionality, null, InjectFlags.Optional))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() },\n            });\n        }\n        return Injector.create({ parent: userInjector || fallbackInjector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     * @param emitEvent Whether to emit an event if this is the last dialog.\n     */\n    _removeOpenDialog(dialogRef, emitEvent) {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this._ariaHiddenElements.clear();\n                if (emitEvent) {\n                    this._getAfterAllClosed().next();\n                }\n            }\n        }\n    }\n    /** Hides all of the content that isn't an overlay from assistive technology. */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                const sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n}\nDialog.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Dialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: DEFAULT_DIALOG_CONFIG, optional: true }, { token: Dialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: DIALOG_SCROLL_STRATEGY }], target: i0.ɵɵFactoryTarget.Injectable });\nDialog.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Dialog });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Dialog, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: DialogConfig, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DEFAULT_DIALOG_CONFIG]\n                    }] }, { type: Dialog, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DIALOG_SCROLL_STRATEGY]\n                    }] }];\n    } });\n/**\n * Executes a callback against all elements in an array while iterating in reverse.\n * Useful if the array is being modified as it is being iterated.\n */\nfunction reverseForEach(items, callback) {\n    let i = items.length;\n    while (i--) {\n        callback(items[i]);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DialogModule {\n}\nDialogModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: DialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDialogModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: DialogModule, declarations: [CdkDialogContainer], imports: [OverlayModule, PortalModule, A11yModule], exports: [\n        // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n        // don't have to remember to import it or be faced with an unhelpful error.\n        PortalModule,\n        CdkDialogContainer\n    ] });\nDialogModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: DialogModule, providers: [Dialog, DIALOG_SCROLL_STRATEGY_PROVIDER], imports: [OverlayModule, PortalModule, A11yModule,\n        // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n        // don't have to remember to import it or be faced with an unhelpful error.\n        PortalModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: DialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, A11yModule],\n                    exports: [\n                        // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n                        // don't have to remember to import it or be faced with an unhelpful error.\n                        PortalModule,\n                        CdkDialogContainer,\n                    ],\n                    declarations: [CdkDialogContainer],\n                    providers: [Dialog, DIALOG_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkDialogContainer, DEFAULT_DIALOG_CONFIG, DIALOG_DATA, DIALOG_SCROLL_STRATEGY, DIALOG_SCROLL_STRATEGY_PROVIDER, DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, Dialog, DialogConfig, DialogModule, DialogRef, throwDialogContentAlreadyAttachedError };\n","import * as i1 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport * as i6 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, ElementRef, Optional, ApplicationRef, ANIMATION_MODULE_TYPE, InjectionToken, Directive, EventEmitter, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { supportsScrollBehavior, _isTestEnvironment, _getEventTarget } from '@angular/cdk/platform';\nimport * as i5 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { take, takeUntil, takeWhile } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n            // because it can throw off feature detections in `supportsScrollBehavior` which\n            // checks for `'scrollBehavior' in documentElement.style`.\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            }\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n                bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n            }\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const body = this._document.body;\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /** Detaches the overlay ref and disables the scroll strategy. */\n        this._detach = () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run(() => this._overlayRef.detach());\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /** Do nothing on scroll. */\n        this.noop = () => new NoopScrollStrategy();\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n        /** Block scrolling. */\n        this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollStrategyOptions, deps: [{ token: i1.ScrollDispatcher }, { token: i1.ViewportRuler }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nScrollStrategyOptions.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollStrategyOptions, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollStrategyOptions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.ScrollDispatcher }, { type: i1.ViewportRuler }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    constructor(config) {\n        /** Strategy to be used when handling scroll events while the overlay is open. */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /** Custom class to add to the overlay pane. */\n        this.panelClass = '';\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the possible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher, _animationsDisabled = false) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._animationsDisabled = _animationsDisabled;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (event) => this._backdropClick.next(event);\n        this._backdropTransitionendHandler = (event) => {\n            this._disposeBackdrop(event.target);\n        };\n        /** Stream of keydown events dispatched to this overlay. */\n        this._keydownEvents = new Subject();\n        /** Stream of mouse outside events dispatched to this overlay. */\n        this._outsidePointerEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        // Insert the host into the DOM before attaching the portal, otherwise\n        // the animations module will skip animations on repeat attachments.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        const attachResult = this._portalOutlet.attach(portal);\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        if (this._config.disposeOnNavigation) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        this._outsideClickDispatcher.add(this);\n        // TODO(crisbeto): the null check is here, because the portal outlet returns `any`.\n        // We should be guaranteed for the result to be `ComponentRef | EmbeddedViewRef`, but\n        // `instanceof EmbeddedViewRef` doesn't appear to work at the moment.\n        if (typeof (attachResult === null || attachResult === void 0 ? void 0 : attachResult.onDestroy) === 'function') {\n            // In most cases we control the portal and we know when it is being detached so that\n            // we can finish the disposal process. The exception is if the user passes in a custom\n            // `ViewContainerRef` that isn't destroyed through the overlay API. Note that we use\n            // `detach` here instead of `dispose`, because we don't know if the user intends to\n            // reattach the overlay at a later point. It also has the advantage of waiting for animations.\n            attachResult.onDestroy(() => {\n                if (this.hasAttached()) {\n                    // We have to delay the `detach` call, because detaching immediately prevents\n                    // other destroy hooks from running. This is likely a framework bug similar to\n                    // https://github.com/angular/angular/issues/46119\n                    this._ngZone.runOutsideAngular(() => Promise.resolve().then(() => this.detach()));\n                }\n            });\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        this._locationChanges.unsubscribe();\n        this._outsideClickDispatcher.remove(this);\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        var _a;\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this._disposeBackdrop(this._backdropElement);\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        this._outsideClickDispatcher.remove(this);\n        (_a = this._host) === null || _a === void 0 ? void 0 : _a.remove();\n        this._previousHostParent = this._pane = this._host = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._animationsDisabled) {\n            this._backdropElement.classList.add('cdk-overlay-backdrop-noop-animation');\n        }\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (!this._animationsDisabled && typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        const backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        if (this._animationsDisabled) {\n            this._disposeBackdrop(backdropToDetach);\n            return;\n        }\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular(() => {\n            backdropToDetach.addEventListener('transitionend', this._backdropTransitionendHandler);\n        });\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        this._backdropTimeout = this._ngZone.runOutsideAngular(() => setTimeout(() => {\n            this._disposeBackdrop(backdropToDetach);\n        }, 500));\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classes = coerceArray(cssClasses || []).filter(c => !!c);\n        if (classes.length) {\n            isAdd ? element.classList.add(...classes) : element.classList.remove(...classes);\n        }\n    }\n    /** Detaches the overlay content next time the zone stabilizes. */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            const subscription = this._ngZone.onStable\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe(() => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._host.remove();\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n    /** Removes a backdrop element from the DOM. */\n    _disposeBackdrop(backdrop) {\n        if (backdrop) {\n            backdrop.removeEventListener('click', this._backdropClickHandler);\n            backdrop.removeEventListener('transitionend', this._backdropTransitionendHandler);\n            backdrop.remove();\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement === backdrop) {\n                this._backdropElement = null;\n            }\n        }\n        if (this._backdropTimeout) {\n            clearTimeout(this._backdropTimeout);\n            this._backdropTimeout = undefined;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    ngOnDestroy() {\n        var _a;\n        (_a = this._containerElement) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const containerClass = 'cdk-overlay-container';\n        // TODO(crisbeto): remove the testing check once we have an overlay testing\n        // module or Angular starts tearing down the testing `NgModule`. See:\n        // https://github.com/angular/angular/issues/18831\n        if (this._platform.isBrowser || _isTestEnvironment()) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` + `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].remove();\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (_isTestEnvironment()) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!this._platform.isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayContainer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayContainer, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1$1.Platform }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /** Whether the overlay was pushed in a previous positioning. */\n        this._isPushed = false;\n        /** Whether the overlay can be pushed on-screen on the initial open. */\n        this._canPush = true;\n        /** Whether the overlay can grow via flexible width/height after the initial open. */\n        this._growAfterOpen = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this._hasFlexibleDimensions = true;\n        /** Whether the overlay position is locked. */\n        this._positionLocked = false;\n        /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n        this._viewportMargin = 0;\n        /** The Scrollable containers used to check scrollable view properties on position change. */\n        this._scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        /** Subject that emits whenever the position changes. */\n        this._positionChanges = new Subject();\n        /** Subscription to viewport size changes. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Default offset for the overlay along the x axis. */\n        this._offsetX = 0;\n        /** Default offset for the overlay along the y axis. */\n        this._offsetY = 0;\n        /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n        this._appliedPanelClasses = [];\n        /** Observable sequence of position changes. */\n        this.positionChanges = this._positionChanges;\n        this.setOrigin(connectedTo);\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef &&\n            overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satisfies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin, the overlay and the container to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        const containerRect = this._containerRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, containerRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos),\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        const lastPosition = this._lastPosition;\n        if (lastPosition) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n            const originPoint = this._getOriginPoint(this._originRect, this._containerRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n        else {\n            this.apply();\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, containerRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + originRect.width / 2;\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        // When zooming in Safari the container rectangle contains negative values for the position\n        // and we need to re-add them to the calculated coordinates.\n        if (containerRect.left < 0) {\n            x -= containerRect.left;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + originRect.height / 2;\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        // Normally the containerRect's top value would be zero, however when the overlay is attached to an input\n        // (e.g. in an autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        // Additionally, when zooming in Safari this fixes the vertical position.\n        if (containerRect.top < 0) {\n            y -= containerRect.top;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, rawOverlayRect, viewport, position) {\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = x + overlay.width - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = y + overlay.height - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: overlay.width * overlay.height === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlay at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically || (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally || (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occurring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param rawOverlayRect Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y,\n            };\n        }\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? viewport.left - scrollPosition.left - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? viewport.top - scrollPosition.top - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollableViewProperties = this._getScrollVisibility();\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - previousHeight / 2;\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) || (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) || (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - previousWidth / 2;\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stretches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - 2 * this._viewportMargin,\n            height: height - 2 * this._viewportMargin,\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breaking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the ClientRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width,\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return !units || units === 'px' ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n/**\n * Gets a version of an element's bounding `ClientRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `ClientRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n    return {\n        top: Math.floor(clientRect.top),\n        right: Math.floor(clientRect.right),\n        bottom: Math.floor(clientRect.bottom),\n        left: Math.floor(clientRect.left),\n        width: Math.floor(clientRect.width),\n        height: Math.floor(clientRect.height),\n    };\n}\nconst STANDARD_DROPDOWN_BELOW_POSITIONS = [\n    { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n    { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n    { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },\n];\nconst STANDARD_DROPDOWN_ADJACENT_POSITIONS = [\n    { originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top' },\n    { originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top' },\n    { originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom' },\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._alignItems = '';\n        this._xPosition = '';\n        this._xOffset = '';\n        this._width = '';\n        this._height = '';\n        this._isDisposed = false;\n    }\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'left';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'right';\n        return this;\n    }\n    /**\n     * Sets the overlay to the start of the viewport, depending on the overlay direction.\n     * This will be to the left in LTR layouts and to the right in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    start(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'start';\n        return this;\n    }\n    /**\n     * Sets the overlay to the end of the viewport, depending on the overlay direction.\n     * This will be to the right in LTR layouts and to the left in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    end(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._xPosition = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        const xPosition = this._xPosition;\n        const xOffset = this._xOffset;\n        const isRtl = this._overlayRef.getConfig().direction === 'rtl';\n        let marginLeft = '';\n        let marginRight = '';\n        let justifyContent = '';\n        if (shouldBeFlushHorizontally) {\n            justifyContent = 'flex-start';\n        }\n        else if (xPosition === 'center') {\n            justifyContent = 'center';\n            if (isRtl) {\n                marginRight = xOffset;\n            }\n            else {\n                marginLeft = xOffset;\n            }\n        }\n        else if (isRtl) {\n            if (xPosition === 'left' || xPosition === 'end') {\n                justifyContent = 'flex-end';\n                marginLeft = xOffset;\n            }\n            else if (xPosition === 'right' || xPosition === 'start') {\n                justifyContent = 'flex-start';\n                marginRight = xOffset;\n            }\n        }\n        else if (xPosition === 'left' || xPosition === 'start') {\n            justifyContent = 'flex-start';\n            marginLeft = xOffset;\n        }\n        else if (xPosition === 'right' || xPosition === 'end') {\n            justifyContent = 'flex-end';\n            marginRight = xOffset;\n        }\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : marginLeft;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = shouldBeFlushHorizontally ? '0' : marginRight;\n        parentStyles.justifyContent = justifyContent;\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent =\n            parentStyles.alignItems =\n                styles.marginTop =\n                    styles.marginBottom =\n                        styles.marginLeft =\n                            styles.marginRight =\n                                styles.position =\n                                    '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayPositionBuilder, deps: [{ token: i1.ViewportRuler }, { token: DOCUMENT }, { token: i1$1.Platform }, { token: OverlayContainer }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayPositionBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayPositionBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayPositionBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1$1.Platform }, { type: OverlayContainer }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    constructor(document) {\n        /** Currently attached overlays in the order they were attached. */\n        this._attachedOverlays = [];\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n}\nBaseOverlayDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: BaseOverlayDispatcher, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nBaseOverlayDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: BaseOverlayDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: BaseOverlayDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document, \n    /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n        super(document);\n        this._ngZone = _ngZone;\n        /** Keyboard event listener that will be attached to the body. */\n        this._keydownListener = (event) => {\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    const keydownEvents = overlays[i]._keydownEvents;\n                    /** @breaking-change 14.0.0 _ngZone will be required. */\n                    if (this._ngZone) {\n                        this._ngZone.run(() => keydownEvents.next(event));\n                    }\n                    else {\n                        keydownEvents.next(event);\n                    }\n                    break;\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n                this._ngZone.runOutsideAngular(() => this._document.body.addEventListener('keydown', this._keydownListener));\n            }\n            else {\n                this._document.body.addEventListener('keydown', this._keydownListener);\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayKeyboardDispatcher, deps: [{ token: DOCUMENT }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayKeyboardDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayKeyboardDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayKeyboardDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.NgZone, decorators: [{\n                        type: Optional\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    constructor(document, _platform, \n    /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n        super(document);\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._cursorStyleIsSet = false;\n        /** Store pointerdown event target to track origin of click. */\n        this._pointerDownListener = (event) => {\n            this._pointerDownEventTarget = _getEventTarget(event);\n        };\n        /** Click event listener that will be attached to the body propagate phase. */\n        this._clickListener = (event) => {\n            const target = _getEventTarget(event);\n            // In case of a click event, we want to check the origin of the click\n            // (e.g. in case where a user starts a click inside the overlay and\n            // releases the click outside of it).\n            // This is done by using the event target of the preceding pointerdown event.\n            // Every click event caused by a pointer device has a preceding pointerdown\n            // event, unless the click was programmatically triggered (e.g. in a unit test).\n            const origin = event.type === 'click' && this._pointerDownEventTarget\n                ? this._pointerDownEventTarget\n                : target;\n            // Reset the stored pointerdown event target, to avoid having it interfere\n            // in subsequent events.\n            this._pointerDownEventTarget = null;\n            // We copy the array because the original may be modified asynchronously if the\n            // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n            // the for loop.\n            const overlays = this._attachedOverlays.slice();\n            // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n            // We want to target all overlays for which the click could be considered as outside click.\n            // As soon as we reach an overlay for which the click is not outside click we break off\n            // the loop.\n            for (let i = overlays.length - 1; i > -1; i--) {\n                const overlayRef = overlays[i];\n                if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                    continue;\n                }\n                // If it's a click inside the overlay, just break - we should do nothing\n                // If it's an outside click (both origin and target of the click) dispatch the mouse event,\n                // and proceed with the next overlay\n                if (overlayRef.overlayElement.contains(target) ||\n                    overlayRef.overlayElement.contains(origin)) {\n                    break;\n                }\n                const outsidePointerEvents = overlayRef._outsidePointerEvents;\n                /** @breaking-change 14.0.0 _ngZone will be required. */\n                if (this._ngZone) {\n                    this._ngZone.run(() => outsidePointerEvents.next(event));\n                }\n                else {\n                    outsidePointerEvents.next(event);\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body. See:\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        if (!this._isAttached) {\n            const body = this._document.body;\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n                this._ngZone.runOutsideAngular(() => this._addEventListeners(body));\n            }\n            else {\n                this._addEventListeners(body);\n            }\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = body.style.cursor;\n                body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            const body = this._document.body;\n            body.removeEventListener('pointerdown', this._pointerDownListener, true);\n            body.removeEventListener('click', this._clickListener, true);\n            body.removeEventListener('auxclick', this._clickListener, true);\n            body.removeEventListener('contextmenu', this._clickListener, true);\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n    _addEventListeners(body) {\n        body.addEventListener('pointerdown', this._pointerDownListener, true);\n        body.addEventListener('click', this._clickListener, true);\n        body.addEventListener('auxclick', this._clickListener, true);\n        body.addEventListener('contextmenu', this._clickListener, true);\n    }\n}\nOverlayOutsideClickDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayOutsideClickDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1$1.Platform }, { type: i0.NgZone, decorators: [{\n                        type: Optional\n                    }] }];\n    } });\n\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(\n    /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location, _outsideClickDispatcher, _animationsModuleType) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._animationsModuleType = _animationsModuleType;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        const host = this._createHostElement();\n        const pane = this._createPaneElement(host);\n        const portalOutlet = this._createPortalOutlet(pane);\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher, this._animationsModuleType === 'NoopAnimations');\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(host) {\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    _createHostElement() {\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Overlay, deps: [{ token: ScrollStrategyOptions }, { token: OverlayContainer }, { token: i0.ComponentFactoryResolver }, { token: OverlayPositionBuilder }, { token: OverlayKeyboardDispatcher }, { token: i0.Injector }, { token: i0.NgZone }, { token: DOCUMENT }, { token: i5.Directionality }, { token: i6.Location }, { token: OverlayOutsideClickDispatcher }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlay.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Overlay });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Overlay, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: i0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: i0.Injector }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i5.Directionality }, { type: i6.Location }, { type: OverlayOutsideClickDispatcher }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n    },\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkOverlayOrigin, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkOverlayOrigin.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkOverlayOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                    exportAs: 'cdkOverlayOrigin',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        this._attachSubscription = Subscription.EMPTY;\n        this._detachSubscription = Subscription.EMPTY;\n        this._positionSubscription = Subscription.EMPTY;\n        /** Margin between the overlay and the viewport edges. */\n        this.viewportMargin = 0;\n        /** Whether the overlay is open. */\n        this.open = false;\n        /** Whether the overlay can be closed by user interaction. */\n        this.disableClose = false;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new EventEmitter();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new EventEmitter();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new EventEmitter();\n        /** Emits when there are keyboard events that are targeted at the overlay. */\n        this.overlayKeydown = new EventEmitter();\n        /** Emits when there are mouse outside click events that are targeted at the overlay. */\n        this.overlayOutsideClick = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() {\n        return this._offsetX;\n    }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() {\n        return this._offsetY;\n    }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** Whether or not the overlay should attach a backdrop. */\n    get hasBackdrop() {\n        return this._hasBackdrop;\n    }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /** Whether or not the overlay should be locked when scrolling. */\n    get lockPosition() {\n        return this._lockPosition;\n    }\n    set lockPosition(value) {\n        this._lockPosition = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    get flexibleDimensions() {\n        return this._flexibleDimensions;\n    }\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n    get growAfterOpen() {\n        return this._growAfterOpen;\n    }\n    set growAfterOpen(value) {\n        this._growAfterOpen = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    get push() {\n        return this._push;\n    }\n    set push(value) {\n        this._push = coerceBooleanProperty(value);\n    }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = (this._overlayRef = this._overlay.create(this._buildConfig()));\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            this.overlayOutsideClick.next(event);\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = (this._position =\n            this.positionStrategy || this._createPositionStrategy());\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop,\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this._getFlexibleConnectedPositionStrategyOrigin())\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._getFlexibleConnectedPositionStrategyOrigin());\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    _getFlexibleConnectedPositionStrategyOrigin() {\n        if (this.origin instanceof CdkOverlayOrigin) {\n            return this.origin.elementRef;\n        }\n        else {\n            return this.origin;\n        }\n    }\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this.positionChange.emit(position);\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n    }\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n        }\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkConnectedOverlay, deps: [{ token: Overlay }, { token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY }, { token: i5.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkConnectedOverlay.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: { origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], disableClose: [\"cdkConnectedOverlayDisableClose\", \"disableClose\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkConnectedOverlay, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                    exportAs: 'cdkConnectedOverlay',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: Overlay }, { type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n                    }] }, { type: i5.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { origin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOrigin']\n            }], positions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositions']\n            }], positionStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositionStrategy']\n            }], offsetX: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetX']\n            }], offsetY: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetY']\n            }], width: [{\n                type: Input,\n                args: ['cdkConnectedOverlayWidth']\n            }], height: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHeight']\n            }], minWidth: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinWidth']\n            }], minHeight: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinHeight']\n            }], backdropClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayBackdropClass']\n            }], panelClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPanelClass']\n            }], viewportMargin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayViewportMargin']\n            }], scrollStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayScrollStrategy']\n            }], open: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOpen']\n            }], disableClose: [{\n                type: Input,\n                args: ['cdkConnectedOverlayDisableClose']\n            }], transformOriginSelector: [{\n                type: Input,\n                args: ['cdkConnectedOverlayTransformOriginOn']\n            }], hasBackdrop: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHasBackdrop']\n            }], lockPosition: [{\n                type: Input,\n                args: ['cdkConnectedOverlayLockPosition']\n            }], flexibleDimensions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayFlexibleDimensions']\n            }], growAfterOpen: [{\n                type: Input,\n                args: ['cdkConnectedOverlayGrowAfterOpen']\n            }], push: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPush']\n            }], backdropClick: [{\n                type: Output\n            }], positionChange: [{\n                type: Output\n            }], attach: [{\n                type: Output\n            }], detach: [{\n                type: Output\n            }], overlayKeydown: [{\n                type: Output\n            }], overlayOutsideClick: [{\n                type: Output\n            }] } });\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass OverlayModule {\n}\nOverlayModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nOverlayModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayModule, declarations: [CdkConnectedOverlay, CdkOverlayOrigin], imports: [BidiModule, PortalModule, ScrollingModule], exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule] });\nOverlayModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayModule, providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER], imports: [BidiModule, PortalModule, ScrollingModule, ScrollingModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: OverlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, PortalModule, ScrollingModule],\n                    exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                    declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                    providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    constructor(_document, platform) {\n        super(_document, platform);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n    }\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        const fullscreenElement = this.getFullscreenElement();\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    _addFullscreenChangeListener(fn) {\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return (_document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null);\n    }\n}\nFullscreenOverlayContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: FullscreenOverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nFullscreenOverlayContainer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: FullscreenOverlayContainer, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: FullscreenOverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1$1.Platform }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, STANDARD_DROPDOWN_ADJACENT_POSITIONS, STANDARD_DROPDOWN_BELOW_POSITIONS, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition };\n","import * as i0 from '@angular/core';\nimport { ElementRef, Injector, Directive, EventEmitter, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nclass Portal {\n    /** Attach this portal to a host. */\n    attach(host) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (host == null) {\n                throwNullPortalOutletError();\n            }\n            if (host.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n        }\n        this._attachedHost = host;\n        return host.attach(this);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        let host = this._attachedHost;\n        if (host != null) {\n            this._attachedHost = null;\n            host.detach();\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwNoPortalAttachedError();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal extends Portal {\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nclass TemplatePortal extends Portal {\n    constructor(\n    /** The embedded template that will be used to instantiate an embedded View in the host. */\n    templateRef, \n    /** Reference to the ViewContainer into which the template will be stamped out. */\n    viewContainerRef, \n    /** Contextual data to be passed in to the embedded view. */\n    context, \n    /** The injector to use for the embedded view. */\n    injector) {\n        super();\n        this.templateRef = templateRef;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n        this.injector = injector;\n    }\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nclass DomPortal extends Portal {\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nclass BasePortalOutlet {\n    constructor() {\n        /** Whether this host has already been permanently disposed. */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /** Whether this host has an attached portal. */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /** Attaches a portal. */\n    attach(portal) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!portal) {\n                throwNullPortalError();\n            }\n            if (this.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n            if (this._isDisposed) {\n                throwPortalOutletAlreadyDisposedError();\n            }\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwUnknownPortalTypeError();\n        }\n    }\n    /** Detaches a previously attached portal. */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /** Permanently dispose of this portal host. */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /** @docs-private */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param outletElement Element into which the content is projected.\n     * @param _componentFactoryResolver Used to resolve the component factory.\n     *   Only required when attaching component portals.\n     * @param _appRef Reference to the application. Only used in component portals when there\n     *   is no `ViewContainerRef` available.\n     * @param _defaultInjector Injector to use as a fallback when the portal being attached doesn't\n     *   have one. Only used for component portals.\n     * @param _document Reference to the document. Used when attaching a DOM portal. Will eventually\n     *   become a required parameter.\n     */\n    constructor(\n    /** Element into which the content is projected. */\n    outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        const resolver = (portal.componentFactoryResolver || this._componentFactoryResolver);\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && !resolver) {\n            throw Error('Cannot attach component portal to outlet without a ComponentFactoryResolver.');\n        }\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn(() => componentRef.destroy());\n        }\n        else {\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._appRef) {\n                throw Error('Cannot attach component portal to outlet without an ApplicationRef.');\n            }\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector || Injector.NULL);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(() => {\n                // Verify that the ApplicationRef has registered views before trying to detach a host view.\n                // This check also protects the `detachView` from being called on a destroyed ApplicationRef.\n                if (this._appRef.viewCount > 0) {\n                    this._appRef.detachView(componentRef.hostView);\n                }\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        this._attachedPortal = portal;\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        let viewContainer = portal.viewContainerRef;\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context, {\n            injector: portal.injector,\n        });\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n        // Note that we want to detect changes after the nodes have been moved so that\n        // any directives inside the portal that are looking at the DOM inside a lifecycle\n        // hook won't be invoked too early.\n        viewRef.detectChanges();\n        this.setDisposeFn(() => {\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        });\n        this._attachedPortal = portal;\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     */\n    dispose() {\n        super.dispose();\n        this.outletElement.remove();\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkPortal, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkPortal.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkPortal, selector: \"[cdkPortal]\", exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortal]',\n                    exportAs: 'cdkPortal',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; } });\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: TemplatePortalDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTemplatePortalDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: TemplatePortalDirective, selector: \"[cdk-portal], [portal]\", providers: [\n        {\n            provide: CdkPortal,\n            useExisting: TemplatePortalDirective,\n        },\n    ], exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: TemplatePortalDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-portal], [portal]',\n                    exportAs: 'cdkPortal',\n                    providers: [\n                        {\n                            provide: CdkPortal,\n                            useExisting: TemplatePortalDirective,\n                        },\n                    ],\n                }]\n        }] });\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /** Whether the portal component is initialized. */\n        this._isInitialized = false;\n        /** Emits when a portal is attached to the outlet. */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /** Portal associated with the Portal outlet. */\n    get portal() {\n        return this._attachedPortal;\n    }\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal || null;\n    }\n    /** Component or view reference that is attached to the portal. */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        const viewContainerRef = portal.viewContainerRef != null ? portal.viewContainerRef : this._viewContainerRef;\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(ref.hostView.rootNodes[0]);\n        }\n        super.setDisposeFn(() => ref.destroy());\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context, {\n            injector: portal.injector,\n        });\n        super.setDisposeFn(() => this._viewContainerRef.clear());\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /** Gets the root node of the portal outlet. */\n    _getRootNode() {\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (nativeElement.nodeType === nativeElement.ELEMENT_NODE\n            ? nativeElement\n            : nativeElement.parentNode);\n    }\n}\nCdkPortalOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkPortalOutlet, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nCdkPortalOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkPortalOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalOutlet]',\n                    exportAs: 'cdkPortalOutlet',\n                    inputs: ['portal: cdkPortalOutlet'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { attached: [{\n                type: Output\n            }] } });\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: PortalHostDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nPortalHostDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: PortalHostDirective, selector: \"[cdkPortalHost], [portalHost]\", inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, providers: [\n        {\n            provide: CdkPortalOutlet,\n            useExisting: PortalHostDirective,\n        },\n    ], exportAs: [\"cdkPortalHost\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: PortalHostDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalHost], [portalHost]',\n                    exportAs: 'cdkPortalHost',\n                    inputs: ['portal: cdkPortalHost'],\n                    providers: [\n                        {\n                            provide: CdkPortalOutlet,\n                            useExisting: PortalHostDirective,\n                        },\n                    ],\n                }]\n        }] });\nclass PortalModule {\n}\nPortalModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: PortalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPortalModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: PortalModule, declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective], exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective] });\nPortalModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: PortalModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: PortalModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                    declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * @docs-private\n * @deprecated Use `Injector.create` instead.\n * @breaking-change 11.0.0\n */\nclass PortalInjector {\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    get(token, notFoundValue) {\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n","import { coerceNumberProperty, coerceElement, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, Injectable, Optional, Inject, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ViewChild, SkipSelf, ElementRef, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/platform';\nimport { getRtlScrollAxisType, supportsScrollBehavior, Platform } from '@angular/cdk/platform';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/cdk/collections';\nimport { isDataSource, ArrayDataSource, _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the virtual scrolling strategy. */\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /** The attached viewport. */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() {\n        /* no-op */\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() {\n        /* no-op */\n    }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        // Prevent NaN as result when dividing by zero.\n        let firstVisibleIndex = this._itemSize > 0 ? scrollOffset / this._itemSize : 0;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /** The scroll strategy used by this directive. */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /** The size of the items in the list (in pixels). */\n    get itemSize() {\n        return this._itemSize;\n    }\n    set itemSize(value) {\n        this._itemSize = coerceNumberProperty(value);\n    }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() {\n        return this._minBufferPx;\n    }\n    set minBufferPx(value) {\n        this._minBufferPx = coerceNumberProperty(value);\n    }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() {\n        return this._maxBufferPx;\n    }\n    set maxBufferPx(value) {\n        this._maxBufferPx = coerceNumberProperty(value);\n    }\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFixedSizeVirtualScroll, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkFixedSizeVirtualScroll.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkFixedSizeVirtualScroll, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, providers: [\n        {\n            provide: VIRTUAL_SCROLL_STRATEGY,\n            useFactory: _fixedSizeVirtualScrollStrategyFactory,\n            deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n        },\n    ], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkFixedSizeVirtualScroll, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                    providers: [\n                        {\n                            provide: VIRTUAL_SCROLL_STRATEGY,\n                            useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                            deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n                        },\n                    ],\n                }]\n        }], propDecorators: { itemSize: [{\n                type: Input\n            }], minBufferPx: [{\n                type: Input\n            }], maxBufferPx: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    constructor(_ngZone, _platform, document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n        this._scrolled = new Subject();\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\n        this._globalSubscription = null;\n        /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(() => this._scrolled.next(scrollable)));\n        }\n    }\n    /**\n     * De-registers a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0\n                ? this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer)\n                : this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            };\n        });\n    }\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n        const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(target => {\n            return !target || ancestors.indexOf(target) > -1;\n        }));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n        let element = coerceElement(elementOrElementRef);\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while ((element = element.parentElement));\n        return false;\n    }\n    /** Sets up the global scroll listeners. */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n        });\n    }\n    /** Cleans up the global scroll listener. */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollDispatcher, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nScrollDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: i1.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll')\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(observer)));\n    }\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* RtlScrollAxisType.NORMAL */) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* RtlScrollAxisType.INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* RtlScrollAxisType.NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* RtlScrollAxisType.INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* RtlScrollAxisType.NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkScrollable, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkScrollable.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkScrollable, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-scrollable], [cdkScrollable]',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    } });\n\nconst VIRTUAL_SCROLLABLE = new InjectionToken('VIRTUAL_SCROLLABLE');\n/**\n * Extending the {@link CdkScrollable} to be used as scrolling container for virtual scrolling.\n */\nclass CdkVirtualScrollable extends CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n    }\n    /**\n     * Measure the viewport size for the provided orientation.\n     *\n     * @param orientation The orientation to measure the size from.\n     */\n    measureViewportSize(orientation) {\n        const viewportEl = this.elementRef.nativeElement;\n        return orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n}\nCdkVirtualScrollable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualScrollable, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkVirtualScrollable.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkVirtualScrollable, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualScrollable, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    } });\n\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n    constructor(_platform, ngZone, document) {\n        this._platform = _platform;\n        /** Stream of viewport change events. */\n        this._change = new Subject();\n        /** Event listener that will be used to handle the viewport change events. */\n        this._changeListener = (event) => {\n            this._change.next(event);\n        };\n        this._document = document;\n        ngZone.runOutsideAngular(() => {\n            if (_platform.isBrowser) {\n                const window = this._getWindow();\n                // Note that bind the events ourselves, rather than going through something like RxJS's\n                // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\n                window.addEventListener('resize', this._changeListener);\n                window.addEventListener('orientationchange', this._changeListener);\n            }\n            // Clear the cached position so that the viewport is re-measured next time it is required.\n            // We don't need to keep track of the subscription, because it is completed on destroy.\n            this.change().subscribe(() => (this._viewportSize = null));\n        });\n    }\n    ngOnDestroy() {\n        if (this._platform.isBrowser) {\n            const window = this._getWindow();\n            window.removeEventListener('resize', this._changeListener);\n            window.removeEventListener('orientationchange', this._changeListener);\n        }\n        this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    }\n    /** Gets a ClientRect for the viewport's bounds. */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const document = this._document;\n        const window = this._getWindow();\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n        const top = -documentRect.top ||\n            document.body.scrollTop ||\n            window.scrollY ||\n            documentElement.scrollTop ||\n            0;\n        const left = -documentRect.left ||\n            document.body.scrollLeft ||\n            window.scrollX ||\n            documentElement.scrollLeft ||\n            0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * This stream emits outside of the Angular zone.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser\n            ? { width: window.innerWidth, height: window.innerHeight }\n            : { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ViewportRuler, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nViewportRuler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ViewportRuler, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ViewportRuler, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkVirtualScrollable {\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, viewportRuler, scrollable) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        this.scrollable = scrollable;\n        this._platform = inject(Platform);\n        /** Emits when the viewport is detached from a CdkVirtualForOf. */\n        this._detachedSubject = new Subject();\n        /** Emits when the rendered range changes. */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        this._appendOnly = false;\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /** Emits when the index of the first element visible in the viewport changes. */\n        this.scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n        /** A stream that emits whenever the rendered range changes. */\n        this.renderedRangeStream = this._renderedRangeSubject;\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /** A string representing the `style.width` property value to be used for the spacer element. */\n        this._totalContentWidth = '';\n        /** A string representing the `style.height` property value to be used for the spacer element. */\n        this._totalContentHeight = '';\n        /** The currently rendered range of indices. */\n        this._renderedRange = { start: 0, end: 0 };\n        /** The length of the data bound to this viewport (in number of items). */\n        this._dataLength = 0;\n        /** The size of the viewport (in pixels). */\n        this._viewportSize = 0;\n        /** The last rendered content offset that was set. */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /** Whether there is a pending change detection cycle. */\n        this._isChangeDetectionPending = false;\n        /** A list of functions to run after the next change detection cycle. */\n        this._runAfterChangeDetection = [];\n        /** Subscription to changes in the viewport size. */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        this._viewportChanges = viewportRuler.change().subscribe(() => {\n            this.checkViewportSize();\n        });\n        if (!this.scrollable) {\n            // No scrollable is provided, so the virtual-scroll-viewport needs to become a scrollable\n            this.elementRef.nativeElement.classList.add('cdk-virtual-scrollable');\n            this.scrollable = this;\n        }\n    }\n    /** The direction the viewport scrolls. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    /**\n     * Whether rendered items should persist in the DOM after scrolling out of view. By default, items\n     * will be removed.\n     */\n    get appendOnly() {\n        return this._appendOnly;\n    }\n    set appendOnly(value) {\n        this._appendOnly = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        // Scrolling depends on the element dimensions which we can't get during SSR.\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        if (this.scrollable === this) {\n            super.ngOnInit();\n        }\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.scrollable\n                .elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\n            this._markChangeDetectionNeeded();\n        }));\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n        if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(() => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            });\n        });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            if (this.appendOnly) {\n                range = { start: 0, end: Math.max(this._renderedRange.end, range.end) };\n            }\n            this._renderedRangeSubject.next((this._renderedRange = range));\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // In appendOnly, we always start from the top\n        offset = this.appendOnly && to === 'to-start' ? 0 : offset;\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        const isHorizontal = this.orientation == 'horizontal';\n        const axis = isHorizontal ? 'X' : 'Y';\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(() => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollable.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the scrollable (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n        // This is to break the call cycle\n        let measureScrollOffset;\n        if (this.scrollable == this) {\n            measureScrollOffset = (_from) => super.measureScrollOffset(_from);\n        }\n        else {\n            measureScrollOffset = (_from) => this.scrollable.measureScrollOffset(_from);\n        }\n        return Math.max(0, measureScrollOffset(from !== null && from !== void 0 ? from : (this.orientation === 'horizontal' ? 'start' : 'top')) -\n            this.measureViewportOffset());\n    }\n    /**\n     * Measures the offset of the viewport from the scrolling container\n     * @param from The edge to measure from.\n     */\n    measureViewportOffset(from) {\n        var _a;\n        let fromRect;\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const isRtl = ((_a = this.dir) === null || _a === void 0 ? void 0 : _a.value) == 'rtl';\n        if (from == 'start') {\n            fromRect = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            fromRect = isRtl ? LEFT : RIGHT;\n        }\n        else if (from) {\n            fromRect = from;\n        }\n        else {\n            fromRect = this.orientation === 'horizontal' ? 'left' : 'top';\n        }\n        const scrollerClientRect = this.scrollable.measureBoundingClientRectWithScrollOffset(fromRect);\n        const viewportClientRect = this.elementRef.nativeElement.getBoundingClientRect()[fromRect];\n        return viewportClientRect - scrollerClientRect;\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n        this._viewportSize = this.scrollable.measureViewportSize(this.orientation);\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n                this._doChangeDetection();\n            }));\n        }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run(() => this._changeDetectorRef.markForCheck());\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualScrollViewport, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: VIRTUAL_SCROLL_STRATEGY, optional: true }, { token: i2.Directionality, optional: true }, { token: ScrollDispatcher }, { token: ViewportRuler }, { token: VIRTUAL_SCROLLABLE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkVirtualScrollViewport.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkVirtualScrollViewport, selector: \"cdk-virtual-scroll-viewport\", inputs: { orientation: \"orientation\", appendOnly: \"appendOnly\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, host: { properties: { \"class.cdk-virtual-scroll-orientation-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.cdk-virtual-scroll-orientation-vertical\": \"orientation !== \\\"horizontal\\\"\" }, classAttribute: \"cdk-virtual-scroll-viewport\" }, providers: [\n        {\n            provide: CdkScrollable,\n            useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n            deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n        },\n    ], viewQueries: [{ propertyName: \"_contentWrapper\", first: true, predicate: [\"contentWrapper\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualScrollViewport, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-virtual-scroll-viewport', host: {\n                        'class': 'cdk-virtual-scroll-viewport',\n                        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        {\n                            provide: CdkScrollable,\n                            useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n                            deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n                        },\n                    ], template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [VIRTUAL_SCROLL_STRATEGY]\n                    }] }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: ScrollDispatcher }, { type: ViewportRuler }, { type: CdkVirtualScrollable, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [VIRTUAL_SCROLLABLE]\n                    }] }];\n    }, propDecorators: { orientation: [{\n                type: Input\n            }], appendOnly: [{\n                type: Input\n            }], scrolledIndexChange: [{\n                type: Output\n            }], _contentWrapper: [{\n                type: ViewChild,\n                args: ['contentWrapper', { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    if (orientation === 'horizontal') {\n        return direction === 'start' ? rect.left : rect.right;\n    }\n    return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n    constructor(\n    /** The view container to add items to. */\n    _viewContainerRef, \n    /** The template to use when stamping out new items. */\n    _template, \n    /** The set of available differs. */\n    _differs, \n    /** The strategy used to render items in the virtual scroll viewport. */\n    _viewRepeater, \n    /** The virtual scrolling viewport that these items are being rendered in. */\n    _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewRepeater = _viewRepeater;\n        this._viewport = _viewport;\n        /** Emits when the rendered view of the data changes. */\n        this.viewChange = new Subject();\n        /** Subject that emits when a new DataSource instance is given. */\n        this._dataSourceChanges = new Subject();\n        /** Emits whenever the data in the current DataSource changes. */\n        this.dataStream = this._dataSourceChanges.pipe(\n        // Start off with null `DataSource`.\n        startWith(null), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /** The differ used to calculate changes to the data. */\n        this._differ = null;\n        /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe(data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n            this._renderedRange = range;\n            if (this.viewChange.observers.length) {\n                ngZone.run(() => this.viewChange.next(this._renderedRange));\n            }\n            this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // If value is an an NgIterable, convert it to an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn\n            ? (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)\n            : undefined;\n    }\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n        return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n        this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        const rangeLen = range.end - range.start;\n        // Loop over all the views, find the first and land node and compute the size by subtracting\n        // the top of the first node from the bottom of the last one.\n        let firstNode;\n        let lastNode;\n        // Find the first node by starting from the beginning and going forwards.\n        for (let i = 0; i < rangeLen; i++) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                firstNode = lastNode = view.rootNodes[0];\n                break;\n            }\n        }\n        // Find the last node by starting from the end and going backwards.\n        for (let i = rangeLen - 1; i > -1; i--) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\n                break;\n            }\n        }\n        return firstNode && lastNode\n            ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode)\n            : 0;\n    }\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next(undefined);\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            // Use a wrapper function for the `trackBy` so any new values are\n            // picked up automatically without having to recreate the differ.\n            this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n                return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n            });\n        }\n        this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n        this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), record => record.item);\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((record) => {\n            const view = this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return {\n            templateRef: this._template,\n            context: {\n                $implicit: record.item,\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n                cdkVirtualForOf: this._cdkVirtualForOf,\n                index: -1,\n                count: -1,\n                first: false,\n                last: false,\n                odd: false,\n                even: false,\n            },\n            index,\n        };\n    }\n}\nCdkVirtualForOf.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualForOf, deps: [{ token: i0.ViewContainerRef }, { token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: _VIEW_REPEATER_STRATEGY }, { token: CdkVirtualScrollViewport, skipSelf: true }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nCdkVirtualForOf.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkVirtualForOf, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: { cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\", cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\" }, providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualForOf, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualFor][cdkVirtualForOf]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ViewContainerRef }, { type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: i2$1._RecycleViewRepeaterStrategy, decorators: [{\n                        type: Inject,\n                        args: [_VIEW_REPEATER_STRATEGY]\n                    }] }, { type: CdkVirtualScrollViewport, decorators: [{\n                        type: SkipSelf\n                    }] }, { type: i0.NgZone }];\n    }, propDecorators: { cdkVirtualForOf: [{\n                type: Input\n            }], cdkVirtualForTrackBy: [{\n                type: Input\n            }], cdkVirtualForTemplate: [{\n                type: Input\n            }], cdkVirtualForTemplateCacheSize: [{\n                type: Input\n            }] } });\n\n/**\n * Provides a virtual scrollable for the element it is attached to.\n */\nclass CdkVirtualScrollableElement extends CdkVirtualScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return (this.getElementRef().nativeElement.getBoundingClientRect()[from] -\n            this.measureScrollOffset(from));\n    }\n}\nCdkVirtualScrollableElement.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualScrollableElement, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkVirtualScrollableElement.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkVirtualScrollableElement, selector: \"[cdkVirtualScrollingElement]\", host: { classAttribute: \"cdk-virtual-scrollable\" }, providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualScrollableElement, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualScrollingElement]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }],\n                    host: {\n                        'class': 'cdk-virtual-scrollable',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    } });\n\n/**\n * Provides as virtual scrollable for the global / window scrollbar.\n */\nclass CdkVirtualScrollableWindow extends CdkVirtualScrollable {\n    constructor(scrollDispatcher, ngZone, dir) {\n        super(new ElementRef(document.documentElement), scrollDispatcher, ngZone, dir);\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(document, 'scroll').pipe(takeUntil(this._destroyed)).subscribe(observer)));\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n}\nCdkVirtualScrollableWindow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualScrollableWindow, deps: [{ token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkVirtualScrollableWindow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkVirtualScrollableWindow, selector: \"cdk-virtual-scroll-viewport[scrollWindow]\", providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkVirtualScrollableWindow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[scrollWindow]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkScrollableModule {\n}\nCdkScrollableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkScrollableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkScrollableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkScrollableModule, declarations: [CdkScrollable], exports: [CdkScrollable] });\nCdkScrollableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkScrollableModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkScrollableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkScrollable],\n                    declarations: [CdkScrollable],\n                }]\n        }] });\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n}\nScrollingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nScrollingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollingModule, declarations: [CdkFixedSizeVirtualScroll,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport,\n        CdkVirtualScrollableWindow,\n        CdkVirtualScrollableElement], imports: [BidiModule, CdkScrollableModule], exports: [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport,\n        CdkVirtualScrollableWindow,\n        CdkVirtualScrollableElement] });\nScrollingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollingModule, imports: [BidiModule, CdkScrollableModule, BidiModule, CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ScrollingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, CdkScrollableModule],\n                    exports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollViewport,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                    declarations: [\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollViewport,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollable, CdkVirtualScrollableElement, CdkVirtualScrollableWindow, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLLABLE, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n","import { CdkDialogContainer, Dialog, DialogConfig, DialogModule } from '@angular/cdk/dialog';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i4 from '@angular/cdk/portal';\nimport { PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Optional, Inject, ViewEncapsulation, ChangeDetectionStrategy, InjectionToken, Injectable, SkipSelf, Directive, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Subject, merge, defer } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/a11y';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Default parameters for the animation for backwards compatibility.\n * @docs-private\n */\nconst defaultParams = {\n    params: { enterAnimationDuration: '150ms', exitAnimationDuration: '75ms' },\n};\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n    /** Animation that is applied on the dialog container by default. */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', group([\n            animate('{{enterAnimationDuration}} cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 })),\n            query('@*', animateChild(), { optional: true }),\n        ]), defaultParams),\n        transition('* => void, * => exit', group([\n            animate('{{exitAnimationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 })),\n            query('@*', animateChild(), { optional: true }),\n        ]), defaultParams),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nclass MatDialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Custom class for the overlay pane. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Custom class for the backdrop. */\n        this.backdropClass = '';\n        /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n        this.maxWidth = '80vw';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Aria label to assign to the dialog element. */\n        this.ariaLabel = null;\n        /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n        this.ariaModal = true;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /** Whether to wait for the opening animation to finish before trapping focus. */\n        this.delayFocusTrap = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        /** Duration of the enter animation. Has to be a valid CSS value (e.g. 100ms). */\n        this.enterAnimationDuration = defaultParams.params.enterAnimationDuration;\n        /** Duration of the exit animation. Has to be a valid CSS value (e.g. 50ms). */\n        this.exitAnimationDuration = defaultParams.params.exitAnimationDuration;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\n\n/**\n * Base class for the `MatDialogContainer`. The base class does not implement\n * animations as these are left to implementers of the dialog container.\n */\n// tslint:disable-next-line:validate-decorators\nclass _MatDialogContainerBase extends CdkDialogContainer {\n    constructor(elementRef, focusTrapFactory, _document, dialogConfig, interactivityChecker, ngZone, overlayRef, focusMonitor) {\n        super(elementRef, focusTrapFactory, _document, dialogConfig, interactivityChecker, ngZone, overlayRef, focusMonitor);\n        /** Emits when an animation state changes. */\n        this._animationStateChanged = new EventEmitter();\n    }\n    _captureInitialFocus() {\n        if (!this._config.delayFocusTrap) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Callback for when the open dialog animation has finished. Intended to\n     * be called by sub-classes that use different animation implementations.\n     */\n    _openAnimationDone(totalTime) {\n        if (this._config.delayFocusTrap) {\n            this._trapFocus();\n        }\n        this._animationStateChanged.next({ state: 'opened', totalTime });\n    }\n}\n_MatDialogContainerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatDialogContainerBase, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: DOCUMENT, optional: true }, { token: MatDialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1$1.OverlayRef }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });\n_MatDialogContainerBase.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: _MatDialogContainerBase, selector: \"ng-component\", usesInheritance: true, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatDialogContainerBase, decorators: [{\n            type: Component,\n            args: [{ template: '' }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: MatDialogConfig }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1$1.OverlayRef }, { type: i1.FocusMonitor }];\n    } });\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * @docs-private\n */\nclass MatDialogContainer extends _MatDialogContainerBase {\n    constructor(elementRef, focusTrapFactory, document, dialogConfig, checker, ngZone, overlayRef, _changeDetectorRef, focusMonitor) {\n        super(elementRef, focusTrapFactory, document, dialogConfig, checker, ngZone, overlayRef, focusMonitor);\n        this._changeDetectorRef = _changeDetectorRef;\n        /** State of the dialog animation. */\n        this._state = 'enter';\n    }\n    /** Callback, invoked whenever an animation on the host completes. */\n    _onAnimationDone({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._openAnimationDone(totalTime);\n        }\n        else if (toState === 'exit') {\n            this._animationStateChanged.next({ state: 'closed', totalTime });\n        }\n    }\n    /** Callback, invoked when an animation on the host starts. */\n    _onAnimationStart({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._animationStateChanged.next({ state: 'opening', totalTime });\n        }\n        else if (toState === 'exit' || toState === 'void') {\n            this._animationStateChanged.next({ state: 'closing', totalTime });\n        }\n    }\n    /** Starts the dialog exit animation. */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    _getAnimationState() {\n        return {\n            value: this._state,\n            params: {\n                'enterAnimationDuration': this._config.enterAnimationDuration || defaultParams.params.enterAnimationDuration,\n                'exitAnimationDuration': this._config.exitAnimationDuration || defaultParams.params.exitAnimationDuration,\n            },\n        };\n    }\n}\nMatDialogContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDialogContainer, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: DOCUMENT, optional: true }, { token: MatDialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1$1.OverlayRef }, { token: i0.ChangeDetectorRef }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });\nMatDialogContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatDialogContainer, selector: \"mat-dialog-container\", host: { attributes: { \"tabindex\": \"-1\" }, listeners: { \"@dialogContainer.start\": \"_onAnimationStart($event)\", \"@dialogContainer.done\": \"_onAnimationDone($event)\" }, properties: { \"attr.aria-modal\": \"_config.ariaModal\", \"id\": \"_config.id\", \"attr.role\": \"_config.role\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledBy\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\", \"@dialogContainer\": \"_getAnimationState()\" }, classAttribute: \"mat-dialog-container\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet></ng-template>\\n\", styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions.mat-dialog-actions-align-center,.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions.mat-dialog-actions-align-end,.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\"], dependencies: [{ kind: \"directive\", type: i4.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matDialogAnimations.dialogContainer], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, animations: [matDialogAnimations.dialogContainer], host: {\n                        'class': 'mat-dialog-container',\n                        'tabindex': '-1',\n                        '[attr.aria-modal]': '_config.ariaModal',\n                        '[id]': '_config.id',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                        '[@dialogContainer]': `_getAnimationState()`,\n                        '(@dialogContainer.start)': '_onAnimationStart($event)',\n                        '(@dialogContainer.done)': '_onAnimationDone($event)',\n                    }, template: \"<ng-template cdkPortalOutlet></ng-template>\\n\", styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions.mat-dialog-actions-align-center,.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions.mat-dialog-actions-align-end,.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: MatDialogConfig }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1$1.OverlayRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusMonitor }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n    constructor(_ref, config, _containerInstance) {\n        this._ref = _ref;\n        this._containerInstance = _containerInstance;\n        /** Subject for notifying the user that the dialog has finished opening. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the dialog has started closing. */\n        this._beforeClosed = new Subject();\n        /** Current state of the dialog. */\n        this._state = 0 /* MatDialogState.OPEN */;\n        this.disableClose = config.disableClose;\n        this.id = _ref.id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'opened'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closed'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        });\n        _ref.overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._finishDialogClose();\n        });\n        merge(this.backdropClick(), this.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)))).subscribe(event => {\n            if (!this.disableClose) {\n                event.preventDefault();\n                _closeDialogVia(this, event.type === 'keydown' ? 'keyboard' : 'mouse');\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closing'), take(1))\n            .subscribe(event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._ref.overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n        });\n        this._state = 1 /* MatDialogState.CLOSING */;\n        this._containerInstance._startExitAnimation();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed() {\n        return this._ref.closed;\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed() {\n        return this._beforeClosed;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._ref.backdropClick;\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._ref.keydownEvents;\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        let strategy = this._ref.config.positionStrategy;\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._ref.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this._ref.updateSize(width, height);\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this._ref.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this._ref.removePanelClass(classes);\n        return this;\n    }\n    /** Gets the current state of the dialog's lifecycle. */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     */\n    _finishDialogClose() {\n        this._state = 2 /* MatDialogState.CLOSED */;\n        this._ref.close(this._result, { focusOrigin: this._closeInteractionType });\n        this.componentInstance = null;\n    }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n    ref._closeInteractionType = interactionType;\n    return ref.close(result);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Base class for dialog services. The base dialog service allows\n * for arbitrary dialog refs and dialog container components.\n */\nclass _MatDialogBase {\n    constructor(_overlay, injector, _defaultOptions, _parentDialog, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 15.0.0\n     */\n    _overlayContainer, scrollStrategy, _dialogRefConstructor, _dialogContainerType, _dialogDataToken, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _animationMode) {\n        this._overlay = _overlay;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._dialogRefConstructor = _dialogRefConstructor;\n        this._dialogContainerType = _dialogContainerType;\n        this._dialogDataToken = _dialogDataToken;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._idPrefix = 'mat-dialog-';\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n        this._dialog = injector.get(Dialog);\n    }\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    open(componentOrTemplateRef, config) {\n        let dialogRef;\n        config = Object.assign(Object.assign({}, (this._defaultOptions || new MatDialogConfig())), config);\n        config.id = config.id || `${this._idPrefix}${uniqueId++}`;\n        config.scrollStrategy = config.scrollStrategy || this._scrollStrategy();\n        const cdkRef = this._dialog.open(componentOrTemplateRef, Object.assign(Object.assign({}, config), { positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(), \n            // Disable closing since we need to sync it up to the animation ourselves.\n            disableClose: true, \n            // Disable closing on destroy, because this service cleans up its open dialogs as well.\n            // We want to do the cleanup here, rather than the CDK service, because the CDK destroys\n            // the dialogs immediately whereas we want it to wait for the animations to finish.\n            closeOnDestroy: false, container: {\n                type: this._dialogContainerType,\n                providers: () => [\n                    // Provide our config as the CDK config as well since it has the same interface as the\n                    // CDK one, but it contains the actual values passed in by the user for things like\n                    // `disableClose` which we disable for the CDK dialog since we handle it ourselves.\n                    { provide: MatDialogConfig, useValue: config },\n                    { provide: DialogConfig, useValue: config },\n                ],\n            }, templateContext: () => ({ dialogRef }), providers: (ref, cdkConfig, dialogContainer) => {\n                dialogRef = new this._dialogRefConstructor(ref, config, dialogContainer);\n                dialogRef.updatePosition(config === null || config === void 0 ? void 0 : config.position);\n                return [\n                    { provide: this._dialogContainerType, useValue: dialogContainer },\n                    { provide: this._dialogDataToken, useValue: cdkConfig.data },\n                    { provide: this._dialogRefConstructor, useValue: dialogRef },\n                ];\n            } }));\n        // This can't be assigned in the `providers` callback, because\n        // the instance hasn't been assigned to the CDK ref yet.\n        dialogRef.componentInstance = cdkRef.componentInstance;\n        this.openDialogs.push(dialogRef);\n        this.afterOpened.next(dialogRef);\n        dialogRef.afterClosed().subscribe(() => {\n            const index = this.openDialogs.indexOf(dialogRef);\n            if (index > -1) {\n                this.openDialogs.splice(index, 1);\n                if (!this.openDialogs.length) {\n                    this._getAfterAllClosed().next();\n                }\n            }\n        });\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    _closeDialogs(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            dialogs[i].close();\n        }\n    }\n}\n_MatDialogBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatDialogBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Injectable });\n_MatDialogBase.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatDialogBase });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: _MatDialogBase, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: undefined }, { type: undefined }, { type: i1$1.OverlayContainer }, { type: undefined }, { type: i0.Type }, { type: i0.Type }, { type: i0.InjectionToken }, { type: undefined }]; } });\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog extends _MatDialogBase {\n    constructor(overlay, injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    _location, defaultOptions, scrollStrategy, parentDialog, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 15.0.0\n     */\n    overlayContainer, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    animationMode) {\n        super(overlay, injector, defaultOptions, parentDialog, overlayContainer, scrollStrategy, MatDialogRef, MatDialogContainer, MAT_DIALOG_DATA, animationMode);\n    }\n}\nMatDialog.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: i2.Location, optional: true }, { token: MAT_DIALOG_DEFAULT_OPTIONS, optional: true }, { token: MAT_DIALOG_SCROLL_STRATEGY }, { token: MatDialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nMatDialog.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDialog });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDialog, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: i2.Location, decorators: [{\n                        type: Optional\n                    }] }, { type: MatDialogConfig, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DIALOG_DEFAULT_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DIALOG_SCROLL_STRATEGY]\n                    }] }, { type: MatDialog, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    constructor(\n    /**\n     * Reference to the containing dialog.\n     * @deprecated `dialogRef` property to become private.\n     * @breaking-change 13.0.0\n     */\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Default to \"button\" to prevents accidental form submits. */\n        this.type = 'button';\n    }\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n    }\n    ngOnChanges(changes) {\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n    _onButtonClick(event) {\n        // Determinate the focus origin using the click event, because using the FocusMonitor will\n        // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n        // dialog, and therefore clicking the button won't result in a focus change. This means that\n        // the FocusMonitor won't detect any origin change, and will always output `program`.\n        _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n}\nMatDialogClose.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDialogClose, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogClose.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatDialogClose, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, host: { listeners: { \"click\": \"_onButtonClick($event)\" }, properties: { \"attr.aria-label\": \"ariaLabel || null\", \"attr.type\": \"type\" } }, exportAs: [\"matDialogClose\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDialogClose, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-close], [matDialogClose]',\n                    exportAs: 'matDialogClose',\n                    host: {\n                        '(click)': '_onButtonClick($event)',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.type]': 'type',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: MatDialogRef, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ElementRef }, { type: MatDialog }];\n    }, propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], type: [{\n                type: Input\n            }], dialogResult: [{\n                type: Input,\n                args: ['mat-dialog-close']\n            }], _matDialogClose: [{\n                type: Input,\n                args: ['matDialogClose']\n            }] } });\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    _dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Unique id for the dialog title. If none is supplied, it will be auto-generated. */\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then(() => {\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            });\n        }\n    }\n}\nMatDialogTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDialogTitle, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogTitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatDialogTitle, selector: \"[mat-dialog-title], [matDialogTitle]\", inputs: { id: \"id\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"mat-dialog-title\" }, exportAs: [\"matDialogTitle\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDialogTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-title], [matDialogTitle]',\n                    exportAs: 'matDialogTitle',\n                    host: {\n                        'class': 'mat-dialog-title',\n                        '[id]': 'id',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: MatDialogRef, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ElementRef }, { type: MatDialog }];\n    }, propDecorators: { id: [{\n                type: Input\n            }] } });\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDialogContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatDialogContent, selector: \"[mat-dialog-content], mat-dialog-content, [matDialogContent]\", host: { classAttribute: \"mat-dialog-content\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDialogContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                    host: { 'class': 'mat-dialog-content' },\n                }]\n        }] });\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n    constructor() {\n        /**\n         * Horizontal alignment of action buttons.\n         */\n        this.align = 'start';\n    }\n}\nMatDialogActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDialogActions, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogActions.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatDialogActions, selector: \"[mat-dialog-actions], mat-dialog-actions, [matDialogActions]\", inputs: { align: \"align\" }, host: { properties: { \"class.mat-dialog-actions-align-center\": \"align === \\\"center\\\"\", \"class.mat-dialog-actions-align-end\": \"align === \\\"end\\\"\" }, classAttribute: \"mat-dialog-actions\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDialogActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                    host: {\n                        'class': 'mat-dialog-actions',\n                        '[class.mat-dialog-actions-align-center]': 'align === \"center\"',\n                        '[class.mat-dialog-actions-align-end]': 'align === \"end\"',\n                    },\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }] } });\n// TODO(crisbeto): this utility shouldn't be necessary anymore, because the dialog ref is provided\n// both to component and template dialogs through DI. We need to keep it around, because there are\n// some internal wrappers around `MatDialog` that happened to work by accident, because we had this\n// fallback logic in place.\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDialogModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDialogModule, declarations: [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogActions,\n        MatDialogContent], imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule], exports: [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogContent,\n        MatDialogActions,\n        MatCommonModule] });\nMatDialogModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDialogModule, providers: [MatDialog, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER], imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatDialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule],\n                    exports: [\n                        MatDialogContainer,\n                        MatDialogClose,\n                        MatDialogTitle,\n                        MatDialogContent,\n                        MatDialogActions,\n                        MatCommonModule,\n                    ],\n                    declarations: [\n                        MatDialogContainer,\n                        MatDialogClose,\n                        MatDialogTitle,\n                        MatDialogActions,\n                        MatDialogContent,\n                    ],\n                    providers: [MatDialog, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, _MatDialogBase, _MatDialogContainerBase, _closeDialogVia, matDialogAnimations };\n"],"names":["animate","style","transition","trigger","Validators","filter","first","map","switchMap","B2bNgxInputThemeEnum","B2bNgxButtonThemeEnum","UntilDestroy","untilDestroyed","BrowserStorageKeysEnum","AuthRegisterIndividualAccountFirstStepComponent","constructor","router","route","fb","authService","group","email","required","password","minLength","form","status$","pipe","data","ngOnInit","detectParsingCompanyEmail","detectUrlParamsEmail","secondStep","saveUserData","navigate","relativeTo","queryParams","subscribe","patchValue","get","valueChanges","valid","getPreregisteredCompanyInformation","company","undefined","companyName","parsingCompanyName","firstStepData","value","localStorage","setItem","FIRST_STEP_DATA","JSON","stringify","i0","selectors","decls","vars","consts","template","ctx","opacity","ChangeDetectorRef","B2bNgxSelectThemeEnum","catchError","tap","throwError","fullName","onlyLatin","B2bNgxLinkThemeEnum","onlyLatinAndNumberAndSymbols","ctx_r3","AuthRegisterIndividualAccountSecondStepComponent","translateService","dialog","b2bNgxLinkService","activatedRoute","hotToastrService","changeDetectorRef","getFormGroup","getRoles","firstStepDataObj","parse","getItem","_a","_b","_c","setValue","roles","role","roleName","instant","name","toUpperCase","description","displayName","charAt","slice","availableRoles","registerWithForm","formGroup","invalid","body","preferences","categories","refId","passwordConfirm","er","show","dismissible","border","autoClose","val","updateToken","token","initUser","navigateByUrl","err","code","error","detectChanges","phone","termsAndConditions","roleId","country","NavigationStart","BehaviorSubject","environment","AuthRegisterIndividualAccountComponent","b2bNgxLinkThemeEnum","b2bNgxButtonThemeEnum","isSocialAuthButtonsVisible$","isSocialAuthButtonsVisibleSource","asObservable","next","url","includes","initSocialAuthButtons","showBadge","currentLang","registerWithGoogle","document","location","href","apiUrl","registerWithLinkedIn","events","event","processSignInClick","changeDetection","require","nameMap","codeMap","forEach","mapCodeAndName","toLowerCase","exports","overwrite","countries","length","foundIndex","findIndex","item","getCode","getName","getNames","getCodes","getCodeList","getNameList","getData","_getFocusedElementPierceShadowDom","i3","BasePortalOutlet","CdkPortalOutlet","ComponentPortal","TemplatePortal","PortalModule","DOCUMENT","Component","ViewEncapsulation","ChangeDetectionStrategy","Optional","Inject","ViewChild","InjectionToken","Injector","TemplateRef","InjectFlags","Injectable","SkipSelf","NgModule","i1","A11yModule","i1$1","Overlay","OverlayConfig","OverlayRef","OverlayModule","ESCAPE","hasModifierKey","Subject","defer","of","Directionality","startWith","DialogConfig","panelClass","hasBackdrop","backdropClass","disableClose","width","height","ariaDescribedBy","ariaLabelledBy","ariaLabel","ariaModal","autoFocus","restoreFocus","closeOnNavigation","closeOnDestroy","throwDialogContentAlreadyAttachedError","Error","CdkDialogContainer","_elementRef","_focusTrapFactory","_document","_config","_interactivityChecker","_ngZone","_overlayRef","_focusMonitor","_elementFocusedBeforeDialogWasOpened","_closeInteractionType","attachDomPortal","portal","_portalOutlet","hasAttached","ngDevMode","result","_contentAttached","_ariaLabelledBy","_initializeFocusTrap","_handleBackdropClicks","_captureInitialFocus","_trapFocus","ngOnDestroy","_restoreFocus","attachComponentPortal","attachTemplatePortal","_recaptureFocus","_containsFocus","_forceFocus","element","options","isFocusable","tabIndex","runOutsideAngular","callback","removeEventListener","removeAttribute","addEventListener","focus","_focusByCssSelector","selector","elementToFocus","nativeElement","querySelector","_focusTrap","focusInitialElementWhenReady","then","focusedSuccessfully","_focusDialogContainer","focusConfig","focusTargetElement","activeElement","contains","focusVia","destroy","create","backdropClick","ɵfac","ElementRef","FocusTrapFactory","InteractivityChecker","NgZone","FocusMonitor","ɵcmp","type","args","encapsulation","None","Default","host","styles","decorators","static","DialogRef","overlayRef","config","closed","keydownEvents","outsidePointerEvents","id","keyCode","preventDefault","close","focusOrigin","containerInstance","closedSubject","dispose","complete","componentInstance","updatePosition","updateSize","addPanelClass","classes","removePanelClass","DIALOG_SCROLL_STRATEGY","DIALOG_DATA","DEFAULT_DIALOG_CONFIG","DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","overlay","scrollStrategies","block","DIALOG_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","uniqueId","Dialog","_overlay","_injector","_defaultOptions","_parentDialog","_overlayContainer","scrollStrategy","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenedAtThisLevel","_ariaHiddenElements","Map","afterAllClosed","openDialogs","_getAfterAllClosed","_scrollStrategy","afterOpened","open","componentOrTemplateRef","defaults","Object","assign","getDialogById","overlayConfig","_getOverlayConfig","dialogRef","dialogContainer","_attachContainer","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","push","_removeOpenDialog","closeAll","reverseForEach","find","state","positionStrategy","position","global","centerHorizontally","centerVertically","direction","minWidth","minHeight","maxWidth","maxHeight","disposeOnNavigation","userInjector","injector","viewContainerRef","providers","useValue","containerType","container","containerPortal","parent","componentFactoryResolver","containerRef","attach","instance","_createInjector","context","$implicit","templateContext","contentRef","fallbackInjector","change","emitEvent","index","indexOf","splice","previousValue","setAttribute","clear","overlayContainer","getContainerElement","parentElement","siblings","children","i","sibling","nodeName","hasAttribute","set","getAttribute","OverlayContainer","ɵprov","items","DialogModule","ɵmod","ɵinj","imports","declarations","ScrollingModule","CdkScrollable","ScrollDispatcher","ViewportRuler","i6","ApplicationRef","ANIMATION_MODULE_TYPE","Directive","EventEmitter","Input","Output","coerceCssPixelValue","coerceArray","coerceBooleanProperty","supportsScrollBehavior","_isTestEnvironment","_getEventTarget","i5","BidiModule","DomPortalOutlet","Subscription","merge","take","takeUntil","takeWhile","scrollBehaviorSupported","BlockScrollStrategy","_viewportRuler","_previousHTMLStyles","top","left","_isEnabled","enable","_canBeEnabled","root","documentElement","_previousScrollPosition","getViewportScrollPosition","classList","add","disable","html","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","remove","window","scroll","viewport","getViewportSize","scrollHeight","scrollWidth","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategy","_scrollDispatcher","_scrollSubscription","_detach","run","detach","stream","scrolled","threshold","_initialScrollPosition","scrollPosition","Math","abs","unsubscribe","NoopScrollStrategy","isElementScrolledOutsideView","scrollContainers","some","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategy","throttle","scrollThrottle","overlayRect","overlayElement","getBoundingClientRect","parentRects","ScrollStrategyOptions","noop","reposition","providedIn","configKeys","keys","key","ConnectionPositionPair","origin","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","_host","_pane","_keyboardDispatcher","_location","_outsideClickDispatcher","_animationsDisabled","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","EMPTY","_backdropClickHandler","_backdropTransitionendHandler","_disposeBackdrop","target","_keydownEvents","_outsidePointerEvents","_positionStrategy","backdropElement","hostElement","_previousHostParent","appendChild","attachResult","_updateStackingOrder","_updateElementSize","_updateElementDirection","onStable","_togglePointerEvents","_attachBackdrop","_toggleClasses","onDestroy","Promise","resolve","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","attachments","detachments","getConfig","apply","updatePositionStrategy","strategy","sizeConfig","setDirection","dir","getDirection","updateScrollStrategy","enablePointer","pointerEvents","showingClass","createElement","insertBefore","requestAnimationFrame","nextSibling","parentNode","backdropToDetach","_backdropTimeout","setTimeout","cssClasses","isAdd","c","subscription","backdrop","clearTimeout","_platform","_containerElement","_createContainer","containerClass","isBrowser","oppositePlatformContainers","querySelectorAll","Platform","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","positions","_validatePositions","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","_containerRect","originRect","viewportRect","containerRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","withScrollableContainers","scrollables","withPositions","withViewportMargin","margin","withFlexibleDimensions","flexibleDimensions","withGrowAfterOpen","growAfterOpen","withPush","canPush","withLockedPosition","isLocked","_origin","withDefaultOffsetX","offset","withDefaultOffsetY","withTransformOriginOn","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","rawOverlayRect","getRoundedBoundingClientRect","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","verticalFit","horizontalFit","_pushOverlayOnScreen","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","observers","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","trim","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","scrollable","getElementRef","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentValue","currentOverflow","axis","pair","cssClass","Element","destination","source","hasOwnProperty","input","units","split","parseFloat","clientRect","floor","STANDARD_DROPDOWN_BELOW_POSITIONS","STANDARD_DROPDOWN_ADJACENT_POSITIONS","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_alignItems","_xPosition","_xOffset","_width","_height","end","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","xPosition","xOffset","marginLeft","marginRight","marginTop","marginBottom","OverlayPositionBuilder","flexibleConnectedTo","BaseOverlayDispatcher","_attachedOverlays","OverlayKeyboardDispatcher","_keydownListener","overlays","_isAttached","OverlayOutsideClickDispatcher","_cursorStyleIsSet","_pointerDownListener","_pointerDownEventTarget","_clickListener","_addEventListeners","IOS","_cursorOriginalValue","cursor","nextUniqueId","_componentFactoryResolver","_positionBuilder","_directionality","_animationsModuleType","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","_appRef","ComponentFactoryResolver","Location","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CdkOverlayOrigin","elementRef","ɵdir","exportAs","CdkConnectedOverlay","templateRef","scrollStrategyFactory","_dir","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","_attachSubscription","_detachSubscription","_positionSubscription","viewportMargin","positionChange","overlayKeydown","overlayOutsideClick","_templatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","lockPosition","ngOnChanges","changes","_attachOverlay","_detachOverlay","_createOverlay","_buildConfig","emit","_createPositionStrategy","currentPosition","_getFlexibleConnectedPositionStrategyOrigin","transformOriginSelector","ViewContainerRef","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","FullscreenOverlayContainer","platform","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","fn","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","Portal","_attachedHost","setAttachedHost","component","DomPortal","_attachedPortal","_invokeDisposeFn","setDisposeFn","_disposeFn","BasePortalHost","outletElement","_defaultInjector","anchorNode","createComment","replaceChild","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","NULL","attachView","hostView","viewCount","detachView","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","rootNodes","rootNode","DomPortalHost","CdkPortal","TemplatePortalDirective","useExisting","_viewContainerRef","_isInitialized","attached","_getRootNode","attachedRef","_attachedRef","ref","nodeType","ELEMENT_NODE","inputs","PortalHostDirective","PortalInjector","_parentInjector","_customTokens","notFoundValue","coerceNumberProperty","coerceElement","forwardRef","inject","Observable","fromEvent","animationFrameScheduler","asapScheduler","isObservable","distinctUntilChanged","auditTime","pairwise","shareReplay","getRtlScrollAxisType","i2","i2$1","isDataSource","ArrayDataSource","_VIEW_REPEATER_STRATEGY","_RecycleViewRepeaterStrategy","VIRTUAL_SCROLL_STRATEGY","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","_updateTotalContentSize","_updateRenderedRange","updateItemAndBufferSize","onContentScrolled","onDataLengthChanged","onContentRendered","onRenderedOffsetChanged","scrollToIndex","behavior","scrollToOffset","setTotalContentSize","getDataLength","renderedRange","getRenderedRange","newRange","viewportSize","dataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","maxVisibleItems","ceil","newVisibleIndex","startBuffer","expandStart","endBuffer","expandEnd","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","CdkFixedSizeVirtualScroll","DEFAULT_SCROLL_TIME","_scrolled","_globalSubscription","_scrolledCount","register","has","elementScrolled","deregister","scrollableReference","delete","auditTimeInMs","observer","_addGlobalListener","_removeGlobalListener","_","ancestorScrolled","elementOrElementRef","ancestors","getAncestorScrollContainers","scrollingContainers","_subscription","_scrollableContainsElement","_getWindow","defaultView","scrollableElement","scrollDispatcher","ngZone","_destroyed","_elementScrolled","scrollTo","el","_applyScrollToOptions","scrollTop","scrollLeft","from","LEFT","RIGHT","VIRTUAL_SCROLLABLE","CdkVirtualScrollable","measureViewportSize","orientation","viewportEl","DEFAULT_RESIZE_TIME","_change","_changeListener","_viewportSize","_updateViewportSize","output","getViewportRect","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","rangesEqual","r1","r2","SCROLL_SCHEDULER","CdkVirtualScrollViewport","_changeDetectorRef","viewportRuler","_detachedSubject","_renderedRangeSubject","_orientation","_appendOnly","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","_calculateSpacerSize","appendOnly","_measureViewportSize","_markChangeDetectionNeeded","forOf","_forOf","dataStream","newLength","_doChangeDetection","measureBoundingClientRectWithScrollOffset","size","range","getOffsetToRenderedContentStart","to","isHorizontal","axisDirection","Number","_renderedContentTransform","measureRenderedContentSize","_from","measureViewportOffset","fromRect","scrollerClientRect","viewportClientRect","contentEl","_contentWrapper","offsetWidth","offsetHeight","measureRangeSize","runAfter","markForCheck","runAfterChangeDetection","virtualScrollable","OnPush","getOffset","node","rect","CdkVirtualForOf","_template","_differs","_viewRepeater","viewChange","_dataSourceChanges","prev","cur","_changeDataSource","_differ","_needsUpdate","_data","_onRenderedDataChange","cdkVirtualForOf","_cdkVirtualForOf","Array","cdkVirtualForTrackBy","_cdkVirtualForTrackBy","cdkVirtualForTemplate","cdkVirtualForTemplateCacheSize","viewCacheSize","renderedStartIndex","rangeLen","firstNode","lastNode","view","ngDoCheck","diff","_renderedItems","_updateContext","_applyChanges","oldDs","newDs","disconnect","connect","count","_updateComputedContextProperties","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","forEachIdentityChange","last","even","odd","IterableDiffers","useClass","CdkVirtualScrollableElement","CdkVirtualScrollableWindow","CdkScrollableModule","i4","MatCommonModule","query","animateChild","defaultParams","params","enterAnimationDuration","exitAnimationDuration","matDialogAnimations","optional","MatDialogConfig","delayFocusTrap","_MatDialogContainerBase","focusTrapFactory","dialogConfig","interactivityChecker","focusMonitor","_animationStateChanged","_openAnimationDone","totalTime","MatDialogContainer","checker","_state","_onAnimationDone","toState","_onAnimationStart","_startExitAnimation","_getAnimationState","animations","MatDialogRef","_ref","_containerInstance","_afterOpened","_beforeClosed","_closeFallbackTimeout","_finishDialogClose","_result","_closeDialogVia","dialogResult","afterClosed","beforeClosed","getState","interactionType","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","_MatDialogBase","_dialogRefConstructor","_dialogContainerType","_dialogDataToken","_animationMode","_idPrefix","_dialog","cdkRef","cdkConfig","_closeDialogs","dialogs","Type","MatDialog","defaultOptions","parentDialog","animationMode","dialogElementUid","MatDialogClose","getClosestDialog","proxiedChange","_onButtonClick","screenX","screenY","_matDialogClose","MatDialogTitle","_dialogRef","MatDialogContent","MatDialogActions","align","MatDialogModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[20,21,22,23,24,25]}