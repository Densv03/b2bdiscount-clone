{"version":3,"file":"1534.js","mappings":"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","sources":["./src/app/client/pages/client-reset-password/client-reset-password-routing.module.ts","./src/app/client/pages/client-reset-password/client-reset-password.module.ts","./src/app/client/pages/client-reset-password/layout/client-reset-password.component.ts","./src/app/client/pages/client-reset-password/layout/client-reset-password.component.html"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { ClientResetPasswordComponent } from \"./layout/client-reset-password.component\";\n\nconst routes: Routes = [\n\t{\n\t\tpath: \"\",\n\t\tcomponent: ClientResetPasswordComponent,\n\t},\n];\n\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule],\n})\nexport class ClientResetPasswordRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ClientResetPasswordRoutingModule } from \"./client-reset-password-routing.module\";\nimport { B2bNgxButtonModule } from \"@b2b/ngx-button\";\nimport { B2bNgxImageModule } from \"@b2b/ngx-image\";\nimport { B2bNgxLinkModule } from \"@b2b/ngx-link\";\nimport { ClientResetPasswordComponent } from \"./layout/client-reset-password.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n// import { ErrorTailorModule } from \"@ngneat/error-tailor\";\nimport { B2bNgxInputModule } from \"@b2b/ngx-input\";\nimport {TranslateModule} from \"@ngx-translate/core\";\n\n@NgModule({\n\tdeclarations: [ClientResetPasswordComponent],\n\timports: [\n\t\tCommonModule,\n\t\tClientResetPasswordRoutingModule,\n\t\tB2bNgxImageModule,\n\t\tB2bNgxButtonModule,\n\t\tB2bNgxLinkModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tB2bNgxInputModule,\n\t\tTranslateModule,\n\t],\n})\nexport class ClientResetPasswordModule {}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from \"@angular/core\";\nimport { AbstractControl, ValidationErrors, ValidatorFn, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { B2bNgxButtonThemeEnum } from \"@b2b/ngx-button\";\nimport { B2bNgxInputThemeEnum } from \"@b2b/ngx-input\";\nimport { HotToastService } from \"@ngneat/hot-toast\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\nimport { B2bNgxLinkService } from \"@b2b/ngx-link\";\nimport { ApiService } from \"../../../../core/services/api/api.service\";\nimport { FormControl, FormBuilder } from \"@angular/forms\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\nexport function password(): ValidatorFn {\n\treturn (control: AbstractControl): ValidationErrors | null => {\n\t\tif (!control.value) {\n\t\t\treturn null;\n\t\t}\n\t\tif (control.value.length <= 8) {\n\t\t\treturn { password: true };\n\t\t}\n\n\t\treturn null;\n\t};\n}\n\n@UntilDestroy()\n@Component({\n\tselector: \"b2b-client-reset-password\",\n\ttemplateUrl: \"./client-reset-password.component.html\",\n\tstyleUrls: [\"./client-reset-password.component.scss\"],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClientResetPasswordComponent implements OnInit {\n\tpublic readonly b2bNgxInputThemeEnum = B2bNgxInputThemeEnum;\n\tpublic readonly b2bNgxButtonThemeEnum = B2bNgxButtonThemeEnum;\n\tpublic readonly formControl: FormControl = new FormControl(\"\", [Validators.required, password()]);\n\n\tpublic token = \"\";\n\n\tconstructor(\n\t\tprivate readonly _formBuilder: FormBuilder,\n\t\tprivate readonly _apiService: ApiService,\n\t\tprivate readonly _hotToastrService: HotToastService,\n\t\tprivate readonly _changeDetectorRef: ChangeDetectorRef,\n\t\tprivate readonly _activatedRoute: ActivatedRoute,\n\t\tprivate readonly _router: Router,\n\t\tprivate readonly translateService: TranslateService,\n\t\tpublic readonly b2bNgxLinkService: B2bNgxLinkService\n\t) {}\n\n\tpublic sendMessage(formControl: FormControl) {\n\t\tthis.formControl.markAsTouched();\n\n\t\tif (formControl.invalid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst data = {\n\t\t\tnewPassword: formControl.value,\n\t\t};\n\n\t\tthis._apiService\n\t\t\t.post(`auth/resetPassword/${this.token}`, data)\n\t\t\t.pipe(\n\t\t\t\tuntilDestroyed(this),\n\t\t\t\tthis._hotToastrService.observe({\n\t\t\t\t\tloading: this.translateService.instant(\"TOASTR.LOADING\"),\n\t\t\t\t\tsuccess: this.translateService.instant(\"TOASTR.SUCCESS\"),\n\t\t\t\t\terror: this.translateService.instant(\"AUTH.INVALID_EMAIL_ADDRESS\"),\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe(\n\t\t\t\t() => {\n\t\t\t\t\tthis._changeDetectorRef.detectChanges();\n\t\t\t\t\tthis._router.navigateByUrl(this.b2bNgxLinkService.getStaticLink(\"/auth/log-in\"));\n\t\t\t\t},\n\t\t\t\t(err) => {\n\t\t\t\t\tthis._changeDetectorRef.detectChanges();\n\t\t\t\t\tthis.formControl.setErrors({ [err.error.code]: true });\n\t\t\t\t}\n\t\t\t);\n\t}\n\n\tngOnInit() {\n\t\tthis._activatedRoute.paramMap.pipe(untilDestroyed(this)).subscribe((paramMap) => {\n\t\t\tthis.token = paramMap.get(\"id\");\n\t\t});\n\t}\n}\n","<div class=\"reset-password\">\n\t<form errorTailor (ngSubmit)=\"sendMessage(formControl)\">\n\t\t<h1>{{ \"RESET_PASSWORD.CREATE\" | translate}}</h1>\n\t\t<input\n\t\t\ttype=\"password\"\n\t\t\tb2bNgxInput\n\t\t\t[placeholder]=\"'PLACEHOLDERS.NEW_PASSWORD' | translate\"\n\t\t\t[formControl]=\"formControl\"\n\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\" />\n\t\t<p [@fadeInOut] class=\"auth-register-individual-account__main-input-error\" *ngIf=\"formControl.errors?.['password']\">\n\t\t\t{{ \"ERRORS.PASSWORD\" | translate}}\n\t\t</p>\n\t\t<button b2bNgxButton type=\"submit\" [theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLACK\">\n\t\t\t{{ \"RESET_PASSWORD.SAVE\" | translate}}\n\t\t</button>\n\t</form>\n</div>\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}