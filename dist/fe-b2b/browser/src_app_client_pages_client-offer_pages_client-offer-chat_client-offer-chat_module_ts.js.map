{"version":3,"file":"src_app_client_pages_client-offer_pages_client-offer-chat_client-offer-chat_module_ts.js","mappings":"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","sources":["./src/app/client/pages/client-offer/pages/client-offer-chat/client-offer-chat-routing.module.ts","./src/app/client/pages/client-offer/pages/client-offer-chat/client-offer-chat.module.ts","./src/app/client/pages/client-offer/pages/client-offer-chat/layout/client-offer-chat.component.ts","./src/app/client/pages/client-offer/pages/client-offer-chat/layout/client-offer-chat.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ClientOfferChatComponent } from './layout/client-offer-chat.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClientOfferChatComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ClientOfferChatRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { B2bNgxTextareaModule } from '@b2b/ngx-textarea';\nimport { B2bNgxButtonModule } from '@b2b/ngx-button';\nimport { B2bNgxImageModule } from '@b2b/ngx-image';\nimport { B2bNgxIconModule } from '@b2b/ngx-icon';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ClientOfferChatComponent } from './layout/client-offer-chat.component';\nimport { ClientOfferChatRoutingModule } from './client-offer-chat-routing.module';\nimport {TranslateModule} from \"@ngx-translate/core\";\n\n@NgModule({\n  declarations: [ClientOfferChatComponent],\n\timports: [\n\t\tCommonModule,\n\t\tClientOfferChatRoutingModule,\n\t\tReactiveFormsModule,\n\t\tB2bNgxTextareaModule,\n\t\tB2bNgxButtonModule,\n\t\tB2bNgxImageModule,\n\t\tB2bNgxIconModule,\n\t\tTranslateModule,\n\t],\n})\nexport class ClientOfferChatModule {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { B2bNgxLinkService } from '@b2b/ngx-link';\nimport { HotToastService } from '@ngneat/hot-toast';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { B2bNgxButtonThemeEnum } from '@b2b/ngx-button';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { io } from 'socket.io-client';\nimport { environment } from '../../../../../../../environments/environment';\nimport { AuthService } from '../../../../../../auth/services/auth/auth.service';\nimport { ChatsService } from '../../../../../services/chats/chats.service';\nimport { SocketService } from '../../../../../services/socket/socket.service';\nimport { UserService } from 'src/app/client/pages/client-profile/services/user/user.service';\nimport { ChatService } from 'src/app/client/services/chat/chat.service';\nimport { OffersService } from 'src/app/client/services/offers/offers.service';\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@UntilDestroy()\n@Component({\n  selector: 'b2b-client-profile-offer-chat',\n  templateUrl: './client-offer-chat.component.html',\n  styleUrls: ['./client-offer-chat.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClientOfferChatComponent implements OnInit, OnDestroy {\n  @ViewChild('chatContainer') chatContainer: ElementRef;\n\n  public readonly formGroup: FormGroup;\n  public readonly b2bNgxButtonThemeEnum: typeof B2bNgxButtonThemeEnum;\n\n  public readonly messages$: Observable<any>;\n  public readonly chatInfo$: Observable<any>;\n\n  private readonly _messagesHistoryBehaviourSubject: BehaviorSubject<any>;\n  private readonly _messagesHistory$: Observable<any>;\n\n  private readonly _messageBehaviourSubject: BehaviorSubject<any>;\n  private readonly _message$: Observable<any>;\n\n  private readonly _chatInfoBehaviourSubject: BehaviorSubject<any>;\n  private readonly _chatInfo$: Observable<any>;\n\n  private _socket: any;\n\n  public displayRequestContacts: boolean;\n  public displayOpenContacts: boolean;\n  public displayCloseContacts: boolean;\n  public displayContactsRequested: boolean;\n  public displayContactsOpened: boolean;\n  public chat: any;\n\n  constructor(\n    private readonly _activatedRoute: ActivatedRoute,\n    private readonly _chatService: ChatService,\n    private readonly _usersService: UserService,\n    private readonly _offersService: OffersService,\n    private readonly _formBuilder: FormBuilder,\n    private readonly _authService: AuthService,\n    private readonly _socketService: SocketService,\n    private readonly _router: Router,\n    private readonly _chatsService: ChatsService,\n    private readonly _hotToastService: HotToastService,\n    private readonly changeDetectorRef: ChangeDetectorRef,\n    public readonly b2bNgxLinkService: B2bNgxLinkService,\n    private readonly translateService: TranslateService\n  ) {\n    this.b2bNgxButtonThemeEnum = B2bNgxButtonThemeEnum;\n    this.formGroup = this._formBuilder.group({\n      message: '',\n    });\n\n    this._messagesHistoryBehaviourSubject = new BehaviorSubject<any>([]);\n    this._messagesHistory$ =\n      this._messagesHistoryBehaviourSubject.asObservable();\n\n    this._messageBehaviourSubject = new BehaviorSubject<any>([]);\n    this._message$ = this._messageBehaviourSubject.asObservable();\n\n    this._chatInfoBehaviourSubject = new BehaviorSubject<any>(null);\n    this._chatInfo$ = this._chatInfoBehaviourSubject.asObservable();\n\n    this.chatInfo$ = this.getChatInfo();\n    this.messages$ = this.getMessages();\n  }\n\n  public getChatInfo() {\n    return this._authService.getUser().pipe(\n      filter((user) => !!user),\n      switchMap((user) =>\n        this._chatInfo$.pipe(\n          filter((chatInfo) => !!chatInfo),\n          map((chatInfo) => {\n            const role =\n              chatInfo.buyer._id === user?._id\n                ? this.translateService.instant('CHAT.SELLER')\n                : this.translateService.instant('CHAT.BUYER');\n            const displayInfo =\n              role === this.translateService.instant('CHAT.SELLER')\n                ? chatInfo.offer?.contact\n                : chatInfo.buyer;\n\n            const author =\n              displayInfo?.fullName ||\n              displayInfo?.personName ||\n              `${role} of ${chatInfo.offer?.title}`;\n\n            return {\n              ...chatInfo,\n              displayInfo: { ...displayInfo, role, author },\n            };\n          })\n        )\n      )\n    );\n  }\n\n  public getMessages() {\n    const user$ = this._authService.getUser();\n    const offer$ = this._activatedRoute.paramMap.pipe(\n      map((paramMap) => paramMap.get('id')),\n      switchMap((id) => this._offersService.getOfferById(id))\n    );\n\n    return combineLatest([user$, offer$]).pipe(\n      filter(([user, offer]) => !!user && !!offer),\n      switchMap(([user, offer]: [any, any]) =>\n        this._messagesHistory$.pipe(\n          tap(() => {\n            setTimeout(() => {\n              this.chatContainer.nativeElement.scrollTop =\n                this.chatContainer.nativeElement.scrollHeight;\n            }, 0);\n          }),\n          map((messages) =>\n            messages.map((message: any) => {\n              const isSeller = offer.user === message.author;\n              const author = isSeller\n                ? message.contact?.personName ||\n                  `${this.translateService.instant('CHAT.SELLER')} of ${\n                    offer.title\n                  }`\n                : user.fullName;\n\n              return {\n                ...message,\n                contact: {\n                  ...message.contact,\n                  author,\n                  role: isSeller\n                    ? this.translateService.instant('CHAT.SELLER')\n                    : this.translateService.instant('CHAT.BUYER'),\n                },\n              };\n            })\n          )\n        )\n      )\n    );\n  }\n\n  public enterPressed(event: any) {\n    this.sendMessage(this.formGroup.get('message').value);\n    event.preventDefault();\n  }\n\n  public async sendMessage(body: any) {\n    if (!body) {\n      return;\n    }\n\n    this.chatInfo$.pipe(untilDestroyed(this)).subscribe((chatInfo) => {\n      this._socket.emit('message', {\n        type: 'text',\n        body,\n        userId: chatInfo.offer.user,\n        offerId: chatInfo.offer._id,\n      });\n    });\n    this.formGroup.get('message').reset();\n  }\n\n  public subscribeOnMessage() {\n    return this._socket.on('message', (message: any) => {\n      const history = this._messagesHistoryBehaviourSubject.getValue();\n      this._messagesHistoryBehaviourSubject.next([...history, message]);\n    });\n  }\n\n  public subscribeOnChatInfo() {\n    return this._socket.on('chat_info', (chatInfo: any) => {\n      this._socketService.readMessages(chatInfo.unreadMessagesCount);\n      this._chatInfoBehaviourSubject.next(chatInfo);\n\n      const user = this._usersService.getUser();\n\n      const role = user._id === chatInfo.buyer?._id ? 'buyer' : 'seller';\n\n      this.displayContactsOpened = chatInfo.offer.openedFor.includes(\n        chatInfo.buyer?._id\n      );\n      this.displayContactsRequested =\n        chatInfo.contactsRequested && !this.displayContactsOpened;\n      this.displayRequestContacts =\n        role === 'buyer' &&\n        !this.displayContactsOpened &&\n        !this.displayContactsRequested &&\n        (!chatInfo.offer.visibility.email || !chatInfo.offer.visibility.phone);\n      // Object.values(chatInfo.offer.visibility).some((visibility) => !visibility);\n      this.displayOpenContacts =\n        role === 'seller' && !this.displayContactsOpened;\n      this.displayCloseContacts =\n        role === 'seller' && this.displayContactsOpened;\n\n      this.chat = chatInfo;\n\n      if (\n        user._id !== chatInfo.seller?._id &&\n        user?._id !== chatInfo.buyer?._id\n      ) {\n        this._router.navigateByUrl(\n          this.b2bNgxLinkService.getStaticLink('/latest-offers')\n        );\n      }\n    });\n  }\n\n  public subscribeOnMessageHistory() {\n    return this._socket.on('message_history', (message_history: any) => {\n      this._messagesHistoryBehaviourSubject.next(message_history);\n    });\n  }\n\n  openConnection(token: any) {\n    if (this._socket) {\n      this._socket.disconnect();\n    }\n\n    this._socket = io(environment.apiUrl, {\n      path: '/chat',\n      auth: {\n        token,\n      },\n    });\n  }\n\n  ngOnInit() {\n    const token$ = this._usersService.getToken$();\n    const user$ = this._usersService.getUser$();\n    const offer$ = this._activatedRoute.paramMap.pipe(\n      map((paramMap) => paramMap.get('id')),\n      switchMap((id) => this._offersService.getOfferById(id))\n    );\n\n    combineLatest([offer$, token$, user$])\n      .pipe(untilDestroyed(this))\n      .subscribe(([offer, token]: any) => {\n        this.openConnection(token);\n\n        this.subscribeOnMessageHistory();\n        this.subscribeOnChatInfo();\n        this.subscribeOnMessage();\n\n        this._socket.emit('start_chat', {\n          userId: offer.user,\n          offerId: offer._id,\n        });\n      });\n  }\n\n  requestContacts() {\n    this._chatsService\n      .requestContacts(this.chat)\n      .pipe(\n        untilDestroyed(this),\n        this._hotToastService.observe({\n          loading: 'Contacts requesting...',\n          success: 'Contacts requested successfully!',\n          error: 'Contacts requesting failed!',\n        })\n      )\n      .subscribe(() => {\n        // this._ampService.logEvent(\"Press contact request\");\n        // this._ampService.logEvent(\"Contact request sent\");\n        // this._ampService.logEvent(\"Get contact request\");\n        this.displayContactsRequested = true;\n        this.displayRequestContacts = false;\n        this.displayContactsOpened = false;\n        this.displayContactsRequested = false;\n        this.changeDetectorRef.detectChanges();\n      });\n  }\n\n  openContacts() {\n    // this._ampService.logEvent(\"Contact request approved\");\n\n    this._chatsService.sendContacts(this.chat.offer, this.chat.buyer._id);\n\n    // this._hotToastService.success(\"Contacts sent successfully!\");\n\n    this._chatsService\n      .openContacts(this.chat.offer, this.chat.buyer._id)\n      .pipe(\n        untilDestroyed(this),\n        this._hotToastService.observe({\n          loading: 'Contacts opening...',\n          success: 'Contacts opened successfully!',\n          error: 'Contacts opening failed!',\n        })\n      )\n      .subscribe(() => {\n        this.displayOpenContacts = false;\n        this.displayCloseContacts = true;\n        this.changeDetectorRef.detectChanges();\n      });\n  }\n\n  closeContacts() {\n    this._chatsService\n      .closeContacts(this.chat.offer._id, this.chat.buyer._id)\n      .pipe(\n        untilDestroyed(this),\n        this._hotToastService.observe({\n          loading: 'Contacts closing...',\n          success: 'Contacts closed successfully!',\n          error: 'Contacts closing failed!',\n        })\n      )\n      .subscribe(() => {\n        this.displayOpenContacts = false;\n        this.displayCloseContacts = false;\n        this.displayContactsOpened = false;\n        this.displayContactsRequested = false;\n        this.changeDetectorRef.detectChanges();\n      });\n  }\n\n  ngOnDestroy() {\n    if (this._socket) {\n      this._socket.disconnect();\n    }\n  }\n}\n","<div class=\"client-profile-chat-wrapper\">\n\t<div class=\"client-profile-chat\" *ngIf=\"chatInfo$ | async as chatInfo\">\n\t\t<form\n\t\t\t(keydown.enter)=\"enterPressed($event)\"\n\t\t\t[formGroup]=\"formGroup\"\n\t\t\t(ngSubmit)=\"sendMessage(formGroup.get('message').value)\"\n\t\t\tclass=\"client-profile-chat-container\">\n\t\t\t<p class=\"client-profile-chat-breadcrumbs\">\n\t\t\t\t<a [routerLink]=\"b2bNgxLinkService.getLink('/latest-offers') | async\">{{ \"PAGES.LATEST_OFFERS\" | translate }}</a>\n\t\t\t\t<a [routerLink]=\"b2bNgxLinkService.getLink('/offers/' + chatInfo.offer._id) | async\"\n\t\t\t\t\t>/ {{ chatInfo.offer.title }}\n\t\t\t\t</a>\n\t\t\t</p>\n\n\t\t\t<p class=\"client-profile-chat-title\">{{ chatInfo.offer.title }}</p>\n\t\t\t<p class=\"client-profile-chat-started\">{{ \"CHAT.CHAT_STARTED\"  | translate }} {{ chatInfo.createdAt | date }}</p>\n\n\t\t\t<div class=\"client-profile-chat-messages\">\n\t\t\t\t<ul class=\"client-profile-chat-messages-list\" #chatContainer>\n\t\t\t\t\t<li *ngFor=\"let message of messages$ | async\" class=\"client-profile-chat-messages-list-item\">\n\t\t\t\t\t\t<p class=\"client-profile-chat-messages-list-item-info\">\n\t\t\t\t\t\t\t<span class=\"client-profile-chat-messages-list-item-from\">{{ message.contact.author }}</span>\n\t\t\t\t\t\t\t<span class=\"client-profile-chat-messages-list-item-date\">{{ message.createdAt | date }}</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p class=\"client-profile-chat-messages-list-item-message\">\n\t\t\t\t\t\t\t{{ message.body }}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li *ngIf=\"!(messages$ | async)?.length\" class=\"client-profile-chat-no-messages\">\n\t\t\t\t\t\t{{ \"CHAT.NO_MESSAGES\"  | translate }}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\n\t\t\t<textarea\n\t\t\t\tformControlName=\"message\"\n\t\t\t\t[placeholder]=\"'PLACEHOLDERS.ENTER_TO_SEND'  | translate\"\n\t\t\t\tclass=\"client-profile-chat-textarea\"\n\t\t\t\trows=\"5\"></textarea>\n\n\t\t\t<div class=\"client-profile-chat-actions\">\n\t\t\t\t<button\n\t\t\t\t\tb2bNgxButton\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLACK\"\n\t\t\t\t\tclass=\"client-profile-chat-actions-send-button\">\n\t\t\t\t\t<span>{{ \"BUTTONS.SEND\"  | translate }}</span>\n\t\t\t\t\t<img b2bNgxIcon name=\"chat\" class=\"client-profile-chat-actions-send-button-icon\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</form>\n\n\t\t<div class=\"client-profile-chat-buyer-info\">\n\t\t\t<div class=\"client-profile-chat-buyer-info-container\">\n\t\t\t\t<p class=\"client-profile-chat-buyer-info-text\">\n\t\t\t\t\t{{ chatInfo.displayInfo.role }}\n\t\t\t\t</p>\n\t\t\t\t<p class=\"client-profile-chat-buyer-info-title\">\n\t\t\t\t\t<span>{{ chatInfo.displayInfo.author }}</span>\n\t\t\t\t</p>\n\t\t\t\t<p class=\"client-profile-chat-buyer-info-from\" *ngIf=\"chatInfo.displayInfo.country\">\n\t\t\t\t\t{{ \"LABELS.FROM\"  | translate }} {{ chatInfo.displayInfo.country }}\n\t\t\t\t</p>\n\n\t\t\t\t<p class=\"client-profile-chat-buyer-email-title\" *ngIf=\"chatInfo.displayInfo.email\">\n\t\t\t\t\t{{ \"LABELS.EMAIL\"  | translate }}\n\t\t\t\t</p>\n\t\t\t\t<p class=\"client-profile-chat-buyer-email\">\n\t\t\t\t\t{{ chatInfo.displayInfo.email }}\n\t\t\t\t</p>\n\n\t\t\t\t<p class=\"client-profile-chat-buyer-phone-title\" *ngIf=\"chatInfo.displayInfo.phone?.e164Number\">\n\t\t\t\t\t{{ \"LABELS.PHONE\" | translate }}\n\t\t\t\t</p>\n\t\t\t\t<p class=\"client-profile-chat-buyer-phone\">\n\t\t\t\t\t{{ chatInfo.displayInfo.phone?.e164Number }}\n\t\t\t\t</p>\n\n\t\t\t\t<p class=\"client-profile-chat-buyer-web-title\" *ngIf=\"chatInfo.displayInfo.site\">\n\t\t\t\t\t{{ \"LABELS.WEB\" | translate }}\n\t\t\t\t</p>\n\t\t\t\t<p class=\"client-profile-chat-buyer-web\">\n\t\t\t\t\t{{ chatInfo.displayInfo.site }}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div class=\"client-profile-chat-buyer-info-media\">\n\t\t\t\t<button class=\"my-btn requested\" *ngIf=\"displayContactsOpened\">\n\t\t\t\t\t{{ \"CHAT.CONTACTS_OPENED\" | translate }}\n\t\t\t\t</button>\n\t\t\t\t<button class=\"my-btn\" *ngIf=\"displayRequestContacts\" (click)=\"requestContacts()\">\n\t\t\t\t\t{{ \"CHAT.REQUEST_CONTACTS\" | translate }}\n\t\t\t\t</button>\n\t\t\t\t<button class=\"my-btn\" *ngIf=\"displayOpenContacts\" (click)=\"openContacts()\">\n\t\t\t\t\t{{ \"CHAT.OPEN_CONTACTS\" | translate }}\n\t\t\t\t</button>\n\t\t\t\t<button class=\"my-btn\" *ngIf=\"displayCloseContacts\" (click)=\"closeContacts()\">\n\t\t\t\t\t{{ \"CHAT.CLOSE_CONTACTS\" | translate }}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n"],"names":["ChangeDetectorRef","ElementRef","UntilDestroy","untilDestroyed","B2bNgxButtonThemeEnum","BehaviorSubject","combineLatest","filter","map","switchMap","tap","io","environment","i0","ctx_r23","value","ClientOfferChatComponent","constructor","_activatedRoute","_chatService","_usersService","_offersService","_formBuilder","_authService","_socketService","_router","_chatsService","_hotToastService","changeDetectorRef","b2bNgxLinkService","translateService","b2bNgxButtonThemeEnum","formGroup","group","message","_messagesHistoryBehaviourSubject","_messagesHistory$","asObservable","_messageBehaviourSubject","_message$","_chatInfoBehaviourSubject","_chatInfo$","chatInfo$","getChatInfo","messages$","getMessages","getUser","pipe","user","chatInfo","role","buyer","_id","instant","displayInfo","offer","_a","contact","author","fullName","personName","_b","title","user$","offer$","paramMap","get","id","getOfferById","setTimeout","chatContainer","nativeElement","scrollTop","scrollHeight","messages","isSeller","enterPressed","event","sendMessage","preventDefault","body","subscribe","_socket","emit","type","userId","offerId","reset","subscribeOnMessage","on","history","getValue","next","subscribeOnChatInfo","readMessages","unreadMessagesCount","displayContactsOpened","openedFor","includes","displayContactsRequested","contactsRequested","displayRequestContacts","visibility","email","phone","displayOpenContacts","displayCloseContacts","chat","seller","_c","_d","navigateByUrl","getStaticLink","subscribeOnMessageHistory","message_history","openConnection","token","disconnect","apiUrl","path","auth","ngOnInit","token$","getToken$","getUser$","requestContacts","observe","loading","success","error","detectChanges","openContacts","sendContacts","closeContacts","ngOnDestroy","selectors","viewQuery"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}