{"version":3,"file":"default-src_app_client_pages_client-profile_pages_client-profile-settings_client-profile-sett-0e3621.js","mappings":"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","sources":["./src/app/client/pages/client-profile/pages/client-profile-settings/client-profile-settings-routing.module.ts","./src/app/client/pages/client-profile/pages/client-profile-settings/client-profile-settings.module.ts","./src/app/client/pages/client-profile/pages/client-profile-settings/layout/client-profile-settings.component.ts","./src/app/client/pages/client-profile/pages/client-profile-settings/layout/client-profile-settings.component.html","./src/app/core/helpers/validator/full-name.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport {ClientProfileSettingsComponent} from \"./layout/client-profile-settings.component\";\n\nconst routes: Routes = [\n\t{\n\t\tpath: \"\",\n\t\tcomponent: ClientProfileSettingsComponent,\n\t},\n];\n\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule],\n})\nexport class ClientProfileSettingsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ClientProfileSettingsComponent} from \"./layout/client-profile-settings.component\";\nimport { B2bNgxInputModule } from \"@b2b/ngx-input\";\nimport { B2bNgxTelModule } from \"@b2b/ngx-tel\";\nimport { B2bNgxSelectModule } from \"@b2b/ngx-select\";\nimport { B2bNgxSocialMediasModule } from \"@b2b/ngx-social-medias\";\nimport {B2bNgxChipsModule} from \"@b2b/ngx-chips\";\nimport { B2bNgxButtonModule } from \"@b2b/ngx-button\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { B2bNgxCountrySelectModule } from \"@b2b/ngx-country-select\";\nimport { B2bNgxFileModule } from \"@b2b/ngx-file\";\nimport { B2bNgxIconModule } from \"@b2b/ngx-icon\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport {ClientProfileSettingsRoutingModule} from \"./client-profile-settings-routing.module\";\nimport {TranslateModule} from \"@ngx-translate/core\";\n\n@NgModule({\n\tdeclarations: [ClientProfileSettingsComponent],\n\timports: [\n\t\tCommonModule,\n\t\tClientProfileSettingsRoutingModule,\n\t\tReactiveFormsModule,\n\t\tB2bNgxInputModule,\n\t\tB2bNgxSelectModule,\n\t\tB2bNgxTelModule,\n\t\tB2bNgxSocialMediasModule,\n\t\tB2bNgxChipsModule,\n\t\tB2bNgxButtonModule,\n\t\tB2bNgxCountrySelectModule,\n\t\tB2bNgxFileModule,\n\t\tB2bNgxIconModule,\n\t\tMatDialogModule,\n\t\tTranslateModule,\n\t],\n})\nexport class ClientProfileSettingsModule {}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnInit,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BehaviorSubject, Observable, of, Subscription, tap } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { HotToastService } from '@ngneat/hot-toast';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\n\nimport { B2bNgxButtonThemeEnum } from '@b2b/ngx-button';\nimport { B2bNgxInputThemeEnum } from '@b2b/ngx-input';\nimport { B2bNgxLinkThemeEnum } from '@b2b/ngx-link';\nimport { B2bNgxSelectThemeEnum } from '@b2b/ngx-select';\nimport { CategoriesService } from '../../../../../services/categories/categories.service';\nimport { ClientProfileDeleteAccountComponent } from '../../../components/client-profile-delete-account/client-profile-delete-account.component';\nimport { UserService } from '../../../services/user/user.service';\nimport { User } from '../../../../../../core/models/user/user.model';\nimport { TradebidService } from '../../../../client-tradebid/tradebid.service';\nimport { ADMIN_ID } from '../../../../../../core/helpers/constant/role-ids';\nimport { fullName } from '../../../../../../core/helpers/validator/full-name';\nimport { onlyLatin } from '../../../../../../core/helpers/validator/only-latin';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { AuthStore } from '../../../../../../auth/state/auth/auth.store';\nimport { AuthService } from '../../../../../../auth/services/auth/auth.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@UntilDestroy()\n@Component({\n  selector: 'b2b-client-profile-settings',\n  templateUrl: './client-profile-settings.component.html',\n  styleUrls: ['./client-profile-settings.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate(500, style({ opacity: 1 })),\n      ]),\n      transition(':leave', [animate(500, style({ opacity: 0 }))]),\n    ]),\n  ],\n})\nexport class ClientProfileSettingsComponent implements OnInit {\n  public readonly baseFormGroup: FormGroup = this.getBaseFormGroup();\n  public readonly passwordFormGroup: FormGroup;\n  public readonly countries: any[];\n  public readonly socialMedias: any;\n\n  public readonly b2bNgxLinkThemeEnum: typeof B2bNgxLinkThemeEnum;\n  public readonly b2bNgxButtonThemeEnum: typeof B2bNgxButtonThemeEnum;\n  public readonly b2bNgxInputThemeEnum: typeof B2bNgxInputThemeEnum;\n  public readonly b2bNgxSelectThemeEnum: typeof B2bNgxSelectThemeEnum;\n\n  public readonly roles$: Observable<any>;\n  public availableRoles: any[] = [];\n\n  public formState: { [key: string]: AbstractControl };\n  public baseFormState = this.baseFormGroup.controls;\n\n  public id: any;\n  public isDefaultRole: boolean;\n  public currRole: boolean;\n  @ViewChild('form') form: ElementRef;\n\n  private displayRoleSelectorSource: BehaviorSubject<boolean> =\n    new BehaviorSubject<boolean>(false);\n  private activeUser: {\n    phone: { number: any };\n    role: { _id: any; name: string };\n  };\n\n  constructor(\n    private readonly _authStore: AuthStore,\n    private readonly _hotToastService: HotToastService,\n    private readonly _formBuilder: FormBuilder,\n    private readonly userService: UserService,\n    private readonly changeDetectorRef: ChangeDetectorRef,\n    private readonly activatedRoute: ActivatedRoute,\n    private readonly categoriesService: CategoriesService,\n    private readonly translateService: TranslateService,\n    private readonly authService: AuthService,\n    private readonly dialog: MatDialog,\n    private readonly renderer2: Renderer2,\n    private readonly tradebidService: TradebidService\n  ) {\n    this.b2bNgxLinkThemeEnum = B2bNgxLinkThemeEnum;\n    this.b2bNgxButtonThemeEnum = B2bNgxButtonThemeEnum;\n    this.b2bNgxInputThemeEnum = B2bNgxInputThemeEnum;\n    this.b2bNgxSelectThemeEnum = B2bNgxSelectThemeEnum;\n\n    this.passwordFormGroup = this.getPasswordFormGroup();\n    this.countries = this.getCountries();\n    this.socialMedias = this.getSocialMedias();\n    this.roles$ = this.getRoles();\n\n    this.getUserInfo();\n  }\n\n  ngOnInit() {\n    if (this.isDefaultRole) {\n      this.tradebidService.getCompanyData().subscribe((companyData) => {\n        if (companyData.businessType) {\n          this.roles$.subscribe((roles) => {\n            const roleId = roles.find(\n              (role: { displayName: string }) =>\n                role.displayName === companyData.businessType\n            )?.id;\n            if (roleId) {\n              const preferences = this.userService.getUser().preferences;\n              const fullName = this.userService.getUser().fullName;\n              this.userService\n                .updateUserSettings({ roleId, preferences, fullName })\n                .subscribe();\n            }\n          });\n        }\n      });\n    }\n    this.displayRoleSelectorSource.next(\n      !!this.activatedRoute.snapshot.params['id']\n    );\n  }\n\n  public get displayRoleSelector$(): Observable<boolean> {\n    return this.displayRoleSelectorSource.asObservable();\n  }\n\n  public get user(): User {\n    return this.userService.getUser();\n  }\n\n  public getRoles(): Observable<any> {\n    const activeUserId =\n      this.activatedRoute.snapshot.params['id'] ?? this.user.role._id;\n    if (activeUserId === ADMIN_ID) {\n      return of([\n        {\n          description: 'Administrator',\n          displayName: 'Admin',\n          name: 'admin',\n          _id: '60ba1f30445d001ecf7775af',\n        },\n      ]);\n    }\n\n    return this.authService.getRoles().pipe(\n      map((roles) =>\n        roles.map((role) => {\n          const roleName = this.translateService.instant(\n            `ROLES.${role.name.toUpperCase()}_NAME`\n          );\n\n          return {\n            ...role,\n            description: this.translateService.instant(\n              `ROLES.${role.name.toUpperCase()}`\n            ),\n            displayName: roleName.charAt(0).toUpperCase() + roleName.slice(1),\n          };\n        })\n      ),\n      tap((roles) => (this.availableRoles = roles))\n    );\n  }\n\n  public getPhoneNumber(): string {\n    return this.activeUser?.phone?.number || '';\n  }\n\n  public getSocialMedias() {\n    return [\n      {\n        label: 'Telegram',\n        icon: 'telegram',\n      },\n      {\n        label: 'Viber',\n        icon: 'viber',\n      },\n      {\n        label: 'Whatsapp',\n        icon: 'whats-app',\n      },\n      // {\n      // \tlabel: \"Messanger\",\n      // \ticon: \"messanger\",\n      // },\n    ];\n  }\n\n  public getCountries(): any[] {\n    return [];\n  }\n\n  public saveChanges(formGroup: FormGroup): void {\n    if (formGroup.invalid) {\n      this.baseFormGroup.markAllAsTouched();\n      return;\n    }\n    if (this.activeUser.role._id !== formGroup.value.roleId) {\n      // this.updateUserRole(formGroup.value.roleId);\n    }\n\n    const userInfo = {\n      ...formGroup.value,\n      phone: undefined,\n      phoneNumber: formGroup.value.phone.number,\n      phoneInternationalNumber: formGroup.value.phone.internationalNumber,\n      phoneNationalNumber: formGroup.value.phone.nationalNumber,\n      phoneCountryCode: formGroup.value.phone.countryCode,\n      phoneDialCode: formGroup.value.phone.dialCode,\n      phoneE164Number: formGroup.value.phone.e164Number,\n    };\n    delete userInfo.phone;\n    if (this.id) {\n      this.userService\n        .updateUserById(this.id, userInfo)\n        .pipe(\n          untilDestroyed(this),\n          this._hotToastService.observe({\n            loading: 'Profile updating...',\n            success: 'Profile updated successfully!',\n            error: 'Profile updated failed!',\n          }),\n          catchError((error) => {\n            const { message } = error.error;\n            const phoneControl = this.baseFormGroup.get('phone');\n\n            if (message === 'Invalid phone number') {\n              phoneControl.setErrors({ 'Invalid phone number': true });\n              phoneControl.markAsTouched();\n\n              this.changeDetectorRef.detectChanges();\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe(() => {\n          this._authStore.update({\n            user: formGroup.value,\n          });\n          window.location.reload();\n        });\n    } else {\n      this.userService\n        .updateUserSettings(userInfo)\n        .pipe(\n          untilDestroyed(this),\n          this._hotToastService.observe({\n            loading: 'Profile updating...',\n            success: 'Profile updated successfully!',\n            error: 'Profile updated failed!',\n          }),\n          catchError((error) => {\n            const { message } = error.error;\n            const phoneControl = this.baseFormGroup.get('phone');\n\n            if (message === 'Invalid phone number') {\n              phoneControl.setErrors({ 'Invalid phone number': true });\n              phoneControl.markAsTouched();\n            }\n\n            return of(null);\n          })\n        )\n        .subscribe(() => {\n          window.location.reload();\n        });\n    }\n  }\n\n  public updatePassword(formGroup: FormGroup): void {\n    if (formGroup.invalid) {\n      return;\n    }\n\n    this.userService\n      .updatePassword(formGroup.value)\n      .pipe(\n        untilDestroyed(this),\n        this._hotToastService.observe({\n          loading: this.translateService.instant(\n            'SETTINGS.PASSWORD_UPDATING_LOADING'\n          ),\n          success: this.translateService.instant(\n            'SETTINGS.PASSWORD_UPDATING_SUCCESS'\n          ),\n          error: this.translateService.instant(\n            'SETTINGS.PASSWORD_UPDATING_ERROR'\n          ),\n        })\n      )\n      .subscribe({\n        error: (err) => {\n          const { code } = err.error;\n\n          const password = this.passwordFormGroup.get('password');\n\n          password.setErrors({ [code]: true });\n\n          password.markAsDirty();\n          password.markAsTouched();\n\n          this.changeDetectorRef.detectChanges();\n        },\n      });\n  }\n\n  public deleteAccount(): void {\n    if (this.activeUser.role.name === 'admin') return;\n\n    const dialog = this.dialog.open(ClientProfileDeleteAccountComponent, {\n      width: '40vw',\n      height: '700px',\n      minHeight: '0',\n      backdropClass: 'report-dialog',\n    });\n\n    dialog\n      .afterClosed()\n      .pipe(untilDestroyed(this))\n      .subscribe(() => {\n        this.userService.deleteUser().subscribe();\n      });\n  }\n\n  private getUserInfo(): Subscription {\n    return this.activatedRoute.paramMap\n      .pipe(\n        untilDestroyed(this),\n        switchMap((paramMap) => {\n          this.id = paramMap.get('id');\n\n          return this.id\n            ? this.userService.getUserById(this.id)\n            : this.userService.getUser$();\n        })\n      )\n      .subscribe((userInfo: any) => {\n        this.activeUser = userInfo ?? this.userService.getUser();\n\n        this.isDefaultRole = userInfo.role.name === 'default';\n        this.baseFormGroup.patchValue({\n          ...userInfo,\n          roleId: userInfo.role.name !== 'default' ? userInfo.role._id : null,\n          logo: [userInfo.logo],\n          mailSubscribed: userInfo?.mailSubscribed,\n        });\n\n        if (userInfo.socialAuth) {\n          this.baseFormGroup.get('email').disable();\n        }\n      });\n  }\n\n  private getPasswordFormGroup(): FormGroup {\n    return this._formBuilder.group({\n      password: '',\n      newPassword: '',\n    });\n  }\n\n  private getBaseFormGroup(): FormGroup {\n    return this._formBuilder.group({\n      fullName: ['', [Validators.required, fullName(), onlyLatin()]],\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', [Validators.required]],\n      roleId: null,\n    });\n  }\n}\n","<div class=\"client-profile-settings\">\n\t<div class=\"settings-header\">\n\t\t<h3 class=\"client-profile-settings-title\">{{ \"SETTINGS.TITLE\" | translate}}</h3>\n\t\t<div class=\"header-buttons\">\n\t\t\t<button\n\t\t\t\t(click)=\"saveChanges(baseFormGroup)\"\n\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLUE\"\n\t\t\t\tb2bNgxButton\n\t\t\t\tclass=\"save-btn\">\n\t\t\t\tSave changes\n\t\t\t</button>\n\t\t</div>\n\t</div>\n\n\t<!--\t<form-->\n\t<!--\t\terrorTailor-->\n\t<!--\t\t#form-->\n\t<!--\t\tclass=\"client-profile-settings-form\"-->\n\t<!--\t\t[formGroup]=\"baseFormGroup\"-->\n\t<!--\t\t(ngSubmit)=\"saveChanges(baseFormGroup)\">-->\n\t<!--\t\t<div class=\"client-profile-settings-block\">-->\n\n\t<!--&lt;!&ndash;\t\t\t<div class=\"client-profile-settings-block-input\">&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t<input&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t\tb2bNgxInput&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t\t[label]=\"t('LABELS.COMPANY')\"&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t\tformControlName=\"company\" />&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t</div>&ndash;&gt;-->\n\t<!--\t\t</div>-->\n\t<!--\t\t<div class=\"client-profile-settings-block\">-->\n\t<!--&lt;!&ndash;\t\t\t<div class=\"client-profile-settings-block-input\">&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t<input&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t\tb2bNgxInput&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t\t[label]=\"t('LABELS.WEB')\"&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t\tformControlName=\"site\" />&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t</div>&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t<div class=\"client-profile-settings-block-input\">&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t<b2b-ngx-file&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t\tformControlName=\"logo\"&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t\t[errors]=\"baseFormGroup.getControl('logo').errors\"&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t\t[label]=\"t('LABELS.CHOOSE_LOGO')\"&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t\t>{{ t(\"LABELS.LOGO\") }}</b2b-ngx-file&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t>&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t</div>&ndash;&gt;-->\n\t<!--\t\t</div>-->\n\t<!--\t\t<div class=\"client-profile-settings-block\">-->\n\n\t<!--&lt;!&ndash;\t\t\t<div class=\"client-profile-settings-block-input\">&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t<b2b-ngx-country-select&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t\t[theme]=\"b2bNgxSelectThemeEnum.BACKGROUND_GRAY\"&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t\tformControlName=\"country\"&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t\t[errors]=\"baseFormGroup.getControl('country').errors\">&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t\t{{ t(\"LABELS.COUNTRY\") }}&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t\t</b2b-ngx-country-select>&ndash;&gt;-->\n\t<!--&lt;!&ndash;\t\t\t</div>&ndash;&gt;-->\n\t<!--\t\t</div>-->\n\t<!--\t\t<div class=\"client-profile-settings-block\">-->\n\t<!--\t\t\t<div class=\"client-profile-settings-block-input\">-->\n\t<!--\t\t\t\t<b2b-ngx-tel formControlName=\"phone\" [errors]=\"baseFormGroup.getControl('phone').errors\">{{-->\n\t<!--\t\t\t\t\tt(\"LABELS.PHONE_NUMBER\")-->\n\t<!--\t\t\t\t}}</b2b-ngx-tel>-->\n\t<!--\t\t\t\t<p style=\"-->\n\t<!--\t\t\t\tfont-size: 14px;-->\n\t<!--\t\t\t\tcolor: #9FA4BB;-->\n\t<!--\t\t\t\tmargin-left: 4px;\">-->\n\t<!--\t\t\t\t\t{{t('LABELS.INDICATE_PHONE_NUMBER')}}-->\n\t<!--\t\t\t\t</p>-->\n\t<!--&lt;!&ndash;\t\t\t\t<b2b-ngx-social-medias [options]=\"socialMedias\" [defaultNumber]=\"user.phone.number\" formControlName=\"socials\"></b2b-ngx-social-medias>&ndash;&gt;-->\n\t<!--\t\t\t\t-->\n\t<!--\t\t\t</div>-->\n\t<!--\t\t\t<div class=\"client-profile-settings-block-input\">-->\n\t<!--\t\t\t\t<p class=\"client-profile-settings-block-text-1\">{{ t(\"SETTINGS.PREFERENCIES\") }}</p>-->\n\t<!--\t\t\t\t<p class=\"client-profile-settings-block-text-2\">{{ t(\"SETTINGS.PREFERENCIES_DESCRIPTION\") }}</p>-->\n\t<!--\t\t\t\t<b2b-ngx-treeview-->\n\t<!--\t\t\t\t\tformControlName=\"preferences\"-->\n\t<!--\t\t\t\t\ttheme=\"gray\"-->\n\t<!--\t\t\t\t\t[items]=\"categories$ | async\"-->\n\t<!--\t\t\t\t\tclass=\"client-profile-settings-chips\"-->\n\t<!--\t\t\t\t\tposition=\"right\"-->\n\t<!--\t\t\t\t\t[errors]=\"baseFormGroup.getControl('preferences').errors\"></b2b-ngx-treeview>-->\n\t<!--\t\t\t\t<div class=\"client-profile-settings-block-input__role\">-->\n\t<!--\t\t\t\t\t<b2b-ngx-select-->\n\t<!--\t\t\t\t\t\tformControlName=\"roleId\"-->\n\t<!--\t\t\t\t\t\t[placeholder]=\"t('PLACEHOLDERS.CHOOSE_ROLE')\"-->\n\t<!--\t\t\t\t\t\t[options]=\"roles$ | async\"-->\n\t<!--\t\t\t\t\t\tbindValue=\"_id\"-->\n\t<!--\t\t\t\t\t\tbindLabel=\"displayName\"-->\n\t<!--\t\t\t\t\t\t[errors]=\"baseFormGroup.getControl('roleId').errors\"-->\n\t<!--\t\t\t\t\t\t[theme]=\"b2bNgxSelectThemeEnum.BACKGROUND_GRAY\">-->\n\t<!--\t\t\t\t\t\t{{ t(\"LABELS.CHOOSE_ROLE\") }}</b2b-ngx-select-->\n\t<!--\t\t\t\t\t>-->\n\t<!--\t\t\t\t</div>-->\n\t<!--\t\t\t</div>-->\n\t<!--\t\t</div>-->\n\n\t<!--\t\t<div class=\"client-profile-settings-divider\"></div>-->\n\t<!--\t\t<button type=\"button\" (click)=\"deleteAccount()\" class=\"client-profile-settings-delete-button\">-->\n\t<!--\t\t\t<img b2bNgxIcon name=\"trash\" class=\"mr-1\" />-->\n\t<!--\t\t\t{{ t(\"BUTTONS.DELETE_ACCOUNT\") }}-->\n\t<!--\t\t</button>-->\n\n\t<!--\t\t<div class=\"client-profile-settings-footer\">-->\n\t<!--\t\t\t<button-->\n\t<!--\t\t\t\tb2bNgxButton-->\n\t<!--\t\t\t\tclass=\"client-profile-settings-footer-cancel-button\"-->\n\t<!--\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.OUTLINE_BLACK\">-->\n\t<!--\t\t\t\t{{ t(\"BUTTONS.CANCEL\") }}-->\n\t<!--\t\t\t</button>-->\n\t<!--\t\t\t<button-->\n\t<!--\t\t\t\tb2bNgxButton-->\n\t<!--\t\t\t\ttype=\"submit\"-->\n\t<!--\t\t\t\tclass=\"client-profile-settings-footer-save-button\"-->\n\t<!--\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLACK\">-->\n\t<!--\t\t\t\t{{ t(\"BUTTONS.SAVE_CHANGES\") }}-->\n\t<!--\t\t\t</button>-->\n\t<!--\t\t</div>-->\n\t<!--\t</form>-->\n\t<!--</div>-->\n\n\t<form [formGroup]=\"baseFormGroup\" class=\"data-form\">\n\t\t<div class=\"inputs\">\n\t\t\t<div class=\"data-inputs\">\n\t\t\t\t<div class=\"client-profile-settings-block-input\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tb2bNgxInput\n\t\t\t\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"\n\t\t\t\t\t\t[label]=\"'LABELS.EMAIL' | translate\"\n\t\t\t\t\t\tformControlName=\"email\"/>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"client-profile-settings-block-input\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tb2bNgxInput\n\t\t\t\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"\n\t\t\t\t\t\t[label]=\"'LABELS.FULL_NAME' | translate\"\n\t\t\t\t\t\tformControlName=\"fullName\"/>\n\n\t\t\t\t\t<p *ngIf=\"baseFormState['fullName']?.errors?.['fullName']\" class=\"error\">Enter first and last name in\n\t\t\t\t\t\tEnglish, separated by a space. For example: John Smith</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"client-profile-settings-block-input\">\n\t\t\t\t\t<b2b-ngx-tel formControlName=\"phone\" [errors]=\"baseFormGroup.get('phone').errors\">{{\n\t\t\t\t\t\t\"LABELS.PHONE_NUMBER\" | translate\n\t\t\t\t\t\t}}</b2b-ngx-tel>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"client-profile-settings-block-input\">\n\t\t\t\t\t<b2b-ngx-select\n\t\t\t\t\t\t*ngIf=\"displayRoleSelector$ | async\"\n\t\t\t\t\t\tformControlName=\"roleId\"\n\t\t\t\t\t\t[options]=\"roles$ | async\"\n\t\t\t\t\t\tbindLabel=\"displayName\"\n\t\t\t\t\t\tbindValue=\"_id\"\n\t\t\t\t\t\t[theme]=\"b2bNgxSelectThemeEnum.BACKGROUND_GRAY\">\n\t\t\t\t\t\tSelect user role\n\t\t\t\t\t</b2b-ngx-select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<form\n\t\t\t\tclass=\"client-profile-settings-change-password-form\"\n\t\t\t\t[formGroup]=\"passwordFormGroup\"\n\t\t\t\t*ngIf=\"!user.socialAuth\">\n\t\t\t\t<p class=\"client-profile-settings-change-password-label\">{{ \"LABELS.PASSWORD\" | translate }}</p>\n\t\t\t\t<div class=\"client-profile-settings-block\">\n\t\t\t\t\t<div class=\"client-profile-settings-block-input\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tb2bNgxInput\n\t\t\t\t\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"\n\t\t\t\t\t\t\t[label]=\"'LABELS.OLD_PASSWORD' | translate\"\n\t\t\t\t\t\t\tformControlName=\"password\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"client-profile-settings-block-input\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tb2bNgxInput\n\t\t\t\t\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"\n\t\t\t\t\t\t\t[label]=\"'LABELS.NEW_PASSWORD' | translate\"\n\t\t\t\t\t\t\tformControlName=\"newPassword\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-buttons\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tb2bNgxButton\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"updatePassword(passwordFormGroup)\"\n\t\t\t\t\t\tclass=\"client-profile-settings-block-submit-button\"\n\t\t\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLACK\">\n\t\t\t\t\t\t{{ \"BUTTONS.CHANGE_PASSWORD\" | translate}}\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tb2bNgxButton\n\t\t\t\t\t\t(click)=\"deleteAccount()\"\n\t\t\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.OUTLINE_BLACK\"\n\t\t\t\t\t\tclass=\"delete-account-button desktop-delete-button\">\n\t\t\t\t\t\t<img b2bNgxIcon name=\"delete-red\"/>\n\t\t\t\t\t\tDelete account\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t</form>\n\t<div class=\"header-buttons mobile-buttons\">\n\t\t<button [theme]=\"b2bNgxButtonThemeEnum.OUTLINE_GRAY\" b2bNgxButton class=\"cancel-btn\">Cancel</button>\n\t\t<button\n\t\t\t(click)=\"saveChanges(baseFormGroup)\"\n\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLUE\"\n\t\t\tb2bNgxButton\n\t\t\tclass=\"save-btn\">\n\t\t\tSave changes\n\t\t</button>\n\t</div>\n</div>\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport function fullName(): ValidatorFn {\n\tconst fullName = /.{1,} .{1,}/;\n\n\treturn (control: AbstractControl): ValidationErrors | null => {\n\t\tif (!control.value) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!fullName.test(String(control.value).toLowerCase())) {\n\t\t\treturn { fullName: true };\n\t\t}\n\n\t\treturn null;\n\t};\n}\n"],"names":["ChangeDetectorRef","ElementRef","Renderer2","Validators","BehaviorSubject","of","tap","catchError","map","switchMap","UntilDestroy","untilDestroyed","B2bNgxButtonThemeEnum","B2bNgxInputThemeEnum","B2bNgxLinkThemeEnum","B2bNgxSelectThemeEnum","ClientProfileDeleteAccountComponent","ADMIN_ID","fullName","onlyLatin","animate","style","transition","trigger","i0","ctx_r1","ClientProfileSettingsComponent","constructor","_authStore","_hotToastService","_formBuilder","userService","changeDetectorRef","activatedRoute","categoriesService","translateService","authService","dialog","renderer2","tradebidService","getBaseFormGroup","baseFormGroup","controls","b2bNgxLinkThemeEnum","b2bNgxButtonThemeEnum","b2bNgxInputThemeEnum","b2bNgxSelectThemeEnum","passwordFormGroup","getPasswordFormGroup","countries","getCountries","socialMedias","getSocialMedias","roles$","getRoles","getUserInfo","ngOnInit","isDefaultRole","getCompanyData","subscribe","companyData","businessType","roles","roleId","find","role","displayName","_a","id","preferences","getUser","updateUserSettings","displayRoleSelectorSource","next","snapshot","params","displayRoleSelector$","asObservable","user","activeUserId","_id","description","name","pipe","roleName","instant","toUpperCase","charAt","slice","availableRoles","getPhoneNumber","activeUser","phone","_b","number","label","icon","saveChanges","formGroup","invalid","markAllAsTouched","value","userInfo","undefined","phoneNumber","phoneInternationalNumber","internationalNumber","phoneNationalNumber","nationalNumber","phoneCountryCode","countryCode","phoneDialCode","dialCode","phoneE164Number","e164Number","updateUserById","observe","loading","success","error","message","phoneControl","get","setErrors","markAsTouched","detectChanges","update","window","location","reload","updatePassword","err","code","password","markAsDirty","deleteAccount","open","width","height","minHeight","backdropClass","afterClosed","deleteUser","paramMap","getUserById","getUser$","patchValue","logo","mailSubscribed","socialAuth","disable","group","newPassword","required","email","selectors","viewQuery","ctx","opacity"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}