{"version":3,"file":"src_app_client_services_categories_categories_service_ts-src_app_client_services_units_units_-3f9d3b.js","mappings":"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","sources":["./src/app/client/services/categories/categories.service.ts","./src/app/client/services/units/units.service.ts","./src/app/client/state/categories/categories.query.ts","./src/app/client/state/categories/categories.store.ts","./src/app/client/state/units/units.query.ts","./src/app/client/state/units/units.store.ts","./src/app/core/helpers/function/capitalize-first-letter.ts","./src/app/core/helpers/function/get-url-extension.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\n\nimport { Observable, takeWhile } from \"rxjs\";\nimport {first, map} from \"rxjs/operators\";\n\nimport {ApiService} from \"../../../core/services/api/api.service\";\nimport {CategoriesQuery} from \"../../state/categories/categories.query\";\nimport {CategoriesStore} from \"../../state/categories/categories.store\";\n\n@Injectable({\n\tprovidedIn: \"root\",\n})\nexport class CategoriesService {\n\tpublic readonly endpoint: string;\n\n\tconstructor(\n\t\tprivate readonly _apiService: ApiService,\n\t\tprivate readonly _categoriesStore: CategoriesStore,\n\t\tprivate readonly _categoriesQuery: CategoriesQuery\n\t) {\n\t\tthis.endpoint = \"categories/\";\n\t\tthis.getCategories$();\n\t}\n\n\tpublic getCategories$(): Observable<any> {\n\t\tconst { categories } = this._categoriesQuery.getValue();\n\t\tif (!categories?.categories?.length || !categories?.totalCount) {\n\t\t\tthis._apiService\n\t\t\t\t.get(this.endpoint)\n\t\t\t\t.subscribe((categories: any) => {\n\t\t\t\t\tthis._categoriesStore.update({\n\t\t\t\t\t\tcategories\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\n\t\treturn this._categoriesQuery.selectCategories$;\n\t}\n\n\tpublic getCategories(): any {\n\t\tconst {categories} = this._categoriesQuery.getValue();\n\t\tif (!categories) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this._categoriesQuery.getValue();\n\t}\n\n\tpublic updateCategory(id: any, name: any, hide: any) {\n\t\treturn this._apiService.put(`category/${id}/update`, {\n\t\t\t...(name ? { name } : {}),\n\t\t\thide,\n\t\t});\n\t}\n\n\tpublic createCategory(level1Category: any, level2Category: any, level3Category: any) {\n\t\treturn this._apiService.post(`category/create`, {\n\t\t\tcategory: {\n\t\t\t\t...level1Category,\n\t\t\t\tcategory: {\n\t\t\t\t\t...level2Category,\n\t\t\t\t\tcategory: level3Category,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic updateWikiCategory(id: any, name: any, hide: any) {\n\t\treturn this._apiService.put(`categoryPost/${id}/update`, {\n\t\t\t...(name ? { name } : {}),\n\t\t\thide: !hide,\n\t\t});\n\t}\n\n\tpublic createWikiCategory(level1Category: any, level2Category: any) {\n\t\treturn this._apiService.post(`categoryPost/create`, {\n\t\t\tcategory: {\n\t\t\t\t...level1Category,\n\t\t\t\tcategory: level2Category,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic getWikiCategories() {\n\t\tconst { wikiCategories } = this._categoriesQuery.getValue();\n\n\t\tif (!wikiCategories.length) {\n\t\t\tthis._apiService\n\t\t\t\t.get(\"categoryPosts\")\n\t\t\t\t.subscribe((response: any) => {\n\t\t\t\t\tthis._categoriesStore.update({\n\t\t\t\t\t\twikiCategories: response,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\n\t\treturn this._categoriesQuery.selectWikiCategories$;\n\t}\n\n\tpublic getCategoryNameById(categoryId: string): Observable<string> {\n\t\treturn this.getCategories$().pipe(\n\t\t\ttakeWhile(({ categories }) => !categories.length, true),\n\t\t\tmap(({ categories }) => {\n\t\t\t\tfor (const parentCategory of categories) {\n\t\t\t\t\tif (parentCategory._id === categoryId) {\n\t\t\t\t\t\treturn parentCategory.name\n\t\t\t\t\t}\n\t\t\t\t\tfor (const childCategory of parentCategory.children) {\n\t\t\t\t\t\tif (childCategory._id === categoryId) {\n\t\t\t\t\t\t\treturn childCategory.name;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n}\n","import { Injectable } from \"@angular/core\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\nimport { ApiService } from \"../../../core/services/api/api.service\";\nimport { UnitsQuery } from \"../../state/units/units.query\";\nimport { UnitsStore } from \"../../state/units/units.store\";\nimport { Observable } from \"rxjs\";\n\n@UntilDestroy()\n@Injectable({\n\tprovidedIn: \"root\",\n})\nexport class UnitsService {\n\tpublic readonly endpoint: string;\n\n\tconstructor(\n\t\tprivate readonly _apiService: ApiService,\n\t\tprivate readonly _unitsStore: UnitsStore,\n\t\tprivate readonly _unitsQuery: UnitsQuery\n\t) {\n\t\tthis.endpoint = \"units\";\n\t}\n\n\tpublic getUnits(): Observable<any> {\n\t\tconst { units } = this._unitsQuery.getValue();\n\n\t\tif (!units.length) {\n\t\t\tthis._apiService\n\t\t\t\t.get(this.endpoint)\n\t\t\t\t.pipe(untilDestroyed(this))\n\t\t\t\t.subscribe((response) => {\n\t\t\t\t\tthis._unitsStore.update({\n\t\t\t\t\t\tunits: response,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\n\t\treturn this._unitsQuery.selectUnits$;\n\t}\n}\n","import { Injectable } from \"@angular/core\";\nimport { Query } from \"@datorama/akita\";\nimport { Observable } from \"rxjs\";\nimport {CategoriesState, CategoriesStore} from \"./categories.store\";\n\n@Injectable({ providedIn: \"root\" })\nexport class CategoriesQuery extends Query<CategoriesState> {\n\tpublic readonly selectCategories$: Observable<any>;\n\tpublic readonly selectWikiCategories$: Observable<any>;\n\tconstructor(protected override store: CategoriesStore) {\n\t\tsuper(store);\n\n\t\tthis.selectCategories$ = this.select(\"categories\");\n\t\tthis.selectWikiCategories$ = this.select(\"wikiCategories\");\n\t}\n}\n","import { Injectable } from \"@angular/core\";\nimport { Store, StoreConfig } from \"@datorama/akita\";\n\nexport interface CategoriesState {\n\tcategories: any;\n\twikiCategories: any;\n}\n\nexport function createInitialState(): CategoriesState {\n\treturn {\n\t\tcategories: {\n\t\t\tcategories: [],\n\t\t\ttotalCount: 0,\n\t\t},\n\t\twikiCategories: [],\n\t};\n}\n\n@Injectable({ providedIn: \"root\" })\n@StoreConfig({ name: \"categories\" })\nexport class CategoriesStore extends Store<CategoriesState> {\n\tconstructor() {\n\t\tsuper(createInitialState());\n\t}\n}\n","import { Injectable } from \"@angular/core\";\nimport { Query } from \"@datorama/akita\";\nimport { Observable } from \"rxjs\";\nimport { UnitsState, UnitsStore } from \"./units.store\";\n\n@Injectable({ providedIn: \"root\" })\nexport class UnitsQuery extends Query<UnitsState> {\n\tpublic readonly selectUnits$: Observable<any>;\n\tconstructor(protected override store: UnitsStore) {\n\t\tsuper(store);\n\n\t\tthis.selectUnits$ = this.select(\"units\");\n\t}\n}\n","import { Injectable } from \"@angular/core\";\nimport { Store, StoreConfig } from \"@datorama/akita\";\n\nexport interface UnitsState {\n\tunits: any;\n}\n\nexport function createInitialState(): UnitsState {\n\treturn {\n\t\tunits: [],\n\t};\n}\n\n@Injectable({ providedIn: \"root\" })\n@StoreConfig({ name: \"units\" })\nexport class UnitsStore extends Store<UnitsState> {\n\tconstructor() {\n\t\tsuper(createInitialState());\n\t}\n}\n","export function capitalizeFirstLetter(string: string = ''): string {\n\treturn string.charAt(0).toUpperCase() + string.slice(1);\n}\n","export function GetUrlExtension(url: string): string {\n\tif (!url) {\n\t\treturn '';\n\t}\n\n\treturn url.split(/[#?]/)[0].split(\".\").pop()!.trim();\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}