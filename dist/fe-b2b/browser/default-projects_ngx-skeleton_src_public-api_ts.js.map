{"version":3,"file":"default-projects_ngx-skeleton_src_public-api_ts.js","mappings":"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","sources":["./projects/ngx-skeleton/src/lib/layout/ngx-skeleton.component.ts","./projects/ngx-skeleton/src/lib/layout/ngx-skeleton.component.html","./projects/ngx-skeleton/src/lib/ngx-skeleton.module.ts","./projects/ngx-skeleton/src/public-api.ts","./node_modules/perf-marks/dist/es2015/is-nodejs-env.js","./node_modules/perf-marks/dist/es2015/is-performance-observable-supported.js","./node_modules/perf-marks/dist/es2015/is-user-timing-api-supported.js","./node_modules/perf-marks/dist/es2015/marks.js","./node_modules/ngx-skeleton-loader/fesm2015/ngx-skeleton-loader.mjs"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport {NgxSkeletonLoaderConfig} from \"ngx-skeleton-loader/lib/ngx-skeleton-loader-config.types\";\n\n@Component({\n\tselector: \"b2b-ngx-skeleton\",\n\ttemplateUrl: \"./ngx-skeleton.component.html\",\n\tstyleUrls: [\"./ngx-skeleton.component.scss\"],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class B2bNgxSkeletonComponent {\n\t@Input() public option: Partial<NgxSkeletonLoaderConfig>;\n}\n","<ngx-skeleton-loader\n\t[count]=\"option.count\"\n\t[appearance]=\"option.appearance ?? ''\"\n\t[theme]=\"option.theme\"\n\t[animation]=\"option.animation\"></ngx-skeleton-loader>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { B2bNgxSkeletonComponent } from \"./layout/ngx-skeleton.component\";\nimport { NgxSkeletonLoaderModule } from \"ngx-skeleton-loader\";\n\n@NgModule({\n\timports: [CommonModule, NgxSkeletonLoaderModule],\n\tdeclarations: [B2bNgxSkeletonComponent],\n\texports: [B2bNgxSkeletonComponent],\n})\nexport class B2bNgxSkeletonModule {}\n","/*\n * Public API Surface of ngx-skeleton\n */\n\n\nexport * from './lib/ngx-skeleton.module';\nexport * from './lib/layout/ngx-skeleton.component';\n","/**\n * Boolean with the result of the check if package\n * is running on the browser or in a NodeJS environment\n *\n * @returns boolean\n *\n */\nconst isNodeJSEnv = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n// Interesting fact:\n// Some bundlers are resolving `process`, so it needs to check for process.release.name\n// since it's a NodeJS only environment value.\n// More details in https://nodejs.org/api/process.html#process_process_release\nexport { isNodeJSEnv };\n","/**\n * Boolean with the result of the check if PerformanceObservable\n * is supported for the current browser/NodeJS version\n *\n * @returns boolean\n *\n */\nconst isPerformanceObservableSupported = typeof PerformanceObserver !== 'undefined' &&\n    // eslint-disable-next-line compat/compat\n    typeof PerformanceObserver.prototype !== 'undefined' &&\n    // eslint-disable-next-line compat/compat\n    typeof PerformanceObserver.prototype.constructor === 'function';\nexport { isPerformanceObservableSupported };\n","/**\n * Boolean with the result of the check if User Timing API\n * is supported for the current browser/NodeJS version\n *\n * @returns boolean\n *\n */\nconst isUserTimingAPISupported = typeof performance !== 'undefined' &&\n    typeof performance.now !== 'undefined' &&\n    typeof performance.mark === 'function' &&\n    typeof performance.measure === 'function' &&\n    (typeof performance.clearMarks === 'function' || typeof performance.clearMeasures === 'function');\nexport { isUserTimingAPISupported };\n","import { isUserTimingAPISupported } from './is-user-timing-api-supported';\nimport { isPerformanceObservableSupported } from './is-performance-observable-supported';\nimport { isNodeJSEnv } from './is-nodejs-env';\n// Map() is not used in order to decrease the bundle\nlet marksMap = {};\nlet marksObserver = {};\n/**\n * Get the current time based on User Timing API or Date\n *\n * @returns number\n *\n */\nconst getTimeNow = () => (isUserTimingAPISupported ? performance.now() : Date.now());\n/**\n * Clear marks and measure of performance event\n *\n * @param markName - Performance marker to be checked\n *\n * @returns void\n *\n */\nconst clear = (markName) => {\n    marksMap[markName] = undefined;\n    // Removes PerformanceObserver references from memory\n    if (!!marksObserver[markName]) {\n        marksObserver[markName] = undefined;\n    }\n    if (!isUserTimingAPISupported) {\n        return;\n    }\n    // Some versions of NodeJS doesn't support this method\n    if (!isNodeJSEnv) {\n        performance.clearMeasures(markName);\n    }\n    performance.clearMarks(markName);\n};\n/**\n * Start performance measure of event\n *\n * @param markName - Performance marker to be started\n *\n * @returns number\n *\n */\nconst start = (markName) => {\n    if (isUserTimingAPISupported) {\n        if (isNodeJSEnv && isPerformanceObservableSupported) {\n            // eslint-disable-next-line compat/compat\n            const obs = new PerformanceObserver(list => {\n                marksObserver[markName] = list.getEntries().find(f => f.name === markName);\n                obs.disconnect();\n            });\n            obs.observe({ entryTypes: ['measure'] });\n        }\n        performance.mark(markName);\n    }\n    marksMap[markName] = getTimeNow();\n};\n/**\n * Finishes performance measure of event and\n * clear marks and measure if applicable\n *\n * @param markName - Performance marker to be checked\n * @param markNameToCompare - Optional mark to compare to\n *\n * @returns PerfMarksPerformanceEntry\n *\n */\nconst end = (markName, markNameToCompare) => {\n    try {\n        const startTime = marksMap[markName];\n        if (!isUserTimingAPISupported) {\n            return startTime\n                ? { duration: getTimeNow() - startTime, startTime, entryType: 'measure', name: markName }\n                : {};\n        }\n        // If there's no User Timing mark to be compared with,\n        // the package will create one to be used for better comparison\n        if (!markNameToCompare) {\n            performance.mark(`${markName}-end`);\n        }\n        performance.measure(markName, markName, markNameToCompare || `${markName}-end`);\n        if (isNodeJSEnv) {\n            if (!!marksObserver[markName]) {\n                return marksObserver[markName];\n            }\n            return startTime\n                ? { duration: getTimeNow() - startTime, startTime, entryType: 'measure', name: markName }\n                : {};\n        }\n        const entry = performance.getEntriesByName(markName).pop();\n        return entry || {};\n    }\n    catch (e) {\n        // If previous mark was missing for some reason, this will throw.\n        // This could only happen if something in event loop crashed\n        // in an unexpected place earlier.\n        // Don't pile on with more errors.\n        return {};\n    }\n    finally {\n        // Clear marks immediately to avoid growing buffer.\n        clear(markName);\n        // Clear marks used for comparison in case of it's value was passed\n        // If the mark to compare is not passed, it should remove the one we create with `-end` suffix\n        clear(markNameToCompare || `${markName}-end`);\n    }\n};\n/**\n * Clear all marks and measures of performance event\n *\n * @returns void\n *\n */\nconst clearAll = () => {\n    marksMap = {};\n    marksObserver = {};\n    if (!isUserTimingAPISupported) {\n        return;\n    }\n    // Some versions of NodeJS doesn't support this method\n    if (!isNodeJSEnv) {\n        performance.clearMeasures();\n    }\n    performance.clearMarks();\n};\nexport { start, end, clear, clearAll, isUserTimingAPISupported, isPerformanceObservableSupported };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, Component, ChangeDetectionStrategy, Inject, Optional, Input, NgModule } from '@angular/core';\nimport { start, end } from 'perf-marks/marks';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nconst NGX_SKELETON_LOADER_CONFIG = new InjectionToken('ngx-skeleton-loader.config');\n\nclass NgxSkeletonLoaderComponent {\n    constructor(config) {\n        this.config = config;\n        const { appearance = 'line', animation = 'progress', theme = null, loadingText = 'Loading...', count = 1, ariaLabel = 'loading', } = config || {};\n        this.appearance = appearance;\n        this.animation = animation;\n        this.theme = theme;\n        this.loadingText = loadingText;\n        this.count = count;\n        this.items = [];\n        this.ariaLabel = ariaLabel;\n    }\n    ngOnInit() {\n        start('NgxSkeletonLoader:Rendered');\n        start('NgxSkeletonLoader:Loaded');\n        this.validateInputValues();\n    }\n    validateInputValues() {\n        var _a, _b;\n        // Checking if it's receiving a numeric value (string having ONLY numbers or if it's a number)\n        if (!/^\\d+$/.test(`${this.count}`)) {\n            // Shows error message only in Development\n            if (isDevMode()) {\n                console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'count' a numeric value. Forcing default to \"1\".`);\n            }\n            this.count = 1;\n        }\n        //Force count to 1 when custom-content is used\n        if (this.appearance === 'custom-content') {\n            // Shows error message only in Development\n            if (isDevMode() && this.count !== 1) {\n                console.error(`\\`NgxSkeletonLoaderComponent\\` enforces elements with \"custom-content\" appearance as DOM nodes. Forcing \"count\" to \"1\".`);\n                this.count = 1;\n            }\n        }\n        this.items.length = this.count;\n        const allowedAnimations = ['progress', 'progress-dark', 'pulse', 'false'];\n        if (allowedAnimations.indexOf(String(this.animation)) === -1) {\n            // Shows error message only in Development\n            if (isDevMode()) {\n                console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'animation' as: ${allowedAnimations.join(', ')}. Forcing default to \"progress\".`);\n            }\n            this.animation = 'progress';\n        }\n        if (['circle', 'line', 'custom-content', ''].indexOf(String(this.appearance)) === -1) {\n            // Shows error message only in Development\n            if (isDevMode()) {\n                console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'appearance' as: circle or line or custom-content or empty string. Forcing default to \"''\".`);\n            }\n            this.appearance = '';\n        }\n        if (Boolean((_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.theme) === null || _b === void 0 ? void 0 : _b.extendsFromRoot) && this.theme !== null) {\n            // Shows error message only in Development\n            this.theme = Object.assign(Object.assign({}, this.config.theme), this.theme);\n        }\n    }\n    ngOnChanges(changes) {\n        // Avoiding multiple calls for the same input in case there's no changes in the fields\n        // Checking if the fields that require validation are available and if they were changed\n        // In case were not changed, we stop the function. Otherwise, `validateInputValues` will be called.\n        if (['count', 'animation', 'appearance'].find(key => changes[key] && (changes[key].isFirstChange() || changes[key].previousValue === changes[key].currentValue))) {\n            return;\n        }\n        this.validateInputValues();\n    }\n    ngAfterViewInit() {\n        end('NgxSkeletonLoader:Rendered');\n    }\n    ngOnDestroy() {\n        end('NgxSkeletonLoader:Loaded');\n    }\n}\n/** @nocollapse */ NgxSkeletonLoaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NgxSkeletonLoaderComponent, deps: [{ token: NGX_SKELETON_LOADER_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ NgxSkeletonLoaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: NgxSkeletonLoaderComponent, selector: \"ngx-skeleton-loader\", inputs: { count: \"count\", loadingText: \"loadingText\", appearance: \"appearance\", animation: \"animation\", ariaLabel: \"ariaLabel\", theme: \"theme\" }, usesOnChanges: true, ngImport: i0, template: \"<div\\n  *ngFor=\\\"let item of items\\\"\\n  class=\\\"skeleton-loader\\\"\\n  [attr.aria-label]=\\\"ariaLabel\\\"\\n  aria-busy=\\\"true\\\"\\n  aria-valuemin=\\\"0\\\"\\n  aria-valuemax=\\\"100\\\"\\n  [attr.aria-valuetext]=\\\"loadingText\\\"\\n  role=\\\"progressbar\\\"\\n  tabindex=\\\"0\\\"\\n  [ngClass]=\\\"{\\n  'custom-content': appearance === 'custom-content',\\n  circle: appearance === 'circle',\\n    progress: animation === 'progress',\\n    'progress-dark': animation === 'progress-dark',\\n    pulse: animation === 'pulse'\\n  }\\\"\\n  [ngStyle]=\\\"theme\\\"\\n>\\n  <ng-content *ngIf=\\\"appearance  === 'custom-content'\\\"></ng-content>\\n</div>\\n\\n\\n\\n\\n\", styles: [\".skeleton-loader{box-sizing:border-box;overflow:hidden;position:relative;background:rgb(239,241,246) no-repeat;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.skeleton-loader:after,.skeleton-loader:before{box-sizing:border-box}.skeleton-loader.circle{width:40px;height:40px;margin:5px;border-radius:50%}.skeleton-loader.progress,.skeleton-loader.progress-dark{transform:translateZ(0)}.skeleton-loader.progress:after,.skeleton-loader.progress:before,.skeleton-loader.progress-dark:after,.skeleton-loader.progress-dark:before{box-sizing:border-box}.skeleton-loader.progress:before,.skeleton-loader.progress-dark:before{animation:progress 2s ease-in-out infinite;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\\\"\\\"}.skeleton-loader.progress:before{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.skeleton-loader.progress-dark:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.skeleton-loader.pulse{animation:pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;animation-delay:.5s}.skeleton-loader.custom-content{height:100%;background:none}@media (prefers-reduced-motion: reduce){.skeleton-loader.pulse,.skeleton-loader.progress-dark,.skeleton-loader.custom-content,.skeleton-loader.progress{animation:none}.skeleton-loader.progress,.skeleton-loader.progress-dark,.skeleton-loader.custom-content{background-image:none}}@keyframes progress{0%{transform:translate3d(-200px,0,0)}to{transform:translate3d(calc(200px + 100vw),0,0)}}@keyframes pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NgxSkeletonLoaderComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-skeleton-loader', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\n  *ngFor=\\\"let item of items\\\"\\n  class=\\\"skeleton-loader\\\"\\n  [attr.aria-label]=\\\"ariaLabel\\\"\\n  aria-busy=\\\"true\\\"\\n  aria-valuemin=\\\"0\\\"\\n  aria-valuemax=\\\"100\\\"\\n  [attr.aria-valuetext]=\\\"loadingText\\\"\\n  role=\\\"progressbar\\\"\\n  tabindex=\\\"0\\\"\\n  [ngClass]=\\\"{\\n  'custom-content': appearance === 'custom-content',\\n  circle: appearance === 'circle',\\n    progress: animation === 'progress',\\n    'progress-dark': animation === 'progress-dark',\\n    pulse: animation === 'pulse'\\n  }\\\"\\n  [ngStyle]=\\\"theme\\\"\\n>\\n  <ng-content *ngIf=\\\"appearance  === 'custom-content'\\\"></ng-content>\\n</div>\\n\\n\\n\\n\\n\", styles: [\".skeleton-loader{box-sizing:border-box;overflow:hidden;position:relative;background:rgb(239,241,246) no-repeat;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.skeleton-loader:after,.skeleton-loader:before{box-sizing:border-box}.skeleton-loader.circle{width:40px;height:40px;margin:5px;border-radius:50%}.skeleton-loader.progress,.skeleton-loader.progress-dark{transform:translateZ(0)}.skeleton-loader.progress:after,.skeleton-loader.progress:before,.skeleton-loader.progress-dark:after,.skeleton-loader.progress-dark:before{box-sizing:border-box}.skeleton-loader.progress:before,.skeleton-loader.progress-dark:before{animation:progress 2s ease-in-out infinite;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\\\"\\\"}.skeleton-loader.progress:before{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.skeleton-loader.progress-dark:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.skeleton-loader.pulse{animation:pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;animation-delay:.5s}.skeleton-loader.custom-content{height:100%;background:none}@media (prefers-reduced-motion: reduce){.skeleton-loader.pulse,.skeleton-loader.progress-dark,.skeleton-loader.custom-content,.skeleton-loader.progress{animation:none}.skeleton-loader.progress,.skeleton-loader.progress-dark,.skeleton-loader.custom-content{background-image:none}}@keyframes progress{0%{transform:translate3d(-200px,0,0)}to{transform:translate3d(calc(200px + 100vw),0,0)}}@keyframes pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [NGX_SKELETON_LOADER_CONFIG]\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { count: [{\n                type: Input\n            }], loadingText: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }], animation: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }] } });\n\nclass NgxSkeletonLoaderModule {\n    static forRoot(config) {\n        return {\n            ngModule: NgxSkeletonLoaderModule,\n            providers: [{ provide: NGX_SKELETON_LOADER_CONFIG, useValue: config }],\n        };\n    }\n}\n/** @nocollapse */ NgxSkeletonLoaderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NgxSkeletonLoaderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ NgxSkeletonLoaderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: NgxSkeletonLoaderModule, declarations: [NgxSkeletonLoaderComponent], imports: [CommonModule], exports: [NgxSkeletonLoaderComponent] });\n/** @nocollapse */ NgxSkeletonLoaderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NgxSkeletonLoaderModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NgxSkeletonLoaderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NgxSkeletonLoaderComponent],\n                    imports: [CommonModule],\n                    exports: [NgxSkeletonLoaderComponent],\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-skeleton-loader\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NGX_SKELETON_LOADER_CONFIG, NgxSkeletonLoaderComponent, NgxSkeletonLoaderModule };\n//# sourceMappingURL=ngx-skeleton-loader.mjs.map\n"],"names":["isNodeJSEnv","Object","prototype","toString","call","process","isPerformanceObservableSupported","PerformanceObserver","constructor","isUserTimingAPISupported","performance","now","mark","measure","clearMarks","clearMeasures","marksMap","marksObserver","getTimeNow","Date","clear","markName","undefined","start","obs","list","getEntries","find","f","name","disconnect","observe","entryTypes","end","markNameToCompare","startTime","duration","entryType","entry","getEntriesByName","pop","e","clearAll","i0","InjectionToken","isDevMode","Component","ChangeDetectionStrategy","Inject","Optional","Input","NgModule","i1","CommonModule","NGX_SKELETON_LOADER_CONFIG","NgxSkeletonLoaderComponent","config","appearance","animation","theme","loadingText","count","ariaLabel","items","ngOnInit","validateInputValues","_a","_b","test","console","error","length","allowedAnimations","indexOf","String","join","Boolean","extendsFromRoot","assign","ngOnChanges","changes","key","isFirstChange","previousValue","currentValue","ngAfterViewInit","ngOnDestroy","ɵfac","ɵcmp","NgClass","NgForOf","NgIf","NgStyle","type","args","selector","changeDetection","OnPush","template","styles","decorators","NgxSkeletonLoaderModule","forRoot","ngModule","providers","provide","useValue","ɵmod","ɵinj","declarations","imports","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[4,5,6,7,8]}