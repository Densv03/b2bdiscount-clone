{"version":3,"file":"src_app_auth_pages_auth-register-individual-account_auth-register-individual-account_module_ts.js","mappings":"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","sources":["./projects/ngx-country-select/src/lib/ngx-country-select.module.ts","./projects/ngx-select/src/lib/ngx-select.module.ts","./src/app/auth/pages/auth-register-individual-account-first-step/auth-register-individual-account-first-step.component.ts","./src/app/auth/pages/auth-register-individual-account-first-step/auth-register-individual-account-first-step.component.html","./src/app/auth/pages/auth-register-individual-account-second-step/auth-register-individual-account-second-step.component.ts","./src/app/auth/pages/auth-register-individual-account-second-step/auth-register-individual-account-second-step.component.html","./src/app/auth/pages/auth-register-individual-account/auth-register-individual-account-routing.module.ts","./src/app/auth/pages/auth-register-individual-account/auth-register-individual-account.module.ts","./src/app/auth/pages/auth-register-individual-account/layout/auth-register-individual-account.component.ts","./src/app/auth/pages/auth-register-individual-account/layout/auth-register-individual-account.component.html","./src/app/core/helpers/validator/full-name.ts","./src/app/core/helpers/validator/only -latin-numbers-symbols.ts","./src/app/core/helpers/validator/only-latin.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { B2bNgxCountrySelectComponent } from \"../lib/layout/ngx-country-select.component\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\nimport { B2bNgxIconModule } from \"@b2b/ngx-icon\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { B2bNgxImageModule } from \"@b2b/ngx-image\";\n\n@NgModule({\n\timports: [CommonModule, ReactiveFormsModule, B2bNgxIconModule, B2bNgxImageModule, NgSelectModule],\n\tdeclarations: [B2bNgxCountrySelectComponent],\n\texports: [B2bNgxCountrySelectComponent],\n})\nexport class B2bNgxCountrySelectModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { B2bNgxSelectComponent } from \"./layout/ngx-select.component\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\n@NgModule({\n\timports: [CommonModule, NgSelectModule, ReactiveFormsModule],\n\tdeclarations: [B2bNgxSelectComponent],\n\texports: [B2bNgxSelectComponent],\n})\nexport class B2bNgxSelectModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { animate, style, transition, trigger } from \"@angular/animations\";\nimport {FormBuilder, Validators} from \"@angular/forms\";\n\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { filter, Observable } from \"rxjs\";\nimport { first, map, switchMap } from \"rxjs/operators\";\n\n// import { FormBuilder } from \"@ngneat/reactive-forms\";\n\nimport { B2bNgxInputThemeEnum } from \"@b2b/ngx-input\";\nimport { B2bNgxButtonThemeEnum } from \"@b2b/ngx-button\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\nimport { AuthService } from \"../../services/auth/auth.service\";\nimport { FirstStepDataModel } from \"../auth-register-individual-account/shared/first-step-data.model\";\nimport { BrowserStorageKeysEnum} from \"../../../client/shared/enums/browser-storage-keys.enum\";\n\n@UntilDestroy()\n@Component({\n\tselector: \"b2b-auth-register-individual-account-first-step\",\n\ttemplateUrl: \"./auth-register-individual-account-first-step.component.html\",\n\tstyleUrls: [\"./auth-register-individual-account-first-step.component.scss\"],\n\tanimations: [\n\t\ttrigger(\"fadeInOut\", [\n\t\t\ttransition(\":enter\", [\n\t\t\t\t// :enter is alias to 'void => *'\n\t\t\t\tstyle({opacity: 0}),\n\t\t\t\tanimate(500, style({opacity: 1})),\n\t\t\t]),\n\t\t\ttransition(\":leave\", [\n\t\t\t\t// :leave is alias to '* => void'\n\t\t\t\tanimate(500, style({opacity: 0})),\n\t\t\t]),\n\t\t]),\n\t],\n})\nexport class AuthRegisterIndividualAccountFirstStepComponent implements OnInit {\n\tpublic b2bNgxInputThemeEnum = B2bNgxInputThemeEnum;\n\tpublic b2bNgxButtonThemeEnum = B2bNgxButtonThemeEnum;\n\n\tpublic form: any = this.fb.group({\n\t\temail: [\"\", [Validators.required, Validators.email]],\n\t\tpassword: [\"\", [Validators.required, Validators.minLength(8)]],\n\t});\n\tpublic isNextStepDisabled$: Observable<boolean> = this.form.status$.pipe(map((data) => data === \"INVALID\"));\n\n\tprivate parsingCompanyName: string = '';\n\n\tconstructor(\n\t\tprivate readonly router: Router,\n\t\tprivate readonly route: ActivatedRoute,\n\t\tprivate readonly fb: FormBuilder,\n\t\tprivate readonly authService: AuthService\n\t) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.detectParsingCompanyEmail();\n\t\tthis.detectUrlParamsEmail();\n\t}\n\n\tpublic secondStep() {\n\t\tthis.saveUserData();\n\t\tthis.router.navigate([\"../second-step\"], {relativeTo: this.route});\n\t}\n\n\tprivate detectUrlParamsEmail(): void {\n\t\tthis.route.queryParams\n\t\t\t.pipe(\n\t\t\t\tmap((data: any) => data.email),\n\t\t\t\tfirst())\n\t\t\t.subscribe((email: string) => {\n\t\t\t\tthis.form.patchValue({\n\t\t\t\t\temail\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\tprivate detectParsingCompanyEmail(): void {\n\t\tthis.form\n\t\t\t.get(\"email\")\n\t\t\t.valueChanges.pipe(\n\t\t\tuntilDestroyed(this),\n\t\t\tfilter(() => this.form.get(\"email\").valid),\n\t\t\tswitchMap((email: any) => {\n\t\t\t\treturn this.authService.getPreregisteredCompanyInformation(email);\n\t\t\t})\n\t\t)\n\t\t\t.pipe(\n\t\t\t\tfilter((data: any) => data.company !== undefined),\n\t\t\t\tmap((data: any) => data.company)\n\t\t\t)\n\t\t\t.subscribe(({companyName}: any) => (this.parsingCompanyName = companyName));\n\t}\n\n\tprivate saveUserData(): void {\n\t\tconst firstStepData: FirstStepDataModel = {\n\t\t\temail: this.form.value[\"email\"],\n\t\t\tpassword: this.form.value[\"password\"],\n\t\t\tcompanyName: this.parsingCompanyName,\n\t\t};\n\n\t\tlocalStorage.setItem(BrowserStorageKeysEnum.FIRST_STEP_DATA, JSON.stringify(firstStepData));\n\t}\n}\n","<div>\n\t<div class=\"security-data\" [formGroup]=\"form\">\n\t\t<input\n\t\t\tb2bNgxInput\n\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"\n\t\t\t[label]=\"'LABELS.EMAIL' | translate\"\n\t\t\tlabelClass=\"auth-register-individual-account__main-input\"\n\t\t\tformControlName=\"email\"\n\t\t\t[placeholder]=\"'PLACEHOLDERS.YOUR_EMAIL' | translate\" />\n\t\t<input\n\t\t\tb2bNgxInput\n\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"\n\t\t\ttype=\"password\"\n\t\t\tautocomplete=\"new-password\"\n\t\t\t[label]=\"'LABELS.PASSWORD' | translate\"\n\t\t\tlabelClass=\"auth-register-individual-account__main-input\"\n\t\t\tformControlName=\"password\"\n\t\t\t[placeholder]=\"'PLACEHOLDERS.CREATE_PASSWORD' | translate\" />\n\t\t<!--    <p-->\n\t\t<!--      [@fadeInOut]-->\n\t\t<!--      class=\"auth-register-individual-account__main-input-error\"-->\n\t\t<!--      *ngIf=\"formGroup.get('securityData').get('password').errors?.password\">-->\n\t\t<!--      Create password  more than 8 symbols-->\n\t\t<!--    </p>-->\n\t</div>\n\t<button\n\t\t(click)=\"secondStep()\"\n\t\tb2bNgxButton\n\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLACK\"\n\t\t[disabled]=\"isNextStepDisabled$ | async\"\n\t\tclass=\"auth-register-individual-account__create-account-button\">\n\t\t{{ \"BUTTONS.NEXT_STEP\" | translate }}\n\t</button>\n</div>\n","import { ChangeDetectorRef, Component, OnInit } from \"@angular/core\";\nimport { B2bNgxInputThemeEnum } from \"@b2b/ngx-input\";\nimport { B2bNgxSelectThemeEnum } from \"@b2b/ngx-select\";\nimport {catchError, filter, first, map, tap} from \"rxjs/operators\";\nimport { AuthService } from \"../../services/auth/auth.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport {Observable, throwError} from \"rxjs\";\n// import { FormBuilder, FormGroup } from \"@ngneat/reactive-forms\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport { fullName } from \"../../../core/helpers/validator/full-name\";\nimport { onlyLatin } from \"../../../core/helpers/validator/only-latin\";\nimport { B2bNgxLinkService, B2bNgxLinkThemeEnum } from \"@b2b/ngx-link\";\nimport { B2bNgxButtonThemeEnum } from \"@b2b/ngx-button\";\nimport { animate, style, transition, trigger } from \"@angular/animations\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport { HotToastService } from \"@ngneat/hot-toast\";\nimport { FirstStepDataModel } from \"../auth-register-individual-account/shared/first-step-data.model\";\nimport { BrowserStorageKeysEnum} from \"../../../client/shared/enums/browser-storage-keys.enum\";\nimport {onlyLatinAndNumberAndSymbols} from \"../../../core/helpers/validator/only -latin-numbers-symbols\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Component({\n\tselector: \"b2b-auth-register-individual-account-second-step\",\n\ttemplateUrl: \"./auth-register-individual-account-second-step.component.html\",\n\tstyleUrls: [\"./auth-register-individual-account-second-step.component.scss\"],\n\tanimations: [\n\t\ttrigger(\"fadeInOut\", [\n\t\t\ttransition(\":enter\", [\n\t\t\t\t// :enter is alias to 'void => *'\n\t\t\t\tstyle({ opacity: 0 }),\n\t\t\t\tanimate(500, style({ opacity: 1 })),\n\t\t\t]),\n\t\t\ttransition(\":leave\", [\n\t\t\t\t// :leave is alias to '* => void'\n\t\t\t\tanimate(500, style({ opacity: 0 })),\n\t\t\t]),\n\t\t]),\n\t],\n})\nexport class AuthRegisterIndividualAccountSecondStepComponent implements OnInit {\n\tpublic form: FormGroup = this.getFormGroup();\n\tpublic b2bNgxInputThemeEnum = B2bNgxInputThemeEnum;\n\tpublic b2bNgxSelectThemeEnum = B2bNgxSelectThemeEnum;\n\tpublic b2bNgxLinkThemeEnum = B2bNgxLinkThemeEnum;\n\tpublic b2bNgxButtonThemeEnum = B2bNgxButtonThemeEnum;\n\tpublic roles$ = this.getRoles();\n\tpublic availableRoles: any[] = [];\n\tprivate firstStepDataObj: FirstStepDataModel;\n\tconstructor(\n\t\tprivate authService: AuthService,\n\t\tprivate translateService: TranslateService,\n\t\tprivate dialog: MatDialog,\n\t\tprivate fb: FormBuilder,\n\t\tpublic b2bNgxLinkService: B2bNgxLinkService,\n\t\tprivate router: Router,\n\t\tprivate activatedRoute: ActivatedRoute,\n\t\tprivate hotToastrService: HotToastService,\n\t\tprivate changeDetectorRef: ChangeDetectorRef\n\t) {\n\t\tthis.firstStepDataObj = JSON.parse(localStorage.getItem(BrowserStorageKeysEnum.FIRST_STEP_DATA)!);\n\t}\n\n\tngOnInit() {\n\t\tif (this.firstStepDataObj?.companyName !== undefined && this.firstStepDataObj?.companyName !== null) {\n\t\t\tthis.form.get(\"company\")?.setValue(this.firstStepDataObj.companyName);\n\t\t}\n\t}\n\n\tpublic getRoles(): Observable<any[]> {\n\t\treturn this.authService.getRoles().pipe(\n\t\t\tmap((roles) =>\n\t\t\t\troles.map((role) => {\n\t\t\t\t\tconst roleName = this.translateService.instant(`ROLES.${role.name.toUpperCase()}_NAME`);\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...role,\n\t\t\t\t\t\tdescription: this.translateService.instant(`ROLES.${role.name.toUpperCase()}`),\n\t\t\t\t\t\tdisplayName: roleName.charAt(0).toUpperCase() + roleName.slice(1),\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t),\n\t\t\ttap((roles) => (this.availableRoles = roles)),\n\t\t\tmap((roles) => [roles[2], roles[3], roles[1], roles[0]])\n\t\t);\n\t}\n\n\tpublic async registerWithForm(formGroup: FormGroup) {\n\t\tif (formGroup.invalid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { email, password } = this.firstStepDataObj;\n\n\t\tconst body: any = { email, password, ...formGroup.value, preferences: formGroup.value.categories };\n\n\t\tif (localStorage.getItem('ref')) {\n\t\t\tbody.refId = localStorage.getItem('ref')\n\t\t}\n\n\n\t\ttry {\n\t\t\tthis.authService\n\t\t\t\t.registerWithForm({ ...body, passwordConfirm: password, password, email })\n\t\t\t\t.pipe(\n\t\t\t\t\tcatchError((er) => {\n\t\t\t\t\t\tthis.hotToastrService.show(\n\t\t\t\t\t\t\t`This email ${formGroup.get(\"securityData\")?.get(\"email\")?.value} is already registered.`,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdismissible: true,\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tborder: \"1px solid #E63D3D\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tautoClose: false,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn throwError(er);\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.subscribe(async (val) => {\n\t\t\t\t\tthis.authService.updateToken(val.token);\n\t\t\t\t\tthis.authService.initUser();\n\t\t\t\t\tawait this.router.navigateByUrl(`/email-verify?email=${email}`);\n\t\t\t\t});\n\t\t} catch (err: any) {\n\t\t\tconst { code } = err.error;\n\t\t\tif (code === 1002) {\n\t\t\t\t// this.form.get('securityData').get('email').setErrors({ 1002: true });\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getFormGroup(): FormGroup {\n\t\treturn this.fb.group({\n\t\t\tcompany: [\"\", [onlyLatinAndNumberAndSymbols(), Validators.required]],\n\t\t\tfullName: [\"\", [Validators.required, fullName(), onlyLatin()]],\n\t\t\tphone: [\"\", [Validators.required]],\n\t\t\ttermsAndConditions: [null, Validators.required],\n\t\t\tcategories: [[], Validators.required],\n\t\t\troleId: [null, Validators.required],\n\t\t\tcountry: [null, Validators.required],\n\t\t\tpreferences: [[]],\n\t\t});\n\t}\n\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"registerWithForm(form)\">\n\t<input\n\t\ttype=\"text\"\n\t\tid=\"fullName\"\n\t\tname=\"fullName\"\n\t\tb2bNgxInput\n\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"\n\t\t[label]=\"'LABELS.FULL_NAME' | translate\"\n\t\tlabelClass=\"auth-register-individual-account__main-input\"\n\t\t[placeholder]=\"'PLACEHOLDERS.YOUR_FULL_NAME' | translate\"\n\t\tformControlName=\"fullName\" />\n\t<p\n\t\t[@fadeInOut]\n\t\tclass=\"auth-register-individual-account__main-input-error\"\n\t\t*ngIf=\"form.get('fullName')?.errors?.['fullName']\">\n\t\t{{ \"ERRORS.USER_ENGLISH_NAME\" | translate }}\n\t</p>\n\t<p\n\t\t[@fadeInOut]\n\t\tclass=\"auth-register-individual-account__main-input-error\"\n\t\t*ngIf=\"form.get('fullName')?.errors?.['latin'] && !form.get('fullName')?.errors?.['fullName']\">\n\t\t{{ \"ERRORS.USER_ENGLISH_LETTERS\" | translate }}\n\t</p>\n\n<!--\t<b2b-ngx-tel-->\n<!--\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"-->\n<!--\t\tclass=\"auth-register-individual-account__main-input\"-->\n<!--\t\t[placeholder]=\"t('PLACEHOLDERS.YOUR_PHONE_NUMBER')\"-->\n<!--\t\t[errors]=\"form.get('phone').errors\"-->\n<!--\t\tformControlName=\"phone\"-->\n<!--\t\t>{{ t(\"LABELS.PHONE\") }}</b2b-ngx-tel-->\n<!--\t>-->\n\t<input\n\t\ttype=\"company\"\n\t\tid=\"company\"\n\t\tname=\"company\"\n\t\tb2bNgxInput\n\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"\n\t\t[label]=\"'LABELS.COMPANY_NAME' | translate\"\n\t\tlabelClass=\"auth-register-individual-account__main-input\"\n\t\t[placeholder]=\"'PLACEHOLDERS.COMPANY_NAME' | translate\"\n\t\tformControlName=\"company\" />\n\t<p [@fadeInOut] class=\"auth-register-individual-account__main-input-error\" *ngIf=\"form.get('company')?.errors?.['latin']\">\n\t\t{{ \"ERRORS.USER_ENGLISH_LETTERS\" | translate }}\n\t</p>\n\n\t<b2b-ngx-country-select\n\t\t[theme]=\"b2bNgxSelectThemeEnum.BACKGROUND_GRAY\"\n\t\tclass=\"auth-register-individual-account__main-input\"\n\t\tplaceholder=\"Select Country\"\n\t\tformControlName=\"country\"\n\t\t>Company’s country\n\t</b2b-ngx-country-select>\n\t<ng-container *ngIf=\"roles$ | async as roles\">\n    <b2b-ngx-select\n      [options]=\"roles\"\n      bindValue=\"_id\"\n      bindLabel=\"displayName\"\n      class=\"auth-register-individual-account__main-input\"\n      placeholder=\"Select\"\n      [theme]=\"b2bNgxSelectThemeEnum.BACKGROUND_GRAY\"\n      formControlName=\"roleId\"\n    >Type of business\n    </b2b-ngx-select>\n  </ng-container>\n<!--\t<b2b-categories-dialog-->\n<!--\t\tclass=\"auth-register-individual-account__main-input\"-->\n<!--\t\tformControlName=\"categories\"-->\n<!--\t\t[theme]=\"b2bNgxSelectThemeEnum.BACKGROUND_GRAY\"-->\n<!--\t\tplaceholder=\"What product do you deal with?\">-->\n<!--\t\tCategory-->\n<!--\t</b2b-categories-dialog>-->\n\n\t<ng-template let-error let-text=\"text\" #tpl>\n\t\t<label class=\"control-error\">{{ \"ERRORS.TERMS_CONDITIONS\" | translate }}</label>\n\t</ng-template>\n\t<b2b-ngx-checkbox\n\t\tclass=\"auth-register-individual-account__main-checkbox\"\n\t\t[errors]=\"form.controls['termsAndConditions']!.errors \"\n\t\tformControlName=\"termsAndConditions\"\n\t\t>{{ \"AUTH.AGREE\" | translate }}\n\t\t<a\n\t\t\tb2bNgxLink\n\t\t\t[theme]=\"b2bNgxLinkThemeEnum.TEXT_BLUE\"\n\t\t\t[routerLink]=\"b2bNgxLinkService.getLink('/terms-and-conditions') | async\"\n\t\t\t>terms & conditions</a\n\t\t>\n\t\tand\n\t\t<a\n\t\t\tb2bNgxLink\n\t\t\t[theme]=\"b2bNgxLinkThemeEnum.TEXT_BLUE\"\n\t\t\t[routerLink]=\"b2bNgxLinkService.getLink('/privacy-policy') | async\"\n\t\t\t>privacy policy</a\n\t\t></b2b-ngx-checkbox>\n\t<button\n\t\tb2bNgxButton\n\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLACK\"\n\t\tclass=\"auth-register-individual-account__create-account-button\"\n\t\ttype=\"submit\">\n\t\t{{ \"BUTTONS.CREATE_ACCOUNT\" | translate }}\n\t</button>\n</form>\n","import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\n\nconst routes: Routes = [];\n\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule],\n})\nexport class AuthRegisterIndividualAccountRoutingModule {\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { B2bNgxBackModule } from \"@b2b/ngx-back\";\nimport { B2bNgxButtonModule } from \"@b2b/ngx-button\";\nimport { B2bNgxCheckboxModule } from \"@b2b/ngx-checkbox\";\nimport { B2bNgxIconModule } from \"@b2b/ngx-icon\";\nimport { B2bNgxImageModule } from \"@b2b/ngx-image\";\nimport { B2bNgxInputModule } from \"@b2b/ngx-input\";\nimport { B2bNgxLinkModule } from \"@b2b/ngx-link\";\nimport { AuthRegisterIndividualAccountComponent} from \"./layout/auth-register-individual-account.component\";\nimport { AuthRegisterIndividualAccountRoutingModule } from \"./auth-register-individual-account-routing.module\";\nimport { B2bNgxSelectModule } from \"@b2b/ngx-select\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { B2bNgxCountrySelectModule } from \"@b2b/ngx-country-select\";\nimport { AuthRegisterIndividualAccountFirstStepComponent } from \"../auth-register-individual-account-first-step/auth-register-individual-account-first-step.component\";\nimport { AuthRegisterIndividualAccountSecondStepComponent } from \"../auth-register-individual-account-second-step/auth-register-individual-account-second-step.component\";\nimport {TranslateModule} from \"@ngx-translate/core\";\n\n@NgModule({\n\tdeclarations: [\n\t\tAuthRegisterIndividualAccountComponent,\n\t\tAuthRegisterIndividualAccountFirstStepComponent,\n\t\tAuthRegisterIndividualAccountSecondStepComponent,\n\t],\n    imports: [\n        CommonModule,\n        AuthRegisterIndividualAccountRoutingModule,\n        ReactiveFormsModule,\n        // ErrorTailorModule,\n        B2bNgxInputModule,\n        B2bNgxButtonModule,\n        // B2bNgxDividerModule,\n        B2bNgxCheckboxModule,\n        B2bNgxLinkModule,\n        B2bNgxBackModule,\n        // B2bNgxTelModule,\n        // B2bNgxTreeviewModule,\n\t\t\tTranslateModule,\n        B2bNgxIconModule,\n        B2bNgxImageModule,\n        B2bNgxSelectModule,\n        MatDialogModule,\n        B2bNgxCountrySelectModule,\n        // CategoriesDialogModule,\n    ],\n})\nexport class AuthRegisterIndividualAccountModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from \"@angular/core\";\nimport { UntilDestroy } from \"@ngneat/until-destroy\";\nimport { NavigationStart, Router } from \"@angular/router\";\nimport { B2bNgxLinkService, B2bNgxLinkThemeEnum } from \"@b2b/ngx-link\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { filter, tap } from \"rxjs/operators\";\nimport { animate, style, transition, trigger } from \"@angular/animations\";\nimport { B2bNgxButtonThemeEnum } from \"@b2b/ngx-button\";\nimport {environment} from \"../../../../../environments/environment\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@UntilDestroy()\n@Component({\n\tselector: \"b2b-auth-register-individual-account\",\n\ttemplateUrl: \"./auth-register-individual-account.component.html\",\n\tstyleUrls: [\"./auth-register-individual-account.component.scss\"],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tanimations: [\n\t\ttrigger(\"fadeInOut\", [\n\t\t\ttransition(\":enter\", [\n\t\t\t\t// :enter is alias to 'void => *'\n\t\t\t\tstyle({ opacity: 0 }),\n\t\t\t\tanimate(500, style({ opacity: 1 })),\n\t\t\t]),\n\t\t\ttransition(\":leave\", [\n\t\t\t\t// :leave is alias to '* => void'\n\t\t\t\tanimate(500, style({ opacity: 0 })),\n\t\t\t]),\n\t\t]),\n\t],\n})\nexport class AuthRegisterIndividualAccountComponent implements OnInit {\n\tpublic readonly b2bNgxLinkThemeEnum: typeof B2bNgxLinkThemeEnum;\n\tpublic readonly b2bNgxButtonThemeEnum: typeof B2bNgxButtonThemeEnum;\n\n\tprivate isSocialAuthButtonsVisibleSource: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n\tconstructor(\n\t\tprivate readonly router: Router,\n\t\tprivate readonly translateService: TranslateService,\n\t\tpublic readonly b2bNgxLinkService: B2bNgxLinkService,\n\t) {\n\t\tthis.b2bNgxLinkThemeEnum = B2bNgxLinkThemeEnum;\n\t\tthis.b2bNgxButtonThemeEnum = B2bNgxButtonThemeEnum;\n\n\t}\n\n\tpublic get isSocialAuthButtonsVisible$(): Observable<boolean> {\n\t\treturn this.isSocialAuthButtonsVisibleSource.asObservable();\n\t}\n\n\tngOnInit() {\n\t\tthis.isSocialAuthButtonsVisibleSource.next(this.router.url.includes(\"first-step\"));\n\t\tthis.initSocialAuthButtons();\n\t}\n\n\tpublic get showBadge() {\n\t\treturn this.translateService.currentLang !== \"en\";\n\t}\n\n\tregisterWithGoogle() {\n\t\tdocument.location.href = `${environment.apiUrl}auth/google`;\n\t}\n\n\tregisterWithLinkedIn() {\n\t\tdocument.location.href = `${environment.apiUrl}auth/linkedin`;\n\t}\n\n\tprivate initSocialAuthButtons(): void {\n\t\tthis.router.events\n\t\t\t.pipe(\n\t\t\t\tfilter((event: any) => event instanceof NavigationStart),\n\t\t\t\ttap((event: NavigationStart) => this.isSocialAuthButtonsVisibleSource.next(event.url.includes(\"first-step\")))\n\t\t\t)\n\t\t\t.subscribe();\n\t}\n\n  processSignInClick() {\n\n  }\n}\n","<div class=\"auth-register-individual-account__wrapper\">\n\t<div class=\"auth-register-individual-account__header\">\n\t\t<p class=\"auth-register-individual-account__header-text-wrapper\">\n\t\t\t<span class=\"auth-register-individual-account__header-text\">{{ \"AUTH.ALREADY_HAVE\" | translate }}</span>\n\t\t\t<a\n\t\t\t\t(click)=\"processSignInClick()\"\n\t\t\t\tb2bNgxLink\n\t\t\t\t[theme]=\"b2bNgxLinkThemeEnum.TEXT_BLUE\"\n\t\t\t\t[routerLink]=\"b2bNgxLinkService.getLink('/auth/log-in') | async\"\n\t\t\t\tclass=\"auth-register-individual-account__header-link\"\n\t\t\t\tqueryParamsHandling=\"merge\"\n\t\t\t\t>{{ \"AUTH.LOG_IN\" | translate }}</a\n\t\t\t>\n\t\t</p>\n\t</div>\n\n\t<div class=\"auth-register-individual-account__main\">\n\t\t<h2 class=\"auth-register-individual-account__main-title\">\n\t\t\t{{ \"AUTH.REGISTER_INDIVIDUAL_ACCOUNT\" | translate }}\n\t\t</h2>\n\n\t\t<form class=\"auth-register-individual-account__main-form\">\n\t\t\t<ng-container>\n\t\t\t\t<button\n\t\t\t\t\tb2bNgxButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t[hidden]=\"false\"\n\t\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_WHITE\"\n\t\t\t\t\tclass=\"auth-register-individual-account__register-with-google-button\"\n\t\t\t\t\t(click)=\"registerWithGoogle()\">\n\t\t\t\t\t<img b2bNgxImage name=\"google\" class=\"auth-register-individual-account__register-with-google-button__icon\" />\n\t\t\t\t\t{{ \"AUTH.REGISTER_GOOGLE\" | translate }}\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tb2bNgxButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t[hidden]=\"false\"\n\t\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_WHITE\"\n\t\t\t\t\tclass=\"auth-register-individual-account__register-with-google-button\"\n\t\t\t\t\t(click)=\"registerWithLinkedIn()\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tb2bNgxImage\n\t\t\t\t\t\tname=\"linkedin\"\n\t\t\t\t\t\tclass=\"auth-register-individual-account__register-with-google-button__icon\" />\n\t\t\t\t\t{{ \"AUTH.REGISTER_LINKEDIN\" | translate }}\n\t\t\t\t</button>\n<!--\t\t\t\t<b2b-ngx-divider [hidden]=\"false\" theme=\"white\" class=\"auth-register-individual-account__main-divider\"-->\n<!--\t\t\t\t\t>or</b2b-ngx-divider-->\n<!--\t\t\t\t>-->\n\t\t\t</ng-container>\n\t\t\t<div class=\"auth-register-individual-account__main-input\">\n\t\t\t\t<router-outlet></router-outlet>\n\t\t\t</div>\n\t\t</form>\n\t</div>\n</div>\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport function fullName(): ValidatorFn {\n\tconst fullName = /.{1,} .{1,}/;\n\n\treturn (control: AbstractControl): ValidationErrors | null => {\n\t\tif (!control.value) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!fullName.test(String(control.value).toLowerCase())) {\n\t\t\treturn { fullName: true };\n\t\t}\n\n\t\treturn null;\n\t};\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport function onlyLatinAndNumberAndSymbols(): ValidatorFn {\n\tconst latinCharacters = /^[A-Za-z0-9!@#$%^&*+()_,./?=|№:/'-]+$/;\n\n\treturn (control: AbstractControl): ValidationErrors | null => {\n\t\tif (!control.value) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst str = control.value.replace(/\\s+/g, \"\");\n\t\tif (!latinCharacters.test(String(str.trim()).toLowerCase())) {\n\t\t\treturn { cyrillic: true };\n\t\t}\n\n\t\treturn null;\n\t};\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport function onlyLatin(): ValidatorFn {\n\tconst latinCharacters = /^[a-zA-Z]+$/;\n\n\treturn (control: AbstractControl): ValidationErrors | null => {\n\t\tif (!control.value) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst noSpaceStr = control.value.replace(/\\s/g, \"\");\n\t\tif (!latinCharacters.test(String(noSpaceStr).toLowerCase())) {\n\t\t\treturn { latin: true };\n\t\t}\n\n\t\treturn null;\n\t};\n}\n"],"names":["animate","style","transition","trigger","Validators","filter","first","map","switchMap","B2bNgxInputThemeEnum","B2bNgxButtonThemeEnum","UntilDestroy","untilDestroyed","BrowserStorageKeysEnum","AuthRegisterIndividualAccountFirstStepComponent","constructor","router","route","fb","authService","group","email","required","password","minLength","form","status$","pipe","data","ngOnInit","detectParsingCompanyEmail","detectUrlParamsEmail","secondStep","saveUserData","navigate","relativeTo","queryParams","subscribe","patchValue","get","valueChanges","valid","getPreregisteredCompanyInformation","company","undefined","companyName","parsingCompanyName","firstStepData","value","localStorage","setItem","FIRST_STEP_DATA","JSON","stringify","i0","selectors","decls","vars","consts","template","ctx","opacity","ChangeDetectorRef","B2bNgxSelectThemeEnum","catchError","tap","throwError","fullName","onlyLatin","B2bNgxLinkThemeEnum","onlyLatinAndNumberAndSymbols","ctx_r3","AuthRegisterIndividualAccountSecondStepComponent","translateService","dialog","b2bNgxLinkService","activatedRoute","hotToastrService","changeDetectorRef","getFormGroup","getRoles","firstStepDataObj","parse","getItem","_a","_b","_c","setValue","roles","role","roleName","instant","name","toUpperCase","description","displayName","charAt","slice","availableRoles","registerWithForm","formGroup","invalid","body","preferences","categories","refId","passwordConfirm","er","show","dismissible","border","autoClose","val","updateToken","token","initUser","navigateByUrl","err","code","error","detectChanges","phone","termsAndConditions","roleId","country","NavigationStart","BehaviorSubject","environment","AuthRegisterIndividualAccountComponent","b2bNgxLinkThemeEnum","b2bNgxButtonThemeEnum","isSocialAuthButtonsVisible$","isSocialAuthButtonsVisibleSource","asObservable","next","url","includes","initSocialAuthButtons","showBadge","currentLang","registerWithGoogle","document","location","href","apiUrl","registerWithLinkedIn","events","event","processSignInClick","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}