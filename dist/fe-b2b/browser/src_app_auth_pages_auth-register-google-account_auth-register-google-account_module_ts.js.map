{"version":3,"file":"src_app_auth_pages_auth-register-google-account_auth-register-google-account_module_ts.js","mappings":"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","sources":["./projects/ngx-select/src/lib/ngx-select.module.ts","./src/app/auth/pages/auth-register-google-account/auth-register-google-account-routing.module.ts","./src/app/auth/pages/auth-register-google-account/auth-register-google-account.module.ts","./src/app/auth/pages/auth-register-google-account/layout/auth-register-google-account.component.ts","./src/app/client/services/categories/categories.service.ts","./src/app/client/state/categories/categories.query.ts","./src/app/client/state/categories/categories.store.ts","./src/app/core/helpers/function/capitalize-first-letter.ts","./src/app/core/helpers/validator/full-name.ts","./src/app/core/helpers/validator/only-latin-and-number.ts","./src/app/core/helpers/validator/only-latin.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { B2bNgxSelectComponent } from \"./layout/ngx-select.component\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\n@NgModule({\n\timports: [CommonModule, NgSelectModule, ReactiveFormsModule],\n\tdeclarations: [B2bNgxSelectComponent],\n\texports: [B2bNgxSelectComponent],\n})\nexport class B2bNgxSelectModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AuthRegisterGoogleAccountComponent } from \"./layout/auth-register-google-account.component\";\n\nconst routes: Routes = [\n\t{\n\t\tpath: \"\",\n\t\tcomponent: AuthRegisterGoogleAccountComponent,\n\t},\n];\n\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule],\n})\nexport class AuthRegisterGoogleAccountRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { B2bNgxBackModule } from \"@b2b/ngx-back\";\nimport { B2bNgxButtonModule } from \"@b2b/ngx-button\";\nimport { B2bNgxCheckboxModule } from \"@b2b/ngx-checkbox\";\nimport { B2bNgxIconModule } from \"@b2b/ngx-icon\";\nimport { B2bNgxInputModule } from \"@b2b/ngx-input\";\nimport { B2bNgxLinkModule } from \"@b2b/ngx-link\";\nimport { AuthRegisterGoogleAccountRoutingModule } from \"./auth-register-google-account-routing.module\";\nimport { AuthRegisterGoogleAccountComponent } from \"./layout/auth-register-google-account.component\";\nimport { B2bNgxSelectModule } from \"@b2b/ngx-select\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\n\n\n@NgModule({\n\tdeclarations: [AuthRegisterGoogleAccountComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AuthRegisterGoogleAccountRoutingModule,\n        // ErrorTailorModule,\n        B2bNgxInputModule,\n        B2bNgxButtonModule,\n        B2bNgxCheckboxModule,\n        B2bNgxLinkModule,\n        B2bNgxBackModule,\n\n        B2bNgxIconModule,\n        B2bNgxSelectModule,\n        MatDialogModule,\n    ],\n})\nexport class AuthRegisterGoogleAccountModule {}\n","import { ChangeDetectorRef, Component, HostListener, OnInit } from \"@angular/core\";\nimport { animate, style, transition, trigger } from \"@angular/animations\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport {mergeMap, Observable} from \"rxjs\";\nimport { map, tap } from \"rxjs/operators\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n\nimport { B2bNgxButtonThemeEnum } from \"@b2b/ngx-button\";\nimport { B2bNgxInputThemeEnum } from \"@b2b/ngx-input\";\nimport { B2bNgxLinkService, B2bNgxLinkThemeEnum } from \"@b2b/ngx-link\";\nimport { B2bNgxSelectThemeEnum } from \"@b2b/ngx-select\";\n\nimport { UserService} from \"../../../../client/pages/client-profile/services/user/user.service\";\nimport { CategoriesService } from \"../../../../client/services/categories/categories.service\";\nimport { AuthService } from \"../../../services/auth/auth.service\";\nimport { AuthStore } from \"../../../state/auth/auth.store\";\nimport { onlyLatinAndNumber } from \"../../../../core/helpers/validator/only-latin-and-number\";\nimport { fullName } from \"../../../../core/helpers/validator/full-name\";\nimport { onlyLatin } from \"../../../../core/helpers/validator/only-latin\";\nimport { capitalizeFirstLetter } from \"../../../../core/helpers/function/capitalize-first-letter\";\nimport {User} from \"../../../../core/models/user/user.model\";\nimport {MixpanelService} from \"../../../../core/services/mixpanel/mixpanel.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {PlatformService} from \"../../../../client/services/platform/platform.service\";\n\nfunction setValuesToFormData(formData: FormData, values: any, prefix?: string) {\n\tObject.entries(values).forEach(([key, value]: any) => {\n\t\tif (key === \"logo\") {\n\t\t\tArray.from(value).forEach((file: any) => {\n\t\t\t\tformData.append(key, file);\n\t\t\t});\n\t\t} else if (Array.isArray(value)) {\n\t\t\tvalue\n\t\t\t\t.filter((arrayItem) => !!arrayItem)\n\t\t\t\t.forEach((arrayItem) => {\n\t\t\t\t\tformData.append(key, arrayItem);\n\t\t\t\t});\n\t\t} else if (typeof value === \"object\" && value !== null) {\n\t\t\tsetValuesToFormData(formData, value, key);\n\t\t} else {\n\t\t\tconst displayKey = prefix ? `${prefix}${capitalizeFirstLetter(key)}` : key;\n\t\t\tformData.append(displayKey, value);\n\t\t}\n\t});\n}\n\n@UntilDestroy()\n@Component({\n\tselector: \"b2b-auth-register-google-account\",\n\ttemplateUrl: \"./auth-register-google-account.component.html\",\n\tstyleUrls: [\"./auth-register-google-account.component.scss\"],\n\tanimations: [\n\t\ttrigger(\"fadeInOut\", [\n\t\t\ttransition(\":enter\", [\n\t\t\t\t// :enter is alias to 'void => *'\n\t\t\t\tstyle({ opacity: 0 }),\n\t\t\t\tanimate(500, style({ opacity: 1 })),\n\t\t\t]),\n\t\t\ttransition(\":leave\", [\n\t\t\t\t// :leave is alias to '* => void'\n\t\t\t\tanimate(500, style({ opacity: 0 })),\n\t\t\t]),\n\t\t]),\n\t],\n})\nexport class AuthRegisterGoogleAccountComponent implements OnInit {\n\tpublic readonly formGroup: FormGroup = this.getFormGroup();\n\tpublic readonly b2bNgxLinkThemeEnum: typeof B2bNgxLinkThemeEnum;\n\tpublic readonly b2bNgxButtonThemeEnum: typeof B2bNgxButtonThemeEnum;\n\tpublic readonly b2bNgxInputThemeEnum: typeof B2bNgxInputThemeEnum;\n\tpublic readonly b2bNgxSelectThemeEnum: typeof B2bNgxSelectThemeEnum;\n\n\tpublic readonly categories$: Observable<any>;\n\tpublic user!: User;\n\tpublic token: string = '';\n\tpublic isComplete = false;\n\tpublic readonly roles$: Observable<any>;\n\tpublic availableRoles: any[] = [];\n\n\tpublic registrationSystem: any;\n\tconstructor(\n\t\tprivate readonly formBuilder: FormBuilder,\n\t\tprivate readonly router: Router,\n\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\tprivate readonly _categoriesService: CategoriesService,\n\t\tprivate readonly _activatedRoute: ActivatedRoute,\n\t\tprivate readonly _authService: AuthService,\n\t\tprivate readonly translateService: TranslateService,\n\t\tpublic readonly b2bNgxLinkService: B2bNgxLinkService,\n\t\tprivate readonly _userService: UserService,\n\t\tprivate readonly _authStore: AuthStore,\n    private readonly mixpanelService: MixpanelService,\n\t\tprivate readonly platformService: PlatformService\n\t) {\n\t\tthis.b2bNgxLinkThemeEnum = B2bNgxLinkThemeEnum;\n\t\tthis.b2bNgxButtonThemeEnum = B2bNgxButtonThemeEnum;\n\t\tthis.b2bNgxInputThemeEnum = B2bNgxInputThemeEnum;\n\t\tthis.b2bNgxSelectThemeEnum = B2bNgxSelectThemeEnum;\n\n\t\tthis.categories$ = this.getCategories();\n\t\tthis.roles$ = this.getRoles();\n\t}\n\n\t@HostListener(\"window:popstate\", [\"$event\"])\n\tonPopState(event: any) {\n\t\tthis.redirectFrom();\n\t}\n\n\tpublic getRoles() {\n\t\treturn this._authService.getRoles().pipe(\n\t\t\tmap((roles) =>\n\t\t\t\troles.map((role) => {\n\t\t\t\t\tconst roleName = this.translateService.instant(`ROLES.${role.name.toUpperCase()}_NAME`);\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...role,\n\t\t\t\t\t\tdescription: this.translateService.instant(`ROLES.${role.name.toUpperCase()}`),\n\t\t\t\t\t\tdisplayName: roleName.charAt(0).toUpperCase() + roleName.slice(1),\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t),\n\t\t\ttap((roles) => (this.availableRoles = roles))\n\t\t);\n\t}\n\n\tasync redirectFrom() {\n\t\tif (!this.isComplete) {\n\t\t\tawait this._userService.deleteUser().toPromise();\n\t\t\tawait this._authService.logOut();\n\t\t}\n\t\twindow.location.href = \"/\";\n\t}\n\n\tpublic get showBadge() {\n\t\treturn this.translateService.currentLang !== \"en\";\n\t}\n\n\tpublic getCategories() {\n\t\treturn this._categoriesService.getCategories$().pipe(\n\t\t\tmap(({ categories }) =>\n\t\t\t\tcategories.map((category: any) => ({\n\t\t\t\t\ttext: category.name + \"hide\",\n\t\t\t\t\tvalue: category._id,\n\t\t\t\t\tcollapsed: true,\n\t\t\t\t\tchecked: false,\n\t\t\t\t\tchildren: category.children.map((level2Category: any) => ({\n\t\t\t\t\t\ttext: level2Category.name,\n\t\t\t\t\t\tvalue: level2Category._id,\n\t\t\t\t\t\tcollapsed: true,\n\t\t\t\t\t\tchecked: false,\n\t\t\t\t\t})),\n\t\t\t\t}))\n\t\t\t)\n\t\t);\n\t}\n\n\tpublic get isTrader(): undefined | boolean {\n\t\tif (!this._authService.role) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._authService.role.name === \"trader\";\n\t}\n\n\tpublic get emailError() {\n\t\tconst { errors, touched } = this.formGroup.controls['email'];\n\n\t\tif (!errors || !touched) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\treturn Object.keys(errors)[0];\n\t}\n\n\tgetFormGroup() {\n\t\treturn this.formBuilder.group({\n\t\t\tpreferences: [[]],\n\t\t\tcompany: [\"\", [Validators.required, onlyLatinAndNumber()]],\n\t\t\tfullName: [\"\", [Validators.required, fullName(), onlyLatin()]],\n\t\t\tphone: [\"\", [Validators.required]],\n\t\t\ttermsAndConditions: [null, Validators.requiredTrue],\n\t\t\troleId: [null, Validators.required],\n\t\t});\n\t}\n\n\tngOnInit() {\n\t\t// if (this.platformService.isBrowser) {\n\t\t\tthis._activatedRoute.queryParams.pipe(untilDestroyed(this)).subscribe((params) => {\n\t\t\t\tlet { token, role } = params;\n\t\t\t\tconst updatedToken = token.endsWith('/') ? token.slice(0, -1) : token;\n\t\t\t\tconsole.log('TOKEN: ', token, 'UPDATED: ', updatedToken);\n\t\t\t\tconsole.log('ROLE: ', role)\n\t\t\t\tthis._authService.updateToken(updatedToken);\n\t\t\t\tthis._authService.initUser();\n\t\t\t\tthis._authService.returnInitedUser()\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tmergeMap(user => {\n\t\t\t\t\t\t\treturn this._authService\n\t\t\t\t\t\t\t\t.getUser()\n\t\t\t\t\t\t\t\t.pipe(untilDestroyed(this))\n\t\t\t\t\t\t})\n\t\t\t\t\t).subscribe((user) => {\n\t\t\t\t\tconsole.log('USER: ', user)\n\t\t\t\t\tthis.user = user;\n\t\t\t\t\tthis.token = updatedToken;\n\t\t\t\t\tconst mixpanel = {\n\t\t\t\t\t\t'User_id': user?._id,\n\t\t\t\t\t\t'Auth Method': user?.socialAuthType\n\t\t\t\t\t};\n\t\t\t\t\tthis.mixpanelService.signUp(mixpanel, 'Sign-Up 1st step completed');\n\t\t\t\t\tthis._authService.updateToken(updatedToken);\n\t\t\t\t\tthis._authService.updateRole(role);\n\t\t\t\t\tthis.router.navigate(['/auth/register']);\n\t\t\t\t\tthis._authService.isRegisteredByGoogle.next(true);\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t});\n\t\t\t\t// this._authService\n\t\t\t\t// \t.getUser()\n\t\t\t\t// \t.pipe(untilDestroyed(this))\n\t\t\t\t// \t.subscribe((user) => {\n\t\t\t\t// \t\tconsole.log('USER: ', user)\n\t\t\t\t// \t\tthis.user = user;\n\t\t\t\t// \t\tthis.token = updatedToken;\n\t\t\t\t// \t\tconst mixpanel = {\n\t\t\t\t// \t\t\t'User_id': user?._id,\n\t\t\t\t// \t\t\t'Auth Method': user?.socialAuthType\n\t\t\t\t// \t\t};\n\t\t\t\t// \t\tthis.mixpanelService.signUp(mixpanel, 'Sign-Up 1st step completed');\n\t\t\t\t// \t\tthis._authService.updateToken(updatedToken);\n\t\t\t\t// \t\tthis._authService.updateRole(role);\n\t\t\t\t// \t\tthis.router.navigate(['/auth/register']);\n\t\t\t\t// \t\tthis._authService.isRegisteredByGoogle.next(true);\n\t\t\t\t// \t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t// \t});\n\t\t\t});\n\t\t// }\n\t}\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { Observable, takeWhile } from \"rxjs\";\nimport {first, map} from \"rxjs/operators\";\n\nimport {ApiService} from \"../../../core/services/api/api.service\";\nimport {CategoriesQuery} from \"../../state/categories/categories.query\";\nimport {CategoriesStore} from \"../../state/categories/categories.store\";\n\n@Injectable({\n\tprovidedIn: \"root\",\n})\nexport class CategoriesService {\n\tpublic readonly endpoint: string;\n\n\tconstructor(\n\t\tprivate readonly _apiService: ApiService,\n\t\tprivate readonly _categoriesStore: CategoriesStore,\n\t\tprivate readonly _categoriesQuery: CategoriesQuery\n\t) {\n\t\tthis.endpoint = \"categories/\";\n\t\tthis.getCategories$();\n\t}\n\n\tpublic getCategories$(): Observable<any> {\n\t\tconst { categories } = this._categoriesQuery.getValue();\n\t\tif (!categories?.categories?.length || !categories?.totalCount) {\n\t\t\tthis._apiService\n\t\t\t\t.get(this.endpoint)\n\t\t\t\t.subscribe((categories: any) => {\n\t\t\t\t\tthis._categoriesStore.update({\n\t\t\t\t\t\tcategories\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\n\t\treturn this._categoriesQuery.selectCategories$;\n\t}\n\n\tpublic getCategories(): any {\n\t\tconst {categories} = this._categoriesQuery.getValue();\n\t\tif (!categories) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this._categoriesQuery.getValue();\n\t}\n\n\tpublic updateCategory(id: any, name: any, hide: any) {\n\t\treturn this._apiService.put(`category/${id}/update`, {\n\t\t\t...(name ? { name } : {}),\n\t\t\thide,\n\t\t});\n\t}\n\n\tpublic createCategory(level1Category: any, level2Category: any, level3Category: any) {\n\t\treturn this._apiService.post(`category/create`, {\n\t\t\tcategory: {\n\t\t\t\t...level1Category,\n\t\t\t\tcategory: {\n\t\t\t\t\t...level2Category,\n\t\t\t\t\tcategory: level3Category,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic updateWikiCategory(id: any, name: any, hide: any) {\n\t\treturn this._apiService.put(`categoryPost/${id}/update`, {\n\t\t\t...(name ? { name } : {}),\n\t\t\thide: !hide,\n\t\t});\n\t}\n\n\tpublic createWikiCategory(level1Category: any, level2Category: any) {\n\t\treturn this._apiService.post(`categoryPost/create`, {\n\t\t\tcategory: {\n\t\t\t\t...level1Category,\n\t\t\t\tcategory: level2Category,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic getWikiCategories() {\n\t\tconst { wikiCategories } = this._categoriesQuery.getValue();\n\n\t\tif (!wikiCategories.length) {\n\t\t\tthis._apiService\n\t\t\t\t.get(\"categoryPosts\")\n\t\t\t\t.subscribe((response: any) => {\n\t\t\t\t\tthis._categoriesStore.update({\n\t\t\t\t\t\twikiCategories: response,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\n\t\treturn this._categoriesQuery.selectWikiCategories$;\n\t}\n\n\tpublic getCategoryNameById(categoryId: string): Observable<string> {\n\t\treturn this.getCategories$().pipe(\n\t\t\ttakeWhile(({ categories }) => !categories.length, true),\n\t\t\tmap(({ categories }) => {\n\t\t\t\tfor (const parentCategory of categories) {\n\t\t\t\t\tif (parentCategory._id === categoryId) {\n\t\t\t\t\t\treturn parentCategory.name\n\t\t\t\t\t}\n\t\t\t\t\tfor (const childCategory of parentCategory.children) {\n\t\t\t\t\t\tif (childCategory._id === categoryId) {\n\t\t\t\t\t\t\treturn childCategory.name;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n}\n","import { Injectable } from \"@angular/core\";\nimport { Query } from \"@datorama/akita\";\nimport { Observable } from \"rxjs\";\nimport {CategoriesState, CategoriesStore} from \"./categories.store\";\n\n@Injectable({ providedIn: \"root\" })\nexport class CategoriesQuery extends Query<CategoriesState> {\n\tpublic readonly selectCategories$: Observable<any>;\n\tpublic readonly selectWikiCategories$: Observable<any>;\n\tconstructor(protected override store: CategoriesStore) {\n\t\tsuper(store);\n\n\t\tthis.selectCategories$ = this.select(\"categories\");\n\t\tthis.selectWikiCategories$ = this.select(\"wikiCategories\");\n\t}\n}\n","import { Injectable } from \"@angular/core\";\nimport { Store, StoreConfig } from \"@datorama/akita\";\n\nexport interface CategoriesState {\n\tcategories: any;\n\twikiCategories: any;\n}\n\nexport function createInitialState(): CategoriesState {\n\treturn {\n\t\tcategories: {\n\t\t\tcategories: [],\n\t\t\ttotalCount: 0,\n\t\t},\n\t\twikiCategories: [],\n\t};\n}\n\n@Injectable({ providedIn: \"root\" })\n@StoreConfig({ name: \"categories\" })\nexport class CategoriesStore extends Store<CategoriesState> {\n\tconstructor() {\n\t\tsuper(createInitialState());\n\t}\n}\n","export function capitalizeFirstLetter(string: string = ''): string {\n\treturn string.charAt(0).toUpperCase() + string.slice(1);\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport function fullName(): ValidatorFn {\n\tconst fullName = /.{1,} .{1,}/;\n\n\treturn (control: AbstractControl): ValidationErrors | null => {\n\t\tif (!control.value) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!fullName.test(String(control.value).toLowerCase())) {\n\t\t\treturn { fullName: true };\n\t\t}\n\n\t\treturn null;\n\t};\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport function onlyLatinAndNumber(): ValidatorFn {\n\tconst latinCharacters = /^[A-Za-z0-9&]+$/;\n\n\treturn (control: AbstractControl): ValidationErrors | null => {\n\t\tif (!control.value) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst str = control.value.replace(/\\s+/g, \"\");\n\t\tif (!latinCharacters.test(String(str.trim()).toLowerCase())) {\n\t\t\treturn { latin: true };\n\t\t}\n\n\t\treturn null;\n\t};\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport function onlyLatin(): ValidatorFn {\n\tconst latinCharacters = /^[a-zA-Z]+$/;\n\n\treturn (control: AbstractControl): ValidationErrors | null => {\n\t\tif (!control.value) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst noSpaceStr = control.value.replace(/\\s/g, \"\");\n\t\tif (!latinCharacters.test(String(noSpaceStr).toLowerCase())) {\n\t\t\treturn { latin: true };\n\t\t}\n\n\t\treturn null;\n\t};\n}\n"],"names":["ChangeDetectorRef","animate","style","transition","trigger","Validators","mergeMap","map","tap","UntilDestroy","untilDestroyed","B2bNgxButtonThemeEnum","B2bNgxInputThemeEnum","B2bNgxLinkThemeEnum","B2bNgxSelectThemeEnum","onlyLatinAndNumber","fullName","onlyLatin","capitalizeFirstLetter","setValuesToFormData","formData","values","prefix","Object","entries","forEach","key","value","Array","from","file","append","isArray","filter","arrayItem","displayKey","AuthRegisterGoogleAccountComponent","constructor","formBuilder","router","changeDetectorRef","_categoriesService","_activatedRoute","_authService","translateService","b2bNgxLinkService","_userService","_authStore","mixpanelService","platformService","getFormGroup","b2bNgxLinkThemeEnum","b2bNgxButtonThemeEnum","b2bNgxInputThemeEnum","b2bNgxSelectThemeEnum","categories$","getCategories","roles$","getRoles","onPopState","event","redirectFrom","pipe","roles","role","roleName","instant","name","toUpperCase","description","displayName","charAt","slice","availableRoles","isComplete","deleteUser","toPromise","logOut","window","location","href","showBadge","currentLang","getCategories$","categories","category","text","_id","collapsed","checked","children","level2Category","isTrader","undefined","emailError","errors","touched","formGroup","controls","keys","group","preferences","company","required","phone","termsAndConditions","requiredTrue","roleId","ngOnInit","queryParams","subscribe","params","token","updatedToken","endsWith","console","log","updateToken","initUser","returnInitedUser","user","getUser","mixpanel","socialAuthType","signUp","updateRole","navigate","isRegisteredByGoogle","next","detectChanges","i0","selectors","hostBindings","ctx","opacity"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}