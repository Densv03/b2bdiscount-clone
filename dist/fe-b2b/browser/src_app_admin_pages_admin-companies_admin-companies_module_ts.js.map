{"version":3,"file":"src_app_admin_pages_admin-companies_admin-companies_module_ts.js","mappings":"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","sources":["./src/app/admin/pages/admin-companies/admin-companies-routing.module.ts","./src/app/admin/pages/admin-companies/admin-companies.module.ts","./src/app/admin/pages/admin-companies/layout/admin-companies.component.ts","./src/app/admin/pages/admin-companies/layout/admin-companies.component.html","./src/app/admin/pages/admin-companies/services/admin-companies.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {AdminCompaniesComponent} from \"./layout/admin-companies.component\";\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: AdminCompaniesComponent\n\t}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminCompaniesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminCompaniesRoutingModule } from './admin-companies-routing.module';\nimport { AdminCompaniesComponent } from './layout/admin-companies.component';\nimport {B2bNgxInputModule} from \"@b2b/ngx-input\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {B2bNgxPaginationModule} from \"@b2b/ngx-pagination\";\nimport {B2bNgxIconModule} from \"@b2b/ngx-icon\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {B2bNgxCountrySelectModule} from \"@b2b/ngx-country-select\";\nimport {NgxDaterangepickerMd} from \"ngx-daterangepicker-material\";\n\n\n@NgModule({\n  declarations: [\n    AdminCompaniesComponent\n  ],\n    imports: [\n        CommonModule,\n        AdminCompaniesRoutingModule,\n        B2bNgxInputModule,\n        ReactiveFormsModule,\n        B2bNgxPaginationModule,\n        B2bNgxIconModule,\n        MatTableModule,\n        B2bNgxCountrySelectModule,\n        NgxDaterangepickerMd.forRoot()\n    ]\n})\nexport class AdminCompaniesModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {B2bNgxInputThemeEnum} from \"@b2b/ngx-input\";\nimport {map} from \"rxjs/operators\";\nimport {AdminCompaniesService} from \"../services/admin-companies.service\";\nimport {PaginationParamsModel} from \"../../../../core/models/pagination-params.model\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\n\n@Component({\n\tselector: 'b2b-admin-companies',\n\ttemplateUrl: './admin-companies.component.html',\n\tstyleUrls: ['./admin-companies.component.scss']\n})\nexport class AdminCompaniesComponent implements OnInit {\n\tpublic b2bNgxInputThemeEnum = B2bNgxInputThemeEnum;\n\tpublic productsLimit = 20;\n\tpublic filtersForm: FormGroup = this.fb.group({\n\t\tq: null,\n\t\tregistrationDate: this.fb.control({\n\t\t\tstartDate: new Date(new Date().setFullYear(new Date().getFullYear() - 1)).toISOString(),\n\t\t\tendDate: new Date(Date.now()).toISOString(),\n\t\t}),\n\t\tcountry: [null]\n\t});\n\n\tpublic adminCompaniesCount$ = this.adminCompaniesService.adminCompaniesCount$;\n\tpublic adminCompaniesList$ = this.adminCompaniesService.adminCompaniesList$;\n\tpublic displayedColumns = ['companyName', 'countChats', 'countProducts', 'createdAt'];\n\tprivate currentFilters: any = null;\n\tprivate filteredQueryObj: PaginationParamsModel = {limit: this.productsLimit, offset: 0}\n\n\tconstructor(private fb: FormBuilder,\n\t\t\t\t\t\t\tprivate adminCompaniesService: AdminCompaniesService) {\n\t}\n\tngOnInit(): void {\n\t\tthis.updateCompaniesListOnFiltersChange();\n\t\tthis.filtersForm.get('registrationDate').updateValueAndValidity();\n\t}\n\tprivate removeFalsyKeysFromObject(object: {[key: string]: any}): any {\n\t\tfor(const key in object) {\n\t\t\tif(!object[key]) delete object[key];\n\t\t}\n\t\treturn object;\n\t}\n\n\tpublic updateCompaniesListOnFiltersChange(): void {\n\t\tthis.filtersForm.valueChanges.pipe(\n\t\t\tmap(data => {\n\t\t\t\tif (data.registrationDate.startDate) {\n\t\t\t\t\tconst date = new Date(data.registrationDate.startDate);\n\t\t\t\t\tdata.registrationDate.startDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate())).toISOString();\n\t\t\t\t}\n\t\t\t\tif (data.registrationDate.endDate) {\n\t\t\t\t\tdata.registrationDate.endDate = new Date(data.registrationDate.endDate).toISOString();\n\t\t\t\t}\n\t\t\t\tif (!data.q) {\n\t\t\t\t\tdelete data.q;\n\t\t\t\t}\n\t\t\t\tdata.active = true;\n\t\t\t\tdata.dateFrom = data.registrationDate.startDate;\n\t\t\t\tdata.dateTo = data.registrationDate.endDate;\n\t\t\t\tdelete data.registrationDate;\n\t\t\t\treturn data;\n\t\t\t})\n\t\t).subscribe((filters: { [key: string]: any; }) => {\n\t\t\tthis.onFiltersChange();\n\t\t\tthis.adminCompaniesService.updateAdminCompaniesList(this.filteredQueryObj, {...this.removeFalsyKeysFromObject(filters)});\n\t\t\tthis.currentFilters = filters;\n\t\t});\n\t}\n\n\n\tpublic togglePage(page: number): void {\n\t\tthis.filteredQueryObj = {...this.filteredQueryObj, offset: (page - 1) * this.productsLimit};\n\t\tthis.adminCompaniesService.updateAdminCompaniesList(this.filteredQueryObj, {...this.currentFilters});\n\t}\n\n\tprivate onFiltersChange(): void {\n\t\tthis.filteredQueryObj = {limit: this.productsLimit, offset: 0};\n\t\tthis.currentFilters = null;\n\t}\n}\n","<form [formGroup]=\"filtersForm\">\n\t<input\n\t\ttype=\"text\"\n\t\tb2bNgxInput\n\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_WHITE\"\n\t\tplaceholder=\"Enter company name\"\n\t\tlabel=\"Company name\"\n\t\tformControlName=\"q\"\n\t\tclass=\"mb-3\">\n\t<input\n\t\tb2bNgxInput\n\t\tngxDaterangepickerMd\n\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_WHITE\"\n\t\tlabel=\"Registration Time\"\n\t\ttype=\"text\"\n\t\t[showClearButton]=\"true\"\n\t\tplaceholder=\"Select range of date\"\n\t\tname=\"daterange\"\n\t\tformControlName=\"registrationDate\"\n\t\tclass=\"mb-3\"/>\n\n\t<b2b-ngx-country-select\n\t\tformControlName=\"country\"\n\t\tplaceholder=\"Select Country\"\n\t></b2b-ngx-country-select>\n\n</form>\n<ng-container *ngIf=\"(adminCompaniesCount$ | async) as adminCompaniesCount; else noCompanies\">\n\t<div class=\"total-count\">Total companies count: {{adminCompaniesCount}}</div>\n\n\t<table mat-table [dataSource]=\"adminCompaniesList$ | async\" class=\"mat-elevation-z8 w-100 mt-4\">\n\t\t<ng-container matColumnDef=\"companyName\">\n\t\t\t<th mat-header-cell *matHeaderCellDef> Name </th>\n\t\t\t<td mat-cell *matCellDef=\"let company\"> {{company.companyName}} </td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"countChats\">\n\t\t\t<th mat-header-cell *matHeaderCellDef> Chats count </th>\n\t\t\t<td mat-cell *matCellDef=\"let company\"> {{company.countChats}} </td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"countProducts\">\n\t\t\t<th mat-header-cell *matHeaderCellDef> Products count </th>\n\t\t\t<td mat-cell *matCellDef=\"let company\"> {{company.countProducts}} </td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"createdAt\">\n\t\t\t<th mat-header-cell *matHeaderCellDef> Registration date </th>\n\t\t\t<td mat-cell *matCellDef=\"let company\"> {{company.createdAt | date}} </td>\n\t\t</ng-container>\n\n\t\t<tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n\t\t<tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\t</table>\n\t<b2b-ngx-pagination [length]=\"adminCompaniesCount\" [perPage]=\"productsLimit\"\n\t\t\t\t\t\t\t\t\t\t\t(togglePageNumber)=\"togglePage($event)\"></b2b-ngx-pagination>\n\n</ng-container>\n\n\n<ng-template #noCompanies>\n\t<h3>No companies found</h3>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable, of} from \"rxjs\";\nimport {PaginationParamsModel} from \"../../../../core/models/pagination-params.model\";\nimport {ApiService} from \"../../../../core/services/api/api.service\";\nimport {first} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminCompaniesService {\n\n\tprivate adminCompaniesListSource: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\tprivate adminCompaniesCountSource: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n  constructor(private apiService: ApiService) { }\n\n\tpublic get adminCompaniesList$(): Observable<any> {\n\t\treturn this.adminCompaniesListSource.asObservable();\n\t}\n\n\tpublic get adminCompaniesCount$(): Observable<number> {\n\t\treturn this.adminCompaniesCountSource.asObservable();\n\t}\n\n\tpublic updateAdminCompaniesList(paginationModel: PaginationParamsModel, otherParams?: any): void {\n\t\tthis.getAdminCompaniesList(paginationModel, otherParams)\n\t\t\t.pipe(first())\n\t\t\t.subscribe(data => {\n\t\t\t\tthis.adminCompaniesCountSource.next(data.totalCount);\n\t\t\t\tthis.adminCompaniesListSource.next(data.companies);\n\t\t\t})\n\t}\n\n\tprivate getAdminCompaniesList(paginationModel: PaginationParamsModel, otherParams?: any): Observable<any> {\n\t\treturn this.apiService.get('products/get-company', {\n\t\t\tparams: {\n\t\t\t\t...paginationModel,\n\t\t\t\t...otherParams\n\t\t\t}\n\t\t});\n\t}\n}\n"],"names":["B2bNgxInputThemeEnum","map","i0","ctx_r0","AdminCompaniesComponent","constructor","fb","adminCompaniesService","group","q","registrationDate","control","startDate","Date","setFullYear","getFullYear","toISOString","endDate","now","country","adminCompaniesCount$","adminCompaniesList$","limit","productsLimit","offset","ngOnInit","updateCompaniesListOnFiltersChange","filtersForm","get","updateValueAndValidity","removeFalsyKeysFromObject","object","key","valueChanges","pipe","data","date","UTC","getMonth","getDate","active","dateFrom","dateTo","subscribe","filters","onFiltersChange","updateAdminCompaniesList","filteredQueryObj","currentFilters","togglePage","page","selectors","decls","vars","consts","template","_r1"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}