{"version":3,"file":"src_app_auth_pages_auth-log-in_auth-log-in_module_ts.js","mappings":";;;;;;;;;;;;;;;;AACuD;AACY;;;AAEnE,MAAM,MAAM,GAAW;IACtB;QACC,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6EAAkB;KAC7B;CACD,CAAC;AAMK,MAAM,sBAAsB;;4FAAtB,sBAAsB;mHAAtB,sBAAsB;uHAHxB,kEAAqB,CAAC,MAAM,CAAC,EAC7B,yDAAY;mIAEV,sBAAsB,oFAFxB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZwB;AAEuB;AACH;AACD;AAClE,6DAA6D;AACX;AACE;AACJ;AAChD,4DAA4D;AACiE;AAC1E;AAC4C;AAChD;AACK;AACO;AACJ;AACH;;AACpD,uDAAuD;AAwBhD,MAAM,eAAe;;8EAAf,eAAe;4GAAf,eAAe;gHAnBxB,yDAAY;QACZ,+EAAsB;QACtB,uDAAW;QACX,+DAAmB;QACnB,qBAAqB;QACrB,6DAAiB;QACjB,+DAAkB;QAClB,uBAAuB;QACvB,4DAAgB;QAChB,8DAAiB;QACnB,iEAAe;QACb,uGAAwB;QACxB,4DAAgB;QAChB,iEAAiB;QACjB,qBAAqB;QACrB,sEAAe;QACf,iEAAmB;mIAGV,eAAe,mBArBZ,6EAAkB,EAAE,sIAA+B,aAE/D,yDAAY;QACZ,+EAAsB;QACtB,uDAAW;QACX,+DAAmB;QACnB,qBAAqB;QACrB,6DAAiB;QACjB,+DAAkB;QAClB,uBAAuB;QACvB,4DAAgB;QAChB,8DAAiB;QACnB,iEAAe;QACb,uGAAwB;QACxB,4DAAgB;QAChB,iEAAiB;QACjB,qBAAqB;QACrB,sEAAe;QACf,iEAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxC6D;AAChB;AACZ;AACF;AAEtD,qEAAqE;AACA;;;;;;;;;;;ICLpE,wEAAqD;IACpD,qEAAI;IAAA,uDAAiC;;IAAA,4DAAK;IAC1C,qEAAI;IACH,uDAA4B;;IAAA,4EAA2C;IAAnC,sTAAS,gGAAwB,KAAC;IAAC,uDAA+B;;IAAA,4DAAS;IAEjH,qEAAe;;IAJV,0DAAiC;IAAjC,iJAAiC;IAEpC,0DAA4B;IAA5B,wJAA4B;IAA2C,0DAA+B;IAA/B,+IAA+B;;;;IAKvG,qEAAI;IAAA,uDAA0C;;IAAA,4DAAK;IACnD,qEAAI;IAAA,uDAAsD;;IAAA,4DAAK;IAE/D,0EAAwD;IAAtC,yTAAY,gGAAwB,KAAC;IACtD,sEAIkD;;IAElD,4EAAoF;IAAA,wDAA6B;;IAAA,4DAAS;;;IAVvH,0DAA0C;IAA1C,0JAA0C;IAC1C,0DAAsD;IAAtD,sKAAsD;IAKxD,0DAAqD;IAArD,oKAAqD;IAInB,0DAAgD;IAAhD,gHAAgD;IAAC,0DAA6B;IAA7B,+IAA6B;;ADRpH,MAAM,eAAe,GAAG;IACvB,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;IACtC,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAE;CAC5C,CAAC;IASW,+BAA+B,SAA/B,+BAA+B;IAO3C;IACC,gEAAgE;IAC/C,YAAyB,EACzB,WAAuB,EACvB,iBAAkC,EAClC,kBAAqC,EACrC,gBAAkC;QAJlC,iBAAY,GAAZ,YAAY,CAAa;QACzB,gBAAW,GAAX,WAAW,CAAY;QACvB,sBAAiB,GAAjB,iBAAiB,CAAiB;QAClC,uBAAkB,GAAlB,kBAAkB,CAAmB;QACrC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAZpC,yBAAoB,GAAG,gEAAoB,CAAC;QAC5C,0BAAqB,GAAG,kEAAqB,CAAC;QAC9C,gBAAW,GAAgB,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,4DAAgB,EAAE,+DAAmB,CAAC,CAAC,CAAC;QAEjG,gBAAW,GAAG,KAAK,CAAC;IASxB,CAAC;IAEG,WAAW,CAAC,WAAwB;QAC1C,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;QAEjC,IAAI,WAAW,CAAC,OAAO,EAAE;YACxB,OAAO;SACP;QAED,MAAM,IAAI,GAAG;YACZ,KAAK,EAAE,WAAW,CAAC,KAAK;SACxB,CAAC;QAEF,IAAI,CAAC,WAAW;aACd,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC;aACjC,IAAI,CACJ,qEAAc,CAAC,IAAI,CAAC,EACpB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC;YAC9B,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,gBAAgB,CAAC;YACxD,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,gBAAgB,CAAC;YACxD,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,4BAA4B,CAAC;SAClE,CAAC,CACF;aACA,SAAS,CACT,GAAG,EAAE;YACJ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;QACzC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACP,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;YAEvD,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;QACzC,CAAC,CACD,CAAC;IACJ,CAAC;IAEM,UAAU;QAChB,2EAA2E;QAE3E,iBAAiB;IAClB,CAAC;CACD;8GAvDY,+BAA+B;6HAA/B,+BAA+B;QCvB5C,yEAAmB;QAClB,8IAKe;QAEf,yNAac;QACf,4DAAM;;;QArBU,0DAAmB;QAAnB,iFAAmB;;ADsBtB,+BAA+B;IAP3C,mEAAY,EAAE;GAOF,+BAA+B,CAuD3C;AAvD2C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEvB5C;AACA;AAEA;AACA;CAIA;;CAGA;;AACA;AACA;AAEA;AAGA;;;;;;;;;;;;;;;;;IAUaY,kBAAkB,SAAlBA,kBAAkB;EAO9BC,YACkBC,WADlB,EAEkBC,WAFlB,EAGkBC,MAHlB,EAIkBC,iBAJlB,EAKkBC,eALlB,EAMiBC,iBANjB,EAOkBC,gBAPlB,EAQkBC,MARlB,EASqBC,eATrB,EASqD;IARnC;IACA;IACA;IACA;IACA;IACD;IACC;IACA;IACG;IAEpB,KAAKC,SAAL,GAAiB,KAAKC,YAAL,EAAjB;IACA,KAAKC,SAAL,GAAiB,KAAKF,SAAL,CAAeG,QAAhC;IACA,KAAKC,mBAAL,GAA2BvB,8DAA3B;IACA,KAAKwB,qBAAL,GAA6B1B,kEAA7B;IACA,KAAK2B,oBAAL,GAA4B1B,gEAA5B;EACA;;EAEmB,IAAV2B,UAAU;;;IACnB,MAAM;MAACC,MAAD;MAASC;IAAT,IAAoB;MAACD,MAAM,EAAE,EAAT;MAAaC,OAAO,EAAE;IAAtB,CAA1B,CADmB,CAEnB;;IAEA,IAAI,CAACD,MAAD,IAAW,CAACC,OAAhB,EAAyB;MACxB,OAAO,EAAP;IACA;;IAED,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoB,CAApB,CAAlB;IACA,MAAMK,aAAa,GAAQ;MAC1B,MAAM;IADoB,CAA3B;IAGA,OAAO,mBAAa,CAACH,SAAD,CAAb,MAAwB,IAAxB,IAAwBI,aAAxB,GAAwBA,EAAxB,GAA4B,EAAnC;EACA;;EAEuB,IAAbC,aAAa;;;IACvB,MAAM;MAACP,MAAD;MAASC;IAAT,IAAoB;MAACD,MAAM,EAAE,EAAT;MAAaC,OAAO,EAAE;IAAtB,CAA1B,CADuB,CAEvB;;IAEA,IAAI,CAACD,MAAD,IAAW,CAACC,OAAhB,EAAyB;MACxB,OAAO,EAAP;IACA;;IAED,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoB,CAApB,CAAlB;IACA,MAAMK,aAAa,GAAQ;MAC1B,MAAM;IADoB,CAA3B;IAGA,OAAO,mBAAa,CAACH,SAAD,CAAb,MAAwB,IAAxB,IAAwBI,aAAxB,GAAwBA,EAAxB,GAA4B,EAAnC;EACA;;EAEDb,YAAY;IACX,OAAO,KAAKT,WAAL,CAAiBwB,KAAjB,CAAuB;MAC7BC,KAAK,EAAE,CAAC,EAAD,EAAK,CAACvC,+DAAD,EAAsBA,4DAAtB,CAAL,CADsB;MAE7ByC,QAAQ,EAAE,CAAC,EAAD,EAAK,CAACzC,+DAAD,CAAL;IAFmB,CAAvB,CAAP;EAIA;;EAED0C,sBAAsB;IACrB,KAAKtB,MAAL,CAAYuB,IAAZ,CAAiBlC,sIAAjB;IAEA,KAAKa,SAAL,CAAesB,eAAf;EACA;;EAEMC,aAAa,CAACvB,SAAD,EAAqB;IAAA;;IACxC,IAAIA,SAAS,CAACwB,OAAd,EAAuB;MACtB;IACA;;IAED,IAAIC,WAAW,GAAG,KAAlB;;IACA,IAAI;MACH,KAAKlC,WAAL,CACEgC,aADF,CACgBvB,SAAS,CAAC0B,KAD1B,EAEEC,IAFF,CAGE1C,2DAAU,CAAE2C,EAAD,IAAO;QACjB,IAAIA,EAAE,CAACC,KAAH,CAASC,IAAT,KAAkB,IAAtB,EAA4B;UAC3B,KAAKjC,gBAAL,CAAsBkC,IAAtB,CAA2B,4EAA3B,EAAyG;YACxGC,WAAW,EAAE,IAD2F;YAExGC,KAAK,EAAE;cACNC,MAAM,EAAE;YADF,CAFiG;YAKxGC,SAAS,EAAE;UAL6F,CAAzG;QAOA,CARD,MAQO;UACN,MAAMC,SAAS,GAAGR,EAAE,CAACC,KAAH,CAASC,IAAT,KAAkB,IAAlB,GAAyB,iBAAzB,GAA6C,oBAA/D;;UACA,KAAKjC,gBAAL,CAAsBkC,IAAtB,CAA2B,6BAA3B,EAA0D;YACzDC,WAAW,EAAE,IAD4C;YAEzDC,KAAK,EAAE;cACNC,MAAM,EAAE;YADF,CAFkD;YAKzDC,SAAS,EAAE;UAL8C,CAA1D;QAOA;;QACD,OAAOnD,yCAAE,CAAC,IAAD,CAAT;MACA,CApBS,CAHZ,EAyBEqD,SAzBF,CAyBaC,GAAD,IAAa;QACvBb,WAAW,GAAG,CAAC,CAACa,GAAG,CAACC,OAApB;MACA,CA3BF;MA6BA,MAAM;QAACC;MAAD,IAAS,KAAK7C,eAAL,CAAqB8C,QAArB,CAA8BC,WAA7C;MAEA,MAAMC,GAAG,GAAGH,IAAI,GAAG,IAAIA,IAAI,EAAX,GAAgB,GAAhC;MAEA,KAAKjD,WAAL,CACEqD,OADF,GAEEjB,IAFF,CAEO5C,sEAAc,CAAC,IAAD,CAFrB,EAE6BG,qDAAI,CAAC,CAAD,CAFjC,EAGEmD,SAHF;QAAA,oKAGY,WAAOQ,GAAP,EAAc;;;UACnB,MAAMC,QAAQ,GAAG;YACf,WAAWD,GAAG,CAACE,GADA;YAEf,gBAAgB,SAAG,CAACC,QAAJ,MAAY,IAAZ,IAAYlC,aAAZ,GAAY,MAAZ,GAAYA,GAAEmC,WAFf;YAGf,gBAAgBJ,GAAG,CAACK,OAHL;YAIrB,gBAAgB;UAJK,CAAjB;;UAMA,KAAI,CAACnD,eAAL,CAAqBoD,KAArB,CAA2BL,QAA3B;;UACL,KAAI,CAAC/C,eAAL,CAAqBqD,KAArB,CAA2B,iBAA3B,EAA8C;YAAC,gBAAgB;UAAjB,CAA9C;;UACA3B,WAAW,IAAI,KAAI,CAAC4B,UAAL,EAAf;;UACA,IAAI,kBAAY,CAACC,OAAb,CAAqB,eAArB,OAAqC,IAArC,IAAqCC,aAArC,GAAqC,MAArC,GAAqCA,GAAEC,QAAF,CAAW,UAAX,CAAzC,EAAiE;YAChE,MAAM,KAAI,CAAC/D,MAAL,CAAYgE,aAAZ,CAA0B,GAA1B,CAAN;UACA,CAFD,MAEO;YACN,MAAM,KAAI,CAAChE,MAAL,CAAYgE,aAAZ,CAA0B,GAA1B,CAAN,CADM,CAEN;UACA;QACD,CAnBF;;QAAA;UAAA;QAAA;MAAA;IAoBA,CAtDD,CAsDE,OAAOC,GAAP,EAAY;MACb,KAAKhE,iBAAL,CAAuBiE,aAAvB;IACA;EACD;;EAEMN,UAAU,IAChB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;;EAEDO,gBAAgB,IACf;;EAEDC,eAAe;IACd;IAEAC,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,GAAyB,GAAG5E,yEAAkB,aAA9C;EACA;;EAED8E,iBAAiB;IAChBJ,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,GAAyB,GAAG5E,yEAAkB,eAA9C;EACA;;AA5J6B;;;mBAAlBC,oBAAkB8E,gEAAAA,CAAAA,oEAAAA,GAAAA,gEAAAA,CAAAA,uDAAAA,GAAAA,gEAAAA,CAAAA,oDAAAA,GAAAA,gEAAAA,CAAAA,6DAAAA,GAAAA,gEAAAA,CAAAA,4DAAAA,GAAAA,gEAAAA,CAAAA,6DAAAA,GAAAA,gEAAAA,CAAAA,+DAAAA,GAAAA,gEAAAA,CAAAA,gEAAAA,GAAAA,gEAAAA,CAAAA,qFAAAA;AAAA;;;QAAlB9E;EAAkB+E;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MC5B/BL,6DAAAA;MACCA,wDAAAA;MAEAA,6DAAAA,cAAkB,CAAlB,EAAkB,KAAlB,EAAkB,CAAlB;MACoBA,qDAAAA;MAAKA,2DAAAA;MACxBA,6DAAAA;MAAyEA,yDAAAA;QAAA,OAAYM,gCAAZ;MAAoC,CAApC;MACxEN,6DAAAA;MAAwBA,qDAAAA;MAA4BA,2DAAAA;MACpDA,6DAAAA;MAA2BA,qDAAAA;MAAuEA,2DAAAA;MAClGA,6DAAAA;MAKCA,yDAAAA;QAAA,OAASM,qBAAT;MAA0B,CAA1B;MACAN,wDAAAA;MACAA,qDAAAA;;MACDA,2DAAAA;MACAA,6DAAAA;MAKCA,yDAAAA;QAAA,OAASM,uBAAT;MAA4B,CAA5B;MACAN,wDAAAA;MACAA,qDAAAA;;MACDA,2DAAAA;MACAA,6DAAAA;MAAiEA,qDAAAA;MAAEA,2DAAAA;MAEnEA,wDAAAA;;;MASAA,6DAAAA;MACCA,wDAAAA;MAKDA,2DAAAA;MAEAA,6DAAAA;MAAqDA,yDAAAA;QAAA,OAASM,4BAAT;MAAiC,CAAjC;MACpDN,qDAAAA;;MACDA,2DAAAA;MAEAA,6DAAAA;MAMCA,qDAAAA;;MACDA,2DAAAA;MAGFA,6DAAAA,gBAA6B,EAA7B,EAA6B,GAA7B,EAA6B,EAA7B,EAA6B,EAA7B,EAA6B,MAA7B,EAA6B,EAA7B;MAEyCA,qDAAAA;;MAA2CA,2DAAAA;MAClFA,6DAAAA;MAMCA,yDAAAA;QAAA,OAASM,sBAAT;MAA2B,CAA3B;;MACAN,qDAAAA;;MAAqCA,2DAAAA;;;;MAhEUA,wDAAAA;MAAAA,yDAAAA;MAM/CA,wDAAAA;MAAAA,yDAAAA;MAIAA,wDAAAA;MAAAA,iEAAAA,MAAAA,0DAAAA;MAKAA,wDAAAA;MAAAA,yDAAAA;MAIAA,wDAAAA;MAAAA,iEAAAA,MAAAA,0DAAAA;MAOAA,wDAAAA;MAAAA,yDAAAA,oDAA8C,OAA9C,EAA8CA,0DAAAA,wBAA9C,EAA8C,aAA9C,EAA8CA,0DAAAA,mCAA9C;MAQCA,wDAAAA;MAAAA,yDAAAA,6BAA2B,QAA3B,EAA2BM,gCAA3B;MAODN,wDAAAA;MAAAA,iEAAAA,MAAAA,0DAAAA;MAKAA,wDAAAA;MAAAA,yDAAAA,sDAAgD,UAAhD,EAAgDM,qBAAhD;MAIAN,wDAAAA;MAAAA,iEAAAA,MAAAA,0DAAAA;MAMsCA,wDAAAA;MAAAA,gEAAAA,CAAAA,0DAAAA;MAGtCA,wDAAAA;MAAAA,yDAAAA,6CAAuC,YAAvC,EAAuCA,0DAAAA,qEAAvC;MAKAA,wDAAAA;MAAAA,gEAAAA,CAAAA,0DAAAA;;;;;;ADzCS9E,kBAAkB,uDAN9BP,oEAAY,EAMkB,GAAlBO,kBAAkB,CAAlB","sources":["./src/app/auth/pages/auth-log-in/auth-log-in-routing.module.ts","./src/app/auth/pages/auth-log-in/auth-log-in.module.ts","./src/app/auth/pages/auth-log-in/components/auth-reset-password-modal/auth-reset-password-modal.component.ts","./src/app/auth/pages/auth-log-in/components/auth-reset-password-modal/auth-reset-password-modal.component.html","./src/app/auth/pages/auth-log-in/layout/auth-log-in.component.ts","./src/app/auth/pages/auth-log-in/layout/auth-log-in.component.html"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AuthLogInComponent} from \"./layout/auth-log-in.component\";\n\nconst routes: Routes = [\n\t{\n\t\tpath: \"\",\n\t\tcomponent: AuthLogInComponent,\n\t},\n];\n\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule],\n})\nexport class AuthLogInRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { AuthLogInRoutingModule } from \"./auth-log-in-routing.module\";\nimport { AuthLogInComponent} from \"./layout/auth-log-in.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n// import { B2bNgxDividerModule } from \"lib/ngx-divider/src\";\nimport { B2bNgxInputModule} from \"@b2b/ngx-input\";\nimport { B2bNgxButtonModule} from \"@b2b/ngx-button\";\nimport { B2bNgxLinkModule} from \"@b2b/ngx-link\";\n// import { ErrorTailorModule } from \"@ngneat/error-tailor\";\nimport { AuthResetPasswordModalComponent } from \"./components/auth-reset-password-modal/auth-reset-password-modal.component\";\nimport { B2bNgxImageModule } from \"@b2b/ngx-image\";\nimport { AuthRecoverAccountModule } from \"../auth-recover-account/auth-recover-account.module\";\nimport {B2bNgxIconModule} from \"@b2b/ngx-icon\";\nimport {NgxPasswordModule} from \"@b2b/ngx-password\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { B2bNgxDividerModule } from \"@b2b/ngx-divider\";\nimport {TranslateModule} from \"@ngx-translate/core\";\n// import {NgxPasswordModule} from \"@b2b/ngx-password\";\n\n@NgModule({\n\tdeclarations: [AuthLogInComponent, AuthResetPasswordModalComponent],\n  imports: [\n    CommonModule,\n    AuthLogInRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    // ErrorTailorModule,\n    B2bNgxInputModule,\n    B2bNgxButtonModule,\n    // B2bNgxDividerModule,\n    B2bNgxLinkModule,\n    B2bNgxImageModule,\n\t\tTranslateModule,\n    AuthRecoverAccountModule,\n    B2bNgxIconModule,\n    NgxPasswordModule,\n    // NgxPasswordModule,\n    MatDialogModule,\n    B2bNgxDividerModule\n  ],\n})\nexport class AuthLogInModule {}\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component} from \"@angular/core\";\nimport {FormBuilder, FormControl, Validators} from \"@angular/forms\";\nimport { B2bNgxButtonThemeEnum } from \"@b2b/ngx-button\";\nimport { B2bNgxInputThemeEnum } from \"@b2b/ngx-input\";\nimport { HotToastService } from \"@ngneat/hot-toast\";\n// import { FormBuilder, FormControl } from \"@ngneat/reactive-forms\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n// import { NgxSmartModalService } from \"ngx-smart-modal\";\nimport { ApiService } from \"../../../../../core/services/api/api.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\nconst SUBJECT_OPTIONS = [\n\t{ label: \"Support\", value: \"support\" },\n\t{ label: \"Legal Help\", value: \"legal-help\" },\n];\n\n@UntilDestroy()\n@Component({\n\tselector: \"b2b-auth-reset-password-modal\",\n\ttemplateUrl: \"./auth-reset-password-modal.component.html\",\n\tstyleUrls: [\"./auth-reset-password-modal.component.scss\"],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthResetPasswordModalComponent {\n\tpublic readonly b2bNgxInputThemeEnum = B2bNgxInputThemeEnum;\n\tpublic readonly b2bNgxButtonThemeEnum = B2bNgxButtonThemeEnum;\n\tpublic readonly formControl: FormControl = new FormControl(\"\", [Validators.email, Validators.required]);\n\n\tpublic messageSent = false;\n\n\tconstructor(\n\t\t// private readonly _ngxSmartModalService: NgxSmartModalService,\n\t\tprivate readonly _formBuilder: FormBuilder,\n\t\tprivate readonly _apiService: ApiService,\n\t\tprivate readonly _hotToastrService: HotToastService,\n\t\tprivate readonly _changeDetectorRef: ChangeDetectorRef,\n\t\tprivate readonly translateService: TranslateService\n\t) {}\n\n\tpublic sendMessage(formControl: FormControl) {\n\t\tthis.formControl.markAsTouched();\n\n\t\tif (formControl.invalid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst data = {\n\t\t\temail: formControl.value,\n\t\t};\n\n\t\tthis._apiService\n\t\t\t.post(\"auth/forgotPassword\", data)\n\t\t\t.pipe(\n\t\t\t\tuntilDestroyed(this),\n\t\t\t\tthis._hotToastrService.observe({\n\t\t\t\t\tloading: this.translateService.instant(\"TOASTR.LOADING\"),\n\t\t\t\t\tsuccess: this.translateService.instant(\"TOASTR.SUCCESS\"),\n\t\t\t\t\terror: this.translateService.instant(\"AUTH.INVALID_EMAIL_ADDRESS\"),\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe(\n\t\t\t\t() => {\n\t\t\t\t\tthis.messageSent = true;\n\t\t\t\t\tthis._changeDetectorRef.detectChanges();\n\t\t\t\t},\n\t\t\t\t(err) => {\n\t\t\t\t\tthis.formControl.setErrors({ [err.error.code]: true });\n\n\t\t\t\t\tthis._changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t);\n\t}\n\n\tpublic closeModal() {\n\t\t// const modal = this._ngxSmartModalService.getModal(\"createContactModal\");\n\n\t\t// modal.close();\n\t}\n}\n","<div class=\"popup\">\n\t<ng-container *ngIf=\"messageSent; else recoveryForm\">\n\t\t<h1>{{ \"AUTH.RECOVERY\" | translate }}</h1>\n\t\t<h2>\n\t\t\t{{\"AUTH.CHECK\" | translate}}<button (click)=\"sendMessage(formControl)\">{{ \"AUTH.RESEND\" | translate }}</button>\n\t\t</h2>\n\t</ng-container>\n\n\t<ng-template #recoveryForm>\n\t\t<h1>{{ \"AUTH.PASSWORD_RECOVERY\" | translate }}</h1>\n\t\t<h2>{{ \"AUTH.PASSWORD_RECOVERY_DESCRIPTION\" | translate }}</h2>\n\n\t\t<form errorTailor (ngSubmit)=\"sendMessage(formControl)\">\n\t\t\t<input\n\t\t\t\tb2bNgxInput\n\t\t\t\t[placeholder]=\"'PLACEHOLDERS.YOUR_EMAIL' | translate\"\n\t\t\t\t[formControl]=\"formControl\"\n\t\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\" />\n\n\t\t\t<button b2bNgxButton type=\"submit\" [theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLACK\">{{ \"AUTH.SEND\" | translate }}</button>\n\t\t</form>\n\t</ng-template>\n</div>\n","import {ChangeDetectorRef, Component} from \"@angular/core\";\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {B2bNgxButtonThemeEnum} from \"@b2b/ngx-button\";\nimport {B2bNgxInputThemeEnum} from \"@b2b/ngx-input\";\nimport {B2bNgxLinkService, B2bNgxLinkThemeEnum} from \"@b2b/ngx-link\";\n// import {DialogService} from \"@ngneat/dialog\";\nimport {HotToastService} from \"@ngneat/hot-toast\";\n// import {FormBuilder, FormGroup} from \"@ngneat/reactive-forms\";\nimport {UntilDestroy, untilDestroyed} from \"@ngneat/until-destroy\";\nimport {AuthService} from \"../../../services/auth/auth.service\";\n// import {NgxSmartModalService} from \"ngx-smart-modal\";\nimport {of} from \"rxjs\";\nimport {catchError, skip} from \"rxjs/operators\";\nimport {AuthRecoverAccountComponent} from \"../../auth-recover-account/auth-recover-account.component\";\nimport {\n\tAuthResetPasswordModalComponent\n} from \"../components/auth-reset-password-modal/auth-reset-password-modal.component\";\nimport {environment} from \"../../../../../environments/environment\";\nimport {MixpanelService} from \"../../../../core/services/mixpanel/mixpanel.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\n\n@UntilDestroy()\n@Component({\n\tselector: \"b2b-auth-log-in\",\n\ttemplateUrl: \"./auth-log-in.component.html\",\n\tstyleUrls: [\"./auth-log-in.component.scss\"],\n})\nexport class AuthLogInComponent {\n\tpublic readonly formGroup: FormGroup;\n\tpublic readonly b2bNgxLinkThemeEnum: typeof B2bNgxLinkThemeEnum;\n\tpublic readonly b2bNgxButtonThemeEnum: typeof B2bNgxButtonThemeEnum;\n\tpublic readonly b2bNgxInputThemeEnum: typeof B2bNgxInputThemeEnum;\n\tpublic formState: { [key: string]: AbstractControl };\n\n\tconstructor(\n\t\tprivate readonly authService: AuthService,\n\t\tprivate readonly formBuilder: FormBuilder,\n\t\tprivate readonly router: Router,\n\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\tprivate readonly _activatedRoute: ActivatedRoute,\n\t\tpublic readonly b2bNgxLinkService: B2bNgxLinkService,\n\t\tprivate readonly _hotToastService: HotToastService,\n\t\tprivate readonly dialog: MatDialog,\n    \tprivate readonly mixpanelService: MixpanelService\n\t) {\n\t\tthis.formGroup = this.getFormGroup();\n\t\tthis.formState = this.formGroup.controls\n\t\tthis.b2bNgxLinkThemeEnum = B2bNgxLinkThemeEnum;\n\t\tthis.b2bNgxButtonThemeEnum = B2bNgxButtonThemeEnum;\n\t\tthis.b2bNgxInputThemeEnum = B2bNgxInputThemeEnum;\n\t}\n\npublic get emailError() {\n  const {errors, touched} = {errors: '', touched: false};\n  // const {errors, touched} = this.formGroup.getControl(\"email\");\n\n\t\tif (!errors || !touched) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tconst errorCode = Object.keys(errors)[0];\n\t\tconst errorMessages: any = {\n\t\t\t1000: \"Email incorrect\",\n\t\t};\n\t\treturn errorMessages[errorCode] ?? \"\";\n\t}\n\n\tpublic get passwordError() {\n\t\tconst {errors, touched} = {errors: '', touched: false};\n\t\t// const {errors, touched} = this.formGroup.getControl(\"password\");\n\n\t\tif (!errors || !touched) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tconst errorCode = Object.keys(errors)[0];\n\t\tconst errorMessages: any = {\n\t\t\t1001: \"Password incorrect\",\n\t\t};\n\t\treturn errorMessages[errorCode] ?? \"\";\n\t}\n\n\tgetFormGroup() {\n\t\treturn this.formBuilder.group({\n\t\t\temail: [\"\", [Validators.required, Validators.email]],\n\t\t\tpassword: [\"\", [Validators.required]],\n\t\t});\n\t}\n\n\topenResetPasswordModal() {\n\t\tthis.dialog.open(AuthResetPasswordModalComponent)\n\n\t\tthis.formGroup.markAsUntouched();\n\t}\n\n\tpublic logInWithForm(formGroup: FormGroup) {\n\t\tif (formGroup.invalid) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet isRecovered = false;\n\t\ttry {\n\t\t\tthis.authService\n\t\t\t\t.logInWithForm(formGroup.value)\n\t\t\t\t.pipe(\n\t\t\t\t\tcatchError((er) => {\n\t\t\t\t\t\tif (er.error.code === 1016) {\n\t\t\t\t\t\t\tthis._hotToastService.show(\"You have more than two sessions from the same account. Please login again.\", {\n\t\t\t\t\t\t\t\tdismissible: true,\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tborder: \"1px solid #E63D3D\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tautoClose: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst errorType = er.error.code === 1000 ? \"Incorrect email\" : \"Incorrect password\";\n\t\t\t\t\t\t\tthis._hotToastService.show(\"Incorrect email or password\", {\n\t\t\t\t\t\t\t\tdismissible: true,\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tborder: \"1px solid #E63D3D\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tautoClose: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn of(null);\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.subscribe((res: any) => {\n\t\t\t\t\tisRecovered = !!res.message;\n\t\t\t\t});\n\n\t\t\tconst {from} = this._activatedRoute.snapshot.queryParams;\n\n\t\t\tconst url = from ? `/${from}` : \"/\";\n\n\t\t\tthis.authService\n\t\t\t\t.getUser()\n\t\t\t\t.pipe(untilDestroyed(this), skip(1))\n\t\t\t\t.subscribe(async (val) => {\n          const mixpanel = {\n            'User_id': val._id,\n            'Account type': val.rootRole?.displayName,\n            'Company Name': val.company,\n\t\t\t\t\t\t'Login Method': 'Email'\n          };\n          this.mixpanelService.logIn(mixpanel);\n\t\t\t\t\tthis.mixpanelService.track('Login completed', {'Login Method': 'Email'});\n\t\t\t\t\tisRecovered && this.showDialog();\n\t\t\t\t\tif (localStorage.getItem(\"blocked-route\")?.includes(\"tradebid\")) {\n\t\t\t\t\t\tawait this.router.navigateByUrl(\"/\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this.router.navigateByUrl(\"/\");\n\t\t\t\t\t\t// await this.router.navigateByUrl(localStorage.getItem(\"blocked-route\") || \"/\");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} catch (err) {\n\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t}\n\t}\n\n\tpublic showDialog(): void {\n\t\t// this._dialogService\n\t\t// \t.open(AuthRecoverAccountComponent, {\n\t\t// \t\twidth: \"40vw\",\n\t\t// \t\theight: \"auto\",\n\t\t// \t\tminHeight: \"0\",\n\t\t// \t\twindowClass: \"report-dialog\",\n\t\t// \t})\n\t\t// \t.afterClosed$.pipe(untilDestroyed(this))\n\t\t// \t.subscribe();\n\t}\n\n\tregistrationLink() {\n\t}\n\n\tlogInWithGoogle() {\n\t\t// this.authService.logInWithGoogle();\n\n\t\tdocument.location.href = `${environment.apiUrl}auth/google`;\n\t}\n\n\tlogInWithLinkedIn() {\n\t\tdocument.location.href = `${environment.apiUrl}auth/linkedin`;\n\t}\n}\n","<div class=\"login\">\n\t<div class=\"go-back\">\n\t</div>\n\t<div class=\"body\">\n\t\t<div class=\"title\">Login</div>\n\t\t<form errorTailor class=\"auth-log-in__main-form\" [formGroup]=\"formGroup\" (ngSubmit)=\"logInWithForm(formGroup)\">\n\t\t\t<div class=\"form-title\">We connect traders globally.</div>\n\t\t\t<div class=\"form-subtitle\">The B2B platform for wholesale sellers and buyers on the global market.</div>\n\t\t\t<button\n\t\t\t\tb2bNgxButton\n\t\t\t\ttype=\"button\"\n\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_WHITE\"\n\t\t\t\tclass=\"auth-log-in__log-in-with-google-button\"\n\t\t\t\t(click)=\"logInWithGoogle()\">\n\t\t\t\t<img b2bNgxImage name=\"google\" class=\"auth-log-in__log-in-with-google-button__icon\"/>\n\t\t\t\t{{ \"AUTH.LOG_IN_GOOGLE\" | translate }}\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tb2bNgxButton\n\t\t\t\ttype=\"button\"\n\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_WHITE\"\n\t\t\t\tclass=\"auth-log-in__log-in-with-google-button\"\n\t\t\t\t(click)=\"logInWithLinkedIn()\">\n\t\t\t\t<img b2bNgxImage name=\"linkedin\" class=\"auth-log-in__log-in-with-google-button__icon\"/>\n\t\t\t\t{{ \"AUTH.LOG_IN_LINKEDIN\" | translate }}\n\t\t\t</button>\n\t\t\t<b2b-ngx-divider theme=\"white\" class=\"auth-log-in__main-divider\">or</b2b-ngx-divider>\n\n\t\t\t<input\n\t\t\t\tb2bNgxInput\n\t\t\t\ttype=\"email\"\n\t\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_GRAY\"\n\t\t\t\t[label]=\"'LABELS.EMAIL' | translate\"\n\t\t\t\tlabelClass=\"auth-log-in__main-input\"\n\t\t\t\tformControlName=\"email\"\n\t\t\t\t[placeholder]=\"'PLACEHOLDERS.YOUR_EMAIL' | translate\"/>\n\n\t\t\t<div class=\"control-wrapper\">\n\t\t\t\t<b2b-ngx-password\n\t\t\t\t\t[hidePasswordErrors]=\"true\"\n\t\t\t\t\t[errors]=\"formState['password'].errors\"\n\t\t\t\t\tformControlName=\"password\">\n\t\t\t\t</b2b-ngx-password>\n\t\t\t</div>\n\n\t\t\t<button class=\"auth-log-in__main-link\" type=\"button\" (click)=\"openResetPasswordModal()\">\n\t\t\t\t{{ \"AUTH.RESET_PASSWORD\" | translate }}\n\t\t\t</button>\n\n\t\t\t<button\n\t\t\t\tb2bNgxButton\n\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLACK\"\n\t\t\t\t[disabled]=\"formGroup.invalid\"\n\t\t\t\tclass=\"auth-log-in__log-in-button\"\n\t\t\t\ttype=\"submit\">\n\t\t\t\t{{ \"AUTH.LOG_IN\" | translate }}\n\t\t\t</button>\n\t\t</form>\n\t</div>\n\t<div class=\"other-page-link\">\n\t\t<p class=\"auth-log-in__header-text-wrapper\">\n\t\t\t<span class=\"auth-log-in__header-text\">{{ \"AUTH.NOT_REGISTERED_YET\" | translate }}</span>\n\t\t\t<a\n\t\t\t\tb2bNgxLink\n\t\t\t\t[theme]=\"b2bNgxLinkThemeEnum.TEXT_BLUE\"\n\t\t\t\t[routerLink]=\"b2bNgxLinkService.getLink('/auth/register-credentials') | async\"\n\t\t\t\tclass=\"auth-log-in__header-link\"\n\t\t\t\tqueryParamsHandling=\"merge\"\n\t\t\t\t(click)=\"registrationLink()\"\n\t\t\t>{{ \"AUTH.REGISTRATION\" | translate }}</a>\n\t\t</p>\n\t</div>\n</div>\n"],"names":["ChangeDetectorRef","Validators","B2bNgxButtonThemeEnum","B2bNgxInputThemeEnum","B2bNgxLinkThemeEnum","UntilDestroy","untilDestroyed","of","catchError","skip","AuthResetPasswordModalComponent","environment","AuthLogInComponent","constructor","authService","formBuilder","router","changeDetectorRef","_activatedRoute","b2bNgxLinkService","_hotToastService","dialog","mixpanelService","formGroup","getFormGroup","formState","controls","b2bNgxLinkThemeEnum","b2bNgxButtonThemeEnum","b2bNgxInputThemeEnum","emailError","errors","touched","errorCode","Object","keys","errorMessages","_a","passwordError","group","email","required","password","openResetPasswordModal","open","markAsUntouched","logInWithForm","invalid","isRecovered","value","pipe","er","error","code","show","dismissible","style","border","autoClose","errorType","subscribe","res","message","from","snapshot","queryParams","url","getUser","val","mixpanel","_id","rootRole","displayName","company","logIn","track","showDialog","getItem","_b","includes","navigateByUrl","err","detectChanges","registrationLink","logInWithGoogle","document","location","href","apiUrl","logInWithLinkedIn","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}