{"version":3,"file":"src_app_admin_pages_admin-manager_admin-manager_module_ts.js","mappings":"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","sources":["./src/app/admin/pages/admin-manager/admin-manager-routing.module.ts","./src/app/admin/pages/admin-manager/admin-manager.module.ts","./src/app/admin/pages/admin-manager/layout/admin-manager.component.ts","./src/app/admin/pages/admin-manager/layout/admin-manager.component.html","./src/app/admin/pages/admin-manager/shared/services/admin-manager.service.ts","./src/app/core/helpers/validator/only-number.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AdminManagerComponent } from \"./layout/admin-manager.component\";\n\nconst routes: Routes = [\n\t{\n\t\tpath: \"\",\n\t\tcomponent: AdminManagerComponent,\n\t},\n];\n\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule],\n})\nexport class AdminManagerRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { AdminManagerRoutingModule } from \"./admin-manager-routing.module\";\nimport { AdminManagerComponent } from \"./layout/admin-manager.component\";\nimport { B2bNgxInputModule } from \"@b2b/ngx-input\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { B2bNgxButtonModule } from \"@b2b/ngx-button\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport {B2bNgxIconModule} from \"@b2b/ngx-icon\";\n\n@NgModule({\n\tdeclarations: [AdminManagerComponent],\n    imports: [\n        CommonModule,\n        AdminManagerRoutingModule,\n        B2bNgxInputModule,\n        ReactiveFormsModule,\n        B2bNgxButtonModule,\n        FormsModule,\n        B2bNgxInputModule,\n        MatTableModule,\n        B2bNgxIconModule,\n    ],\n})\nexport class AdminManagerModule {}\n","import { ChangeDetectorRef, Component, OnInit } from \"@angular/core\";\nimport { B2bNgxButtonThemeEnum } from \"@b2b/ngx-button\";\nimport { B2bNgxInputThemeEnum } from \"@b2b/ngx-input\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Clipboard } from \"@angular/cdk/clipboard\";\nimport { HotToastService } from \"@ngneat/hot-toast\";\nimport { AdminManagerService } from \"../shared/services/admin-manager.service\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\nimport { onlyNumber } from \"../../../../core/helpers/validator/only-number\";\nimport { getName } from \"country-list\";\n\n@UntilDestroy()\n@Component({\n\tselector: \"b2b-admin-manager\",\n\ttemplateUrl: \"./admin-manager.component.html\",\n\tstyleUrls: [\"./admin-manager.component.scss\"],\n})\nexport class AdminManagerComponent implements OnInit {\n\tpublic b2bNgxInputThemeEnum = B2bNgxInputThemeEnum;\n\tpublic b2bNgxButtonThemeEnum = B2bNgxButtonThemeEnum;\n\n\tpublic managersList: any[] = [];\n\tpublic userList: any[] = [];\n\tpublic displayedColumnsManagers: string[] = [\"refId\", \"firstName\", \"lastName\", \"delete\"];\n\tpublic displayedColumnsUsers: string[] = [\"email\", \"registrationType\", \"country\", \"registrationDate\", \"company\"];\n\tpublic generatedLink: string = \"\";\n\tpublic formGroup: FormGroup = this.formBuilder.group({\n\t\tfirstName: [null, Validators.required],\n\t\tlastName: [null, Validators.required],\n\t\turl: [null, Validators.required]\n\t});\n\n\tpublic usersByRefIdGroup: FormGroup = this.formBuilder.group({\n\t\trefId: [null, [Validators.required, onlyNumber()]],\n\t});\n\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate clipboard: Clipboard,\n\t\tprivate hotToastService: HotToastService,\n\t\tprivate adminManagerService: AdminManagerService,\n\t\tprivate changeDetectionRef: ChangeDetectorRef\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.updateManagerList();\n\t}\n\n\tpublic generateLink(formGroup: FormGroup): void {\n\t\tif (!formGroup.valid) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.adminManagerService\n\t\t\t.addManager(formGroup.value.firstName, formGroup.value.lastName, formGroup.value.url)\n\t\t\t.pipe(untilDestroyed(this))\n\t\t\t.subscribe((data) => {\n\t\t\t\tthis.generatedLink = data.link;\n\t\t\t\tthis.updateManagerList();\n\t\t\t\tthis.changeDetectionRef.detectChanges();\n\t\t\t});\n\n\t\tthis.formGroup.reset();\n\t\tthis.updateManagerList();\n\t}\n\n\tpublic getUsersByRefId(formGroup: FormGroup): void {\n\t\tif (!formGroup.valid) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.adminManagerService.getUsersByRefId(parseInt(formGroup.value.refId)).subscribe((data) => {\n\t\t\tif (!data.length) {\n\t\t\t\tthis.hotToastService.show(\"There's no users found with current refId\", {\n\t\t\t\t\tdismissible: true,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tborder: \"1px solid #3D48E6\",\n\t\t\t\t\t},\n\t\t\t\t\tautoClose: true,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.userList = data[0].users;\n\t\t\tthis.changeDetectionRef.detectChanges();\n\t\t});\n\t}\n\n\tpublic isApproved(products: Array<any>): boolean {\n\t\t\treturn products.some(product => product.productApproved);\n\t}\n\n\tpublic copyLink(link: string = this.generatedLink): void {\n\t\tthis.clipboard.copy(link);\n\t\tthis.hotToastService.show(\"Link copied to clipboard\", {\n\t\t\tdismissible: true,\n\t\t\tstyle: {\n\t\t\t\tborder: \"1px solid #3D48E6\",\n\t\t\t},\n\t\t\tautoClose: true,\n\t\t});\n\t}\n\n\tpublic deleteManager(refId: string): void {\n\t\tthis.adminManagerService.deleteManagerById(refId).subscribe(() => this.updateManagerList());\n\t}\n\n\tpublic getCountryNameByCode(countryCode: string): string {\n\t\treturn countryCode ? getName(countryCode) : \"\";\n\t}\n\n\tprivate updateManagerList(): void {\n\t\tthis.adminManagerService.getManagers().subscribe((data) => {\n\t\t\tthis.managersList = data;\n\t\t\tthis.changeDetectionRef.detectChanges();\n\t\t});\n\t}\n}\n","<div class=\"admin-manager\">\n\t<form class=\"admin-manager__form-group\" [formGroup]=\"formGroup\" (ngSubmit)=\"generateLink(formGroup)\">\n\t\t<div class=\"admin-manager__form-group__container\">\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tb2bNgxInput\n\t\t\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_WHITE\"\n\t\t\t\t\tformControlName=\"firstName\"\n\t\t\t\t\tplaceholder=\"First name\"\n\t\t\t\t\tlabel=\"Enter first name\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tb2bNgxInput\n\t\t\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_WHITE\"\n\t\t\t\t\tformControlName=\"lastName\"\n\t\t\t\t\tplaceholder=\"Second name\"\n\t\t\t\t\tlabel=\"Enter second name\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<input type=\"text\" b2bNgxInput\n\t\t\t\t\t [theme]=\"b2bNgxInputThemeEnum.BACKGROUND_WHITE\"\n\t\t\t\t\t formControlName=\"url\"\n\t\t\t\t\t placeholder=\"https://b2b.discount/blog\"\n\t\t\t\t\t label=\"Enter the link for which the ref will be generated\"\n\t\t\t\t\t class=\"mb-3\">\n\t\t<button b2bNgxButton [theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLACK\">Generate Link</button>\n\t</form>\n\n\t<div class=\"admin-manager__generated-link\">\n\t\t<input\n\t\t\tb2bNgxInput\n\t\t\t[(ngModel)]=\"generatedLink\"\n\t\t\tdisabled\n\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_WHITE\"\n\t\t\tplaceholder=\"Here will be generated link\" />\n\t\t<button\n\t\t\tb2bNgxButton\n\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLACK\"\n\t\t\t(click)=\"copyLink()\"\n\t\t\t[disabled]=\"!generatedLink\">\n\t\t\tCopy URL\n\t\t</button>\n\t</div>\n\n\t<table mat-table [dataSource]=\"managersList\" class=\"mat-elevation-z8\">\n\t\t<ng-container matColumnDef=\"refId\">\n\t\t\t<th class=\"th-id\" mat-header-cell *matHeaderCellDef>Ref Id</th>\n\t\t\t<td mat-cell *matCellDef=\"let element\" (click)=\"copyLink(element.link)\">\n\t\t\t\t{{ element.refId }}\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"firstName\">\n\t\t\t<th class=\"th-firstName\" mat-header-cell *matHeaderCellDef>First Name</th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">{{ element.firstName }}</td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"lastName\">\n\t\t\t<th class=\"th-lastName\" mat-header-cell *matHeaderCellDef>Last Name</th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">{{ element.lastName }}</td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"delete\">\n\t\t\t<th class=\"th-firstName\" mat-header-cell *matHeaderCellDef></th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">\n\t\t\t\t<button\n\t\t\t\t\tclass=\"delete-btn\"\n\t\t\t\t\tb2bNgxButton\n\t\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_RED\"\n\t\t\t\t\t(click)=\"deleteManager(element.refId)\">\n\t\t\t\t\tDelete\n\t\t\t\t</button>\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<tr mat-header-row *matHeaderRowDef=\"displayedColumnsManagers\"></tr>\n\t\t<tr mat-row *matRowDef=\"let row; columns: displayedColumnsManagers\"></tr>\n\t</table>\n\n\t<form\n\t\tclass=\"admin-manager__generated-link\"\n\t\t[formGroup]=\"usersByRefIdGroup\"\n\t\t(ngSubmit)=\"getUsersByRefId(usersByRefIdGroup)\">\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tb2bNgxInput\n\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_WHITE\"\n\t\t\tformControlName=\"refId\"\n\t\t\tplaceholder=\"Ref id\" />\n\t\t<button b2bNgxButton [theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLACK\">Submit</button>\n\t</form>\n\t<div *ngIf=\"userList.length\">Total count: {{ userList.length }}</div>\n\n\t<table *ngIf=\"userList?.length\" mat-table [dataSource]=\"userList\" class=\"mat-elevation-z8 w-100\">\n\t\t<ng-container matColumnDef=\"email\">\n\t\t\t<th class=\"th-firstName\" mat-header-cell *matHeaderCellDef>Email</th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">\n\t\t\t\t{{ element.email }}\n\n\t\t\t\t<img *ngIf=\"element.products?.length && isApproved(element.products)\" b2bNgxIcon [name]=\"'check-blue'\" />\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"registrationType\">\n\t\t\t<th class=\"th-firstName\" mat-header-cell *matHeaderCellDef>Registration type</th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">\n\t\t\t\t{{ element.typeRegistration }}\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"country\">\n\t\t\t<th class=\"th-firstName\" mat-header-cell *matHeaderCellDef>Country</th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">\n\t\t\t\t{{ getCountryNameByCode(element.userData[0]?.phone?.countryCode) }}\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"registrationDate\">\n\t\t\t<th class=\"th-firstName\" mat-header-cell *matHeaderCellDef>Registration date</th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">\n\t\t\t\t{{ element.userData[0]?.createdAt | date: \"MM/d/yy\" }}\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"company\">\n\t\t\t<th class=\"th-firstName\" mat-header-cell *matHeaderCellDef>Company name</th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">\n\t\t\t\t{{ element?.userData[0]?.company }}\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<tr mat-header-row *matHeaderRowDef=\"displayedColumnsUsers\"></tr>\n\t\t<tr mat-row *matRowDef=\"let row; columns: displayedColumnsUsers\"></tr>\n\t</table>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpEvent } from \"@angular/common/http\";\n\nimport { Observable } from \"rxjs\";\n\nimport { ApiService } from \"../../../../../core/services/api/api.service\";\n\nexport interface Manager {\n\tfirstName: string;\n\trefId: number;\n\tlastName: string;\n}\n\n@Injectable({\n\tprovidedIn: \"root\",\n})\nexport class AdminManagerService {\n\tconstructor(private apiService: ApiService) {}\n\n\tpublic addManager(firstName: string, lastName: string, url: string): Observable<any> {\n\t\treturn this.apiService.post(\"managers/add-new-manager\", { firstName, lastName, url });\n\t}\n\n\tpublic getUsersByRefId(refId: number): Observable<any> {\n\t\treturn this.apiService.get(`statistics/get-users-list?refId=${refId}`);\n\t}\n\n\tpublic deleteManagerById(refId: string): Observable<any> {\n\t\treturn this.apiService.delete(`managers/delete-manager?refId=${refId}`);\n\t}\n\n\tpublic getManagers(refId?: string): Observable<any> {\n\t\tif (refId) {\n\t\t\treturn this.apiService.get(`managers/get-managers?refId=${refId}`);\n\t\t} else {\n\t\t\treturn this.apiService.get(\"managers/get-managers\");\n\t\t}\n\t}\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport function onlyNumber(): ValidatorFn {\n\treturn (control: AbstractControl): ValidationErrors | null =>\n\t\t/^[0-9.]*$/g.test(control.value) ? null : { number: true };\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}