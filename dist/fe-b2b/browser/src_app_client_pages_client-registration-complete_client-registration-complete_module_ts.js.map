{"version":3,"file":"src_app_client_pages_client-registration-complete_client-registration-complete_module_ts.js","mappings":"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","sources":["./src/app/client/pages/client-registration-complete/client-registration-complete-routing.module.ts","./src/app/client/pages/client-registration-complete/client-registration-complete.module.ts","./src/app/client/pages/client-registration-complete/layout/client-registration-complete.component.ts","./src/app/client/pages/client-registration-complete/layout/client-registration-complete.component.html"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { ClientRegistrationCompleteComponent } from \"./layout/client-registration-complete.component\";\n\nconst routes: Routes = [\n\t{\n\t\tpath: \"\",\n\t\tcomponent: ClientRegistrationCompleteComponent,\n\t},\n];\n\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule],\n})\nexport class ClientRegistrationCompleteRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { B2bNgxButtonModule } from \"@b2b/ngx-button\";\nimport { B2bNgxImageModule } from \"@b2b/ngx-image\";\nimport { B2bNgxInputModule } from \"@b2b/ngx-input\";\nimport { ClientRegistrationCompleteRoutingModule } from \"./client-registration-complete-routing.module\";\nimport { ClientRegistrationCompleteComponent } from \"./layout/client-registration-complete.component\";\nimport {TranslateModule} from \"@ngx-translate/core\";\n\n@NgModule({\n\tdeclarations: [ClientRegistrationCompleteComponent],\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tClientRegistrationCompleteRoutingModule,\n\t\tB2bNgxImageModule,\n\t\tB2bNgxInputModule,\n\t\tB2bNgxButtonModule,\n\t\tTranslateModule,\n\t\t// ErrorTailorModule,\n\t],\n})\nexport class ClientRegistrationCompleteModule {}\n","import { ChangeDetectorRef, Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { B2bNgxButtonThemeEnum } from '@b2b/ngx-button';\nimport { B2bNgxInputThemeEnum } from '@b2b/ngx-input';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { skip } from 'rxjs';\nimport { AuthService } from 'src/app/auth/services/auth/auth.service';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@UntilDestroy()\n@Component({\n  selector: 'b2b-client-registration-complete',\n  templateUrl: './client-registration-complete.component.html',\n  styleUrls: ['./client-registration-complete.component.scss'],\n})\nexport class ClientRegistrationCompleteComponent {\n  public readonly formGroup: FormGroup;\n  public readonly b2bNgxButtonThemeEnum: typeof B2bNgxButtonThemeEnum;\n  public readonly b2bNgxInputThemeEnum: typeof B2bNgxInputThemeEnum;\n\n  constructor(\n    private readonly _cdr: ChangeDetectorRef,\n    private readonly _activatedRoute: ActivatedRoute,\n    private readonly _authService: AuthService,\n    private readonly _formBuilder: FormBuilder,\n    private readonly _router: Router\n  ) {\n    this.formGroup = this.getFormGroup();\n    this.b2bNgxButtonThemeEnum = B2bNgxButtonThemeEnum;\n    this.b2bNgxInputThemeEnum = B2bNgxInputThemeEnum;\n  }\n\n  getFormGroup() {\n    return this._formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  openResetPasswordModal() {\n    this.formGroup.markAsUntouched();\n  }\n\n  async logInWithForm(formGroup: FormGroup) {\n    if (formGroup.invalid) {\n      return;\n    }\n\n    try {\n      await this._authService.logInWithForm(formGroup.value).toPromise();\n\n      const { from } = this._activatedRoute.snapshot.queryParams;\n\n      const url = from ? `/${from}` : '/';\n\n      this._authService\n        .getUser()\n        .pipe(untilDestroyed(this), skip(1))\n        .subscribe(async (user) => {\n          if (user.rootRole.name === 'supplier') {\n            await this._router.navigateByUrl(\n              '/profile/your-account/company-information',\n              { state: { showPopUp: true } }\n            );\n          } else {\n            await this._router.navigateByUrl(url);\n          }\n        });\n    } catch (err: any) {\n      const { code } = err.error;\n\n      // const field: any =\n      //   {\n          // 1000: 'email',\n          // 1001: 'password',\n          // 1014: 'email',\n      //   }[code] ?? null;\n\n      const codesObj: any = {\n        1000: 'email',\n        1001: 'password',\n        1014: 'email',\n      }\n\n      const field: string = codesObj[code];\n\n      if (!field) {\n        return;\n      }\n\n      this.formGroup.get(field).setErrors({ [code]: true });\n      this._cdr.detectChanges();\n    }\n  }\n}\n","<div class=\"registration-complete\">\n\t<div class=\"registration-complete__body\">\n\t\t<img b2bNgxImage name=\"success\" />\n\t\t<p class=\"registration-complete__body-title\">{{ \"GOOGLE-AUTH-COMPLETE.TITLE\" | translate }}</p>\n\t\t<span>\n\t\t\t{{ \"REGISTRATION_COMPLETE.SUBTITLE\" | translate}}\n\t\t</span>\n\n\t\t<div class=\"auth-log-in__main\">\n\t\t\t<h2 class=\"auth-log-in__main-title\">{{ \"REGISTRATION_COMPLETE.LOG_IN\" | translate}}</h2>\n\n\t\t\t<form class=\"auth-log-in__main-form\" [formGroup]=\"formGroup\" (ngSubmit)=\"logInWithForm(formGroup)\">\n\t\t\t\t<input\n\t\t\t\t\tb2bNgxInput\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_WHITE\"\n\t\t\t\t\t[label]=\"'LABELS.LOGIN' | translate\"\n\t\t\t\t\tlabelClass=\"auth-log-in__main-input\"\n\t\t\t\t\tformControlName=\"email\"\n\t\t\t\t\t[placeholder]=\"'PLACEHOLDERS.YOUR_EMAIL' | translate\" />\n\t\t\t\t<input\n\t\t\t\t\tb2bNgxInput\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t[theme]=\"b2bNgxInputThemeEnum.BACKGROUND_WHITE\"\n\t\t\t\t\t[label]=\"'LABELS.PASSWORD' | translate\"\n\t\t\t\t\tlabelClass=\"auth-log-in__main-input\"\n\t\t\t\t\tformControlName=\"password\"\n\t\t\t\t\t[placeholder]=\"'PLACEHOLDERS.YOUR_PASSWORD' | translate\" />\n\n\t\t\t\t<button class=\"auth-log-in__main-link\" type=\"button\" (click)=\"openResetPasswordModal()\">\n\t\t\t\t\t{{ \"AUTH.RESET_PASSWORD\" | translate }}\n\t\t\t\t</button>\n\n\t\t\t\t<button\n\t\t\t\t\tb2bNgxButton\n\t\t\t\t\t[theme]=\"b2bNgxButtonThemeEnum.BACKGROUND_BLACK\"\n\t\t\t\t\tclass=\"auth-log-in__log-in-button\"\n\t\t\t\t\ttype=\"submit\">\n\t\t\t\t\t{{ \"AUTH.LOG_IN\" | translate }}\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t</div>\n</div>\n"],"names":["ChangeDetectorRef","Validators","B2bNgxButtonThemeEnum","B2bNgxInputThemeEnum","UntilDestroy","untilDestroyed","skip","ClientRegistrationCompleteComponent","constructor","_cdr","_activatedRoute","_authService","_formBuilder","_router","formGroup","getFormGroup","b2bNgxButtonThemeEnum","b2bNgxInputThemeEnum","group","email","required","password","openResetPasswordModal","markAsUntouched","logInWithForm","invalid","value","toPromise","from","snapshot","queryParams","url","getUser","pipe","subscribe","user","rootRole","name","navigateByUrl","state","showPopUp","err","code","error","codesObj","field","get","setErrors","detectChanges","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}