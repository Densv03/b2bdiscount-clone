{"version":3,"file":"common.js","mappings":"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","sources":["./projects/ngx-back/src/lib/layout/ngx-back.component.ts","./projects/ngx-back/src/lib/layout/ngx-back.component.html","./projects/ngx-back/src/lib/ngx-back.module.ts","./src/app/admin/services/admin-billing.service.ts","./src/app/auth/components/auth-guard/auth-guard.component.ts","./src/app/auth/components/auth-guard/auth-guard.component.html","./src/app/auth/guards/companyInformation/company-information.guard.ts","./src/app/client/pages/client-about-us/section-info.enum.ts","./src/app/client/pages/client-marketplace/pages/category-listing/category-listing.service.ts","./src/app/client/pages/client-tradebid/tradebid.service.ts","./src/app/client/services/blog/blog.service.ts","./src/app/client/services/chat/chat.service.ts","./src/app/client/services/wiki/wiki.service.ts","./src/app/client/shared/enums/browser-storage-keys.enum.ts","./src/app/client/shared/services/homepage/homepage.service.ts","./src/app/core/helpers/validator/site-link.ts","./node_modules/@angular/cdk/fesm2015/clipboard.mjs","./node_modules/@nguniversal/express-engine/fesm2015/tokens.mjs"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\n\n@Component({\n\tselector: \"b2b-ngx-back\",\n\ttemplateUrl: \"./ngx-back.component.html\",\n\tstyleUrls: [\"./ngx-back.component.scss\"],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxBackComponent {\n\t@Input() public link: string = '';\n\t@Input() public className: string = '';\n\n\tpublic get linkClassName() {\n\t\tconst defaultClassName = `flex items-center text-gray-500`;\n\n\t\treturn `${defaultClassName} ${this.className}`;\n\t}\n}\n","<a b2bNgxLink [routerLink]=\"link\" [class]=\"linkClassName\">\n\t<img b2bNgxIcon class=\"w-6\" name=\"arrow-l\" />\n\t<span class=\"ml-2\">Back</span>\n</a>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgxBackComponent } from \"./layout/ngx-back.component\";\nimport { B2bNgxIconModule } from \"@b2b/ngx-icon\";\nimport { B2bNgxLinkModule } from \"@b2b/ngx-link\";\nimport { RouterModule } from \"@angular/router\";\n\n@NgModule({\n\timports: [CommonModule, RouterModule, B2bNgxIconModule, B2bNgxLinkModule],\n\tdeclarations: [NgxBackComponent],\n\texports: [NgxBackComponent],\n})\nexport class B2bNgxBackModule {}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, filter, map, Observable} from 'rxjs';\nimport {ApiService} from \"../../core/services/api/api.service\";\nimport {GetPaymentPlanResponse} from \"../../core/models/admin-billing/responses/get-payment-plan-response.model\";\nimport {first} from \"rxjs/operators\";\nimport {AddPaymentPlanBody} from \"../../core/models/admin-billing/add-payment-plan-body.model\";\nimport {AddPaymentPlanResponse} from \"../../core/models/admin-billing/responses/add-payment-plan-response.model\";\nimport {UpdatePaymentPlanResponse} from \"../../core/models/admin-billing/responses/update-payment-plan-response.model\";\nimport {HttpEvent} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminBillingService {\n  constructor(private apiService: ApiService) {}\n\n  private currentPaymentPlans: BehaviorSubject<GetPaymentPlanResponse[]> = new BehaviorSubject<\n    GetPaymentPlanResponse[]\n  >([]);\n\n  public getCurrentPaymentPlans(): Observable<GetPaymentPlanResponse[]> {\n    return this.currentPaymentPlans.asObservable();\n  }\n\n  public updateCurrentPaymentPlans(type?: \"quotes\" | \"subscriptions\"): void {\n    const queryString = type ? `?type=${type}` : \"\";\n    this.apiService\n      .get<GetPaymentPlanResponse[]>(`authorize-net/get-payment-plan${queryString}`)\n      .pipe(\n        filter((data) => !!data),\n        first()\n      )\n      .subscribe((data) => this.currentPaymentPlans.next(data));\n  }\n\n  public addPaymentPlan(data: AddPaymentPlanBody): Observable<HttpEvent<AddPaymentPlanResponse>> {\n    return this.apiService.post<AddPaymentPlanResponse>(\"authorize-net/add-new-payment-plan\", data);\n  }\n\n  public updatePaymentPlanById(id: string, data: Partial<AddPaymentPlanBody>): Observable<UpdatePaymentPlanResponse> {\n    return this.apiService.put<UpdatePaymentPlanResponse>(\"authorize-net/update-payment-plan\", { id, ...data });\n  }\n\n  public deletePaymentPlanById(id: string): Observable<any> {\n    return this.apiService.delete(`authorize-net/delete-payment-plan`, { body: { id } });\n  }\n\n  public getPaymentPlans(type?: \"quotes\" | \"subscriptions\"): Observable<GetPaymentPlanResponse[]> {\n    const queryString = type ? `?type=${type}` : \"\";\n    return this.apiService.get<GetPaymentPlanResponse[]>(`authorize-net/get-payment-plan${queryString}`);\n  }\n\n  public getQuotesPaymentPlansToDisplay(): Observable<GetPaymentPlanResponse[]> {\n    return this.apiService.get<GetPaymentPlanResponse[]>(`authorize-net/get-payment-plan?type=quotes`).pipe(\n      map((data) => {\n        if (data.length > 3) {\n          return data.slice(0, 3);\n        }\n\n        return data;\n      })\n    );\n  }\n}\n","import { Component, Inject, OnInit, Optional } from \"@angular/core\";\nimport { B2bNgxLinkService } from \"@b2b/ngx-link\";\nimport { HotToastRef } from \"@ngneat/hot-toast\";\n\n@Component({\n\tselector: \"b2b-auth-guard\",\n\ttemplateUrl: \"./auth-guard.component.html\",\n\tstyleUrls: [\"./auth-guard.component.scss\"],\n})\nexport class AuthGuardComponent {\n\tconstructor(\n\t\tpublic readonly b2bNgxLinkService: B2bNgxLinkService,\n\t\t@Optional() @Inject(HotToastRef) public toastRef: HotToastRef<any>\n\t) {}\n}\n","<ng-container>\n\t\t<p>\n\t\t\tTo see all the available offers of unclaimed cargo you need to pass a free registration.\n\t\t</p>\n</ng-container>\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { TradebidService } from \"../../../client/pages/client-tradebid/tradebid.service\";\nimport { catchError, map } from \"rxjs/operators\";\n\n@Injectable({\n\tprovidedIn: \"root\",\n})\nexport class CompanyInformationGuard implements CanActivate {\n\tprivate queryParams: string[];\n\n\tconstructor(private tradebidService: TradebidService, private router: Router) {\n\t\tthis.queryParams = [\"add-rfq\", \"quotation\", \"offer\", \"b2bmarket\"];\n\t}\n\n\tcanActivate(\n\t\troute: ActivatedRouteSnapshot,\n\t\tstate: RouterStateSnapshot\n\t): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\t\tconst link: string = \"/tradebid/company-information\";\n\n\t\tconst splitURL = state.url.split(\"/\");\n\t\tlet blockedURL = \"\";\n\t\tsplitURL.forEach((item) => {\n\t\t\tif (this.queryParams.includes(item)) {\n\t\t\t\tblockedURL = item;\n\t\t\t}\n\t\t});\n\n\t\treturn this.tradebidService.getCompanyData().pipe(\n\t\t\tcatchError(() => {\n\t\t\t\tthis.tradebidService.updateCompanyInfo({ companyName: \"\" }).subscribe();\n\t\t\t\treturn this.tradebidService.getCompanyData();\n\t\t\t}),\n\t\t\tmap((companyData: any) => {\n\t\t\t\tconst requiredFields: string[] = [\n\t\t\t\t\t\"address\",\n\t\t\t\t\t\"annualRevenue\",\n\t\t\t\t\t\"companyDescription\",\n\t\t\t\t\t\"companyName\",\n\t\t\t\t\t\"country\",\n\t\t\t\t\t\"email\",\n\t\t\t\t\t\"employeesNumber\",\n\t\t\t\t\t\"phone\",\n\t\t\t\t\t\"position\",\n\t\t\t\t\t\"user\",\n\t\t\t\t\t\"yearOfFoundation\",\n\t\t\t\t];\n\t\t\t\tif (requiredFields.some((field) => companyData[field] === undefined)) {\n\t\t\t\t\tthis.router.navigate([link], { queryParams: { url: blockedURL } });\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tfor (const key in companyData) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t(companyData[key] === null || companyData[key] === undefined || companyData[key] === \"\") &&\n\t\t\t\t\t\tkey !== \"website\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (blockedURL === \"quotation\") {\n\t\t\t\t\t\t\tlocalStorage.setItem(\"quotationId\", state.url.split(\"/\")[3]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.router.navigate([link], { queryParams: { url: blockedURL } });\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (Array.isArray(companyData[key]) && requiredFields.includes(key)) {\n\t\t\t\t\t\tif (companyData[key].length === 0) {\n\t\t\t\t\t\t\tif (blockedURL === \"quotation\") {\n\t\t\t\t\t\t\t\tlocalStorage.setItem(\"quotationId\", state.url.split(\"/\")[3]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.router.navigate([link], { queryParams: { url: blockedURL } });\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t})\n\t\t);\n\t}\n}\n","export enum SectionInfoEnum {\n\tmarket = \"market\",\n\ttradebid = \"tradebid\",\n\tcargo = \"cargo\",\n\tnone = \"none\",\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, filter, Observable } from \"rxjs\";\nimport { ApiService } from \"../../../../../core/services/api/api.service\";\nimport { PaginationParamsModel } from \"../../../../../core/models/pagination-params.model\";\nimport { Category } from \"../../shared/models/category.model\";\nimport { CategoriesPaginationModel } from \"../../shared/models/categories-pagination.model\";\nimport { map } from \"rxjs/operators\";\n\nconst CATEGORIES_AMOUNT_PER_VIEW = 16;\n\n@Injectable({\n\tprovidedIn: \"root\",\n})\nexport class CategoryListingService {\n\tprivate listingCategoriesSource: BehaviorSubject<Category[]> = new BehaviorSubject<Category[]>([]);\n\tprivate listingCategoriesCount: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n\n\tconstructor(private apiService: ApiService) {\n\t\tthis.updatePresentCategoriesSource();\n\t}\n\n\tpublic getCategoriesViewAmount(): number {\n\t\treturn CATEGORIES_AMOUNT_PER_VIEW;\n\t}\n\n\tpublic get presentCategoriesSource$(): Observable<Category[]> {\n\t\treturn this.listingCategoriesSource.asObservable();\n\t}\n\n\tpublic get presentCategoriesCount$(): Observable<number> {\n\t\treturn this.listingCategoriesCount.asObservable();\n\t}\n\n\tpublic getPresentCategories(queryObj?: PaginationParamsModel): Observable<CategoriesPaginationModel> {\n\t\tif (queryObj) {\n\t\t\tconst {limit, offset} = queryObj;\n\t\t\treturn this.apiService\n\t\t\t\t.get<CategoriesPaginationModel>(\"categories/\", {\n\t\t\t\t\tparams: {limit, offset},\n\t\t\t\t})\n\t\t\t\t.pipe(filter((data) => !!data));\n\t\t}\n\t\treturn this.apiService.get<CategoriesPaginationModel>(\"categories/\").pipe(filter((data) => !!data));\n\t}\n\n\tpublic updatePresentCategoriesSource(queryParams?: PaginationParamsModel): void {\n\t\tthis.getPresentCategories(queryParams).subscribe(({categories, totalCount}: CategoriesPaginationModel) => {\n\t\t\tthis.listingCategoriesSource.next(categories);\n\t\t\tthis.listingCategoriesCount.next(totalCount);\n\t\t});\n\t}\n\n\tpublic getCategoryNamesArr(categoryIds: string[]): Observable<string[]> {\n\t\treturn this.getPresentCategories()\n\t\t\t.pipe(\n\t\t\t\tmap(({categories}) => {\n\t\t\t\t\treturn categories.reduce((acum, val) => {\n\t\t\t\t\t\tif (categoryIds.includes(val._id)) {\n\t\t\t\t\t\t\tacum.push(val.name)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tval.children.forEach(item => {\n\t\t\t\t\t\t\t\tcategoryIds.includes(item._id) ? acum.push(item.name) : null\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn acum\n\t\t\t\t\t}, [])\n\t\t\t\t})\n\t\t\t)\n\n\t}\n}\n","import { Injectable } from \"@angular/core\";\nimport {BehaviorSubject, Observable, of, publish, refCount, share, Subject} from \"rxjs\";\nimport { filter, first } from \"rxjs/operators\";\nimport { ApiService } from \"../../../core/services/api/api.service\";\n// import { AuthService } from \"../../../auth/services/auth/auth.service\";\n// import { io } from \"socket.io-client\";\nimport { environment } from \"../../../../environments/environment\";\nimport { PublicCompanyInfoModel } from \"../../../core/models/public-company-info.model\";\n\ninterface SelectItem {\n\tid: string;\n\tvalue: string;\n}\n\n@Injectable({\n\tprovidedIn: \"root\",\n})\nexport class TradebidService {\n\tprivate rfqListSource: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\n\tprivate totalLengthSource: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n\tprivate companyInfoSource: Subject<PublicCompanyInfoModel> = new Subject<PublicCompanyInfoModel>();\n\tprivate socket: any;\n\n\tconstructor(private apiService: ApiService) {\n\t}\n\n\tget rfqList$(): Observable<any> {\n\t\treturn this.rfqListSource.asObservable();\n\t}\n\n\tget rfqListLength$(): Observable<number> {\n\t\treturn this.totalLengthSource.asObservable();\n\t}\n\tget companyInfo$(): Observable<PublicCompanyInfoModel> {\n\t\treturn this.companyInfoSource.asObservable();\n\t}\n\n\tpublic getRfq(queryString: string): Observable<any> {\n\t\treturn this.apiService.get(`tradeBid/get-rfq${queryString}`);\n\t}\n\n\tpublic updateRfqList(queryString: string): void {\n\t\tthis.getRfq(queryString)\n\t\t\t.pipe(first())\n\t\t\t.subscribe((data) => {\n\t\t\t\tthis.rfqListSource.next(data.rfqList);\n\t\t\t\tthis.totalLengthSource.next(data.totalCount);\n\t\t\t});\n\t}\n\n\tpublic getRfqByIdAdmin(RfqId: string): Observable<any> {\n\t\treturn this.apiService.get<any>(`tradeBid/get-rfq-quotations-admin/${RfqId}`).pipe(filter((data) => !!data));\n\t}\n\n\tpublic getRfqById(rfqId: string): Observable<any> {\n\t\treturn this.apiService.get<any>(`tradeBid/rfq/${rfqId}`);\n\t}\n\n\tpublic createRFQ(body: any): Observable<any> {\n\t\treturn this.apiService.post(\"tradeBid/create-rfq\", body);\n\t}\n\n\tpublic getObservableForSelect(arr: string[]): Observable<SelectItem[]> {\n\t\treturn of(\n\t\t\tarr.map((el) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: el,\n\t\t\t\t\tvalue: el,\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t}\n\n\tpublic getCompanyInfoById(id: string): Observable<PublicCompanyInfoModel> {\n\t\treturn this.apiService.get<PublicCompanyInfoModel>(`tradeBid/getCompany/${id}`)\n\t\t\t.pipe(filter(data => !!data))\n\t}\n\n\tpublic createQuotation(body: any): Observable<any> {\n\t\treturn this.apiService.post(\"tradeBid/create-quotation\", body);\n\t}\n\n\tpublic getCompanyData(): Observable<PublicCompanyInfoModel> {\n\t\treturn this.apiService.get(\"tradeBid/get-company-data\");\n\t}\n\n\tpublic createCompanyInfo(body: any): Observable<any> {\n\t\treturn this.apiService.post(\"tradeBid/create-company-data\", body);\n\t}\n\n\tpublic updateCompanyInfo(body: any): Observable<any> {\n\t\treturn this.apiService.post(\"tradeBid/update-company-data\", body);\n\t}\n\n\tpublic updateCompanyDataAdmin(id: string, body: any): Observable<any> {\n\t\treturn this.apiService.put(\"tradeBid/update-company-data-admin\", {...body, id});\n\t}\n\n\tpublic sendMessageToSeller(rfq: any, message: string): void {\n\t\t// this.openConnection(this.authService.getToken());\n\n\t\tthis.socket.emit(\"message\", {\n\t\t\ttype: \"text\",\n\t\t\tbody: message,\n\t\t\tuserId: rfq.user._id,\n\t\t\trfqId: rfq._id,\n\t\t\ttypeRoom: \"rfq\",\n\t\t});\n\t}\n\n\tpublic updateRfqAdmin(data: any): Observable<any> {\n\t\treturn this.apiService.patch(`tradeBid/update-rfq-admin`, data);\n\t}\n\n\tprivate openConnection(token: any) {\n\t\tif (this.socket) {\n\t\t\tthis.socket.disconnect();\n\t\t}\n\n\t\t// this.socket = io(environment.apiUrl, {\n\t\t// \tpath: \"/chat\",\n\t\t// \tauth: {\n\t\t// \t\ttoken,\n\t\t// \t},\n\t\t// });\n\t}\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable, of } from \"rxjs\";\nimport { ApiService } from \"../../../core/services/api/api.service\";\nimport { first } from \"rxjs/operators\";\n\n@Injectable({\n\tprovidedIn: \"root\",\n})\nexport class BlogService {\n\tpublic readonly _articlesBehaviourSubject: BehaviorSubject<any[]>;\n\tpublic readonly _articles$: Observable<any>;\n\tpublic readonly _endpoint: string;\n\n\tprivate blogSource$: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\n\tprivate blogLength: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n\n\tconstructor(private readonly apiService: ApiService) {\n\t\tthis._articlesBehaviourSubject = new BehaviorSubject<any[]>([]);\n\t\tthis._articles$ = this._articlesBehaviourSubject.asObservable();\n\t\tthis._endpoint = \"blogs/\";\n\t}\n\n\tpublic getTags(str: any) {\n\t\treturn this.apiService.get(`tags?q=${str}`);\n\t}\n\n\tpublic createBlog(body: any) {\n\t\treturn this.apiService.post(\"blog/create\", body);\n\t}\n\n\tpublic uploadImage(images: any, id: string) {\n\t\treturn this.apiService.put(`blog/${id}/upload-image`, images);\n\t}\n\n\tpublic updateBlog(id: any, body: any) {\n\t\treturn this.apiService.put(`blog/${id}/update`, body);\n\t}\n\n\tpublic createArticle(body: any) {\n\t\treturn this.apiService.post(\"blog/create\", body);\n\t}\n\n\tpublic getComments(post: any) {\n\t\treturn this.apiService.get(`comment/${post}`);\n\t}\n\n\tpublic updateArticle(id: any, body: any) {\n\t\treturn this.apiService.put(`blog/${id}/update`, body);\n\t}\n\n\tpublic createComment(post: any, text: any) {\n\t\treturn this.apiService.post(`comment/create`, {\n\t\t\tpost,\n\t\t\ttext,\n\t\t});\n\t}\n\n\tpublic getArticleById(id: string): Observable<any> {\n\t\t// const artiecles = this._articlesBehaviourSubject.getValue();\n\t\t// const findedArticle = artiecles.find((articleToFind) => articleToFind.id === id);\n\t\t//\n\t\t// if (findedArticle) {\n\t\t// \treturn of(findedArticle);\n\t\t// }\n\n\t\treturn this.apiService.get(`blog/${id}`);\n\t}\n\n\tget blog$(): Observable<any> {\n\t\treturn this.blogSource$.asObservable();\n\t}\n\n\tget blogLength$(): Observable<any> {\n\t\treturn this.blogLength.asObservable();\n\t}\n\n\tpublic getArticles(queryString: string): Observable<any> {\n\t\treturn this.apiService.get(`blogs${queryString}`);\n\t}\n\n\tpublic updateBlogList(queryString: string = \"&limit=7&\"): void {\n\t\tthis.getArticles(queryString)\n\t\t\t.pipe(first())\n\t\t\t.subscribe((data) => {\n\t\t\t\tthis.blogSource$.next(data.posts);\n\t\t\t\tthis.blogLength.next(data.totalCount);\n\t\t\t});\n\t}\n\n\tpublic deleteArticleById(id: any) {\n\t\treturn this.apiService.delete(`blog/${id}/delete`);\n\t}\n}\n","import { Injectable } from \"@angular/core\";\nimport { map } from \"rxjs/operators\";\nimport { ApiService } from \"../../../core/services/api/api.service\";\n\n@Injectable({\n\tprovidedIn: \"root\",\n})\nexport class ChatService {\n\tconstructor(private readonly _apiService: ApiService) {}\n\n\tpublic getChatById(id: string) {\n\t\treturn this._apiService.get(`my/chat/${id}`).pipe(\n\t\t\tmap((chat: any) => (Array.isArray(chat) ? chat[0] : chat)),\n\t\t\tmap((chat) => ({\n\t\t\t\t...chat,\n\t\t\t\toffer: Array.isArray(chat.offer) ? chat.offer[0] : chat.offer,\n\t\t\t}))\n\t\t);\n\t}\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable, of } from \"rxjs\";\nimport { ApiService } from \"../../../core/services/api/api.service\";\n\n@Injectable({\n\tprovidedIn: \"root\",\n})\nexport class WikiService {\n\tpublic readonly _articlesBehaviourSubject: BehaviorSubject<any[]>;\n\tpublic readonly _articles$: Observable<any>;\n\tpublic readonly _endpoint: string;\n\n\tconstructor(private readonly _apiService: ApiService) {\n\t\tthis._articlesBehaviourSubject = new BehaviorSubject<any[]>([]);\n\t\tthis._articles$ = this._articlesBehaviourSubject.asObservable();\n\t\tthis._endpoint = \"posts/\";\n\t}\n\n\tpublic getTags(str: unknown) {\n\t\treturn this._apiService.get(`tags?q=${str}`);\n\t}\n\n\tpublic createArticle(body: unknown) {\n\t\treturn this._apiService.post(\"post/create\", body);\n\t}\n\n\tpublic getComments(post: string) {\n\t\treturn this._apiService.get(`comment/${post}`);\n\t}\n\n\tpublic updateArticle(id: any, body: unknown) {\n\t\treturn this._apiService.put(`post/${id}/update`, body);\n\t}\n\n\tpublic createComment(post: any, text: any) {\n\t\treturn this._apiService.post(`comment/create`, {\n\t\t\tpost,\n\t\t\ttext,\n\t\t});\n\t}\n\n\tpublic getArticleById(id: string): Observable<any> {\n\t\tconst articles = this._articlesBehaviourSubject.getValue();\n\t\tconst foundArticle = articles.find((articleToFind) => articleToFind.id === id);\n\n\t\tif (foundArticle) {\n\t\t\treturn of(foundArticle);\n\t\t}\n\n\t\treturn this._apiService.get(`post/${id}`);\n\t}\n\n\tpublic getArticles(queryString: any): Observable<any> {\n\t\treturn this._apiService.get(`posts${queryString}`);\n\t}\n\n\tpublic deleteArticleById(id: any) {\n\t\treturn this._apiService.delete(`post/${id}/delete`);\n\t}\n}\n","export enum BrowserStorageKeysEnum {\n\tFIRST_STEP_DATA = \"firstStepData\",\n\tBLOG_PREVIOUS_PAGE = \"blogPreviousPage\",\n\tLATEST_OFFERS_VISITED = \"visited\"\n}\n","import { HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {ApiService} from \"../../../../core/services/api/api.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomepageService {\n\n  constructor(private apiService: ApiService) { }\n\n\tpublic getCarouselItems(): Observable<any[]> {\n\t\treturn this.apiService.get('cache/first-screen-carousel');\n\t}\n\n\tpublic updateCarouselItems(data: any): Observable<any> {\n\t\treturn this.apiService.post('product/update-first-screen-carousel', data);\n\t}\n\n\tpublic updateSubscription(model: {\tcategoriesId: string[],\n\t\temail: string}): Observable<any> {\n\t\treturn this.apiService.post('subscription/update-user-subscription', model);\n\t}\n}\n","\nimport {AbstractControl, ValidationErrors, ValidatorFn} from \"@angular/forms\";\n\n\nexport const websiteProtocolRegex = /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)/\nexport const websiteRegex = /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)[a-zA-Z0-9]+([-.]{1}[a-zA-Z0-9]+)*\\.[a-zA-Z]{2,}(\\/.*)?$/;\nexport function siteLink(): ValidatorFn {\n\n\treturn (control: AbstractControl): ValidationErrors | null => {\n\t\tif (!control.value) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!websiteRegex.test(control.value.trim())) {\n\t\t\treturn { siteError: true };\n\t\t}\n\t\treturn null;\n\t}\n}\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, EventEmitter, Directive, Optional, Input, Output, NgModule } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a re-layout. This re-layout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * re-layout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nclass PendingCopy {\n    constructor(text, _document) {\n        this._document = _document;\n        const textarea = (this._textarea = this._document.createElement('textarea'));\n        const styles = textarea.style;\n        // Hide the element for display and accessibility. Set a fixed position so the page layout\n        // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n        // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n        styles.position = 'fixed';\n        styles.top = styles.opacity = '0';\n        styles.left = '-999em';\n        textarea.setAttribute('aria-hidden', 'true');\n        textarea.value = text;\n        // Making the textarea `readonly` prevents the screen from jumping on iOS Safari (see #25169).\n        textarea.readOnly = true;\n        this._document.body.appendChild(textarea);\n    }\n    /** Finishes copying the text. */\n    copy() {\n        const textarea = this._textarea;\n        let successful = false;\n        try {\n            // Older browsers could throw if copy is not supported.\n            if (textarea) {\n                const currentFocus = this._document.activeElement;\n                textarea.select();\n                textarea.setSelectionRange(0, textarea.value.length);\n                successful = this._document.execCommand('copy');\n                if (currentFocus) {\n                    currentFocus.focus();\n                }\n            }\n        }\n        catch (_a) {\n            // Discard error.\n            // Initial setting of {@code successful} will represent failure here.\n        }\n        return successful;\n    }\n    /** Cleans up DOM changes used to perform the copy operation. */\n    destroy() {\n        const textarea = this._textarea;\n        if (textarea) {\n            textarea.remove();\n            this._textarea = undefined;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A service for copying text to the clipboard.\n */\nclass Clipboard {\n    constructor(document) {\n        this._document = document;\n    }\n    /**\n     * Copies the provided text into the user's clipboard.\n     *\n     * @param text The string to copy.\n     * @returns Whether the operation was successful.\n     */\n    copy(text) {\n        const pendingCopy = this.beginCopy(text);\n        const successful = pendingCopy.copy();\n        pendingCopy.destroy();\n        return successful;\n    }\n    /**\n     * Prepares a string to be copied later. This is useful for large strings\n     * which take too long to successfully render and be copied in the same tick.\n     *\n     * The caller must call `destroy` on the returned `PendingCopy`.\n     *\n     * @param text The string to copy.\n     * @returns the pending copy operation.\n     */\n    beginCopy(text) {\n        return new PendingCopy(text, this._document);\n    }\n}\nClipboard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Clipboard, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nClipboard.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Clipboard, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: Clipboard, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options to `CdkCopyToClipboard`. */\nconst CDK_COPY_TO_CLIPBOARD_CONFIG = new InjectionToken('CDK_COPY_TO_CLIPBOARD_CONFIG');\n/**\n * Provides behavior for a button that when clicked copies content into user's\n * clipboard.\n */\nclass CdkCopyToClipboard {\n    constructor(_clipboard, _ngZone, config) {\n        this._clipboard = _clipboard;\n        this._ngZone = _ngZone;\n        /** Content to be copied. */\n        this.text = '';\n        /**\n         * How many times to attempt to copy the text. This may be necessary for longer text, because\n         * the browser needs time to fill an intermediate textarea element and copy the content.\n         */\n        this.attempts = 1;\n        /**\n         * Emits when some text is copied to the clipboard. The\n         * emitted value indicates whether copying was successful.\n         */\n        this.copied = new EventEmitter();\n        /** Copies that are currently being attempted. */\n        this._pending = new Set();\n        if (config && config.attempts != null) {\n            this.attempts = config.attempts;\n        }\n    }\n    /** Copies the current text to the clipboard. */\n    copy(attempts = this.attempts) {\n        if (attempts > 1) {\n            let remainingAttempts = attempts;\n            const pending = this._clipboard.beginCopy(this.text);\n            this._pending.add(pending);\n            const attempt = () => {\n                const successful = pending.copy();\n                if (!successful && --remainingAttempts && !this._destroyed) {\n                    // We use 1 for the timeout since it's more predictable when flushing in unit tests.\n                    this._currentTimeout = this._ngZone.runOutsideAngular(() => setTimeout(attempt, 1));\n                }\n                else {\n                    this._currentTimeout = null;\n                    this._pending.delete(pending);\n                    pending.destroy();\n                    this.copied.emit(successful);\n                }\n            };\n            attempt();\n        }\n        else {\n            this.copied.emit(this._clipboard.copy(this.text));\n        }\n    }\n    ngOnDestroy() {\n        if (this._currentTimeout) {\n            clearTimeout(this._currentTimeout);\n        }\n        this._pending.forEach(copy => copy.destroy());\n        this._pending.clear();\n        this._destroyed = true;\n    }\n}\nCdkCopyToClipboard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkCopyToClipboard, deps: [{ token: Clipboard }, { token: i0.NgZone }, { token: CDK_COPY_TO_CLIPBOARD_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCopyToClipboard.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: CdkCopyToClipboard, selector: \"[cdkCopyToClipboard]\", inputs: { text: [\"cdkCopyToClipboard\", \"text\"], attempts: [\"cdkCopyToClipboardAttempts\", \"attempts\"] }, outputs: { copied: \"cdkCopyToClipboardCopied\" }, host: { listeners: { \"click\": \"copy()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: CdkCopyToClipboard, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkCopyToClipboard]',\n                    host: {\n                        '(click)': 'copy()',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: Clipboard }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_COPY_TO_CLIPBOARD_CONFIG]\n                    }] }];\n    }, propDecorators: { text: [{\n                type: Input,\n                args: ['cdkCopyToClipboard']\n            }], attempts: [{\n                type: Input,\n                args: ['cdkCopyToClipboardAttempts']\n            }], copied: [{\n                type: Output,\n                args: ['cdkCopyToClipboardCopied']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ClipboardModule {\n}\nClipboardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ClipboardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nClipboardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: ClipboardModule, declarations: [CdkCopyToClipboard], exports: [CdkCopyToClipboard] });\nClipboardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ClipboardModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: ClipboardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CdkCopyToClipboard],\n                    exports: [CdkCopyToClipboard],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_COPY_TO_CLIPBOARD_CONFIG, CdkCopyToClipboard, Clipboard, ClipboardModule, PendingCopy };\n","import { InjectionToken } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst REQUEST = new InjectionToken('REQUEST');\nconst RESPONSE = new InjectionToken('RESPONSE');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { REQUEST, RESPONSE };\n"],"names":["DOCUMENT","i0","Injectable","Inject","InjectionToken","EventEmitter","Directive","Optional","Input","Output","NgModule","PendingCopy","constructor","text","_document","textarea","_textarea","createElement","styles","style","position","top","opacity","left","setAttribute","value","readOnly","body","appendChild","copy","successful","currentFocus","activeElement","select","setSelectionRange","length","execCommand","focus","_a","destroy","remove","undefined","Clipboard","document","pendingCopy","beginCopy","ɵfac","ɵprov","type","args","providedIn","decorators","CDK_COPY_TO_CLIPBOARD_CONFIG","CdkCopyToClipboard","_clipboard","_ngZone","config","attempts","copied","_pending","Set","remainingAttempts","pending","add","attempt","_destroyed","_currentTimeout","runOutsideAngular","setTimeout","delete","emit","ngOnDestroy","clearTimeout","forEach","clear","NgZone","ɵdir","selector","host","ClipboardModule","ɵmod","ɵinj","declarations","exports","REQUEST","RESPONSE"],"sourceRoot":"webpack:///","x_google_ignoreList":[16,17]}